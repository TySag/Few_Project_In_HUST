cscope 15 $HOME/Jos/lab5               0000344525
	@boot/boot.S

1 
	~<öc/mmu.h
>

3 #Sèπ 
the
 
CPU
: 
to
 32-
bô
 
¥Ÿe˘ed
 
mode
, 
jump
 
öto
 
C
.

4 #Thê
BIOS
 
lﬂds
 
this
 
code
 
‰om
 
the
 
fú°
 
£˘‹
 
of
Åhê
h¨d
 
disk
 
öto


5 #mem‹y 
©
 
physiˇl
 
addªss
 0x7c00 
™d
 
°¨ts
 
executög
 
ö
 
ªÆ
 
mode


6 #wôh %
cs
=0 %
ù
=7c00.

8 .
£t
 
	gPROT_MODE_CSEG
, 0x8 #kî√»
code
 
£gmít
 
	g£À˘‹


9 .
£t
 
	gPROT_MODE_DSEG
, 0x10 #kî√»
d©a
 
£gmít
 
	g£À˘‹


10 .
£t
 
	gCR0_PE_ON
, 0x1 #¥Ÿe˘ed 
mode
 
íabÀ
 
	gÊag


12 .
globl
 
°¨t


13 
	g°¨t
:

14 .
code16
 #As£mbÀ 16-
bô
 
mode


15 
˛i
 #DißbÀ 
öãºu±s


16 
˛d
 #Såög 
›î©i⁄s
 
ö¸emít


18 #Së 
up
 
the
 
imp‹è¡
 
d©a
 
£gmít
 
ªgi°îs
 (
DS
, 
ES
, 
SS
).

19 
	gx‹w
 %
	gax
,%ax #Segmíà
numbî
 
zîo


20 
	gmovw
 %
	gax
,%
	gds
 #-> 
D©a
 
Segmít


21 
	gmovw
 %
	gax
,%
	ges
 #-> 
Exåa
 
Segmít


22 
	gmovw
 %
	gax
,%
	gss
 #-> 
Sèck
 
	gSegmít


24 #E«bÀ 
A20
:

25 #F‹ 
backw¨ds
 
com∑tibûôy
 
wôh
 
the
 
óæõ°
 
PCs
, 
physiˇl


26 #addªs†
löe
 20 
is
 
tõd
 
low
, 
so
 
th©
 
addªs£s
 
highî
 
th™


27 #1
MB
 
wøp
 
¨ound
 
to
 
zîo
 
by
 . 
This
 
code
 
und€s
 
this
.

28 
	g£è20
.1:

29 
öb
 
$0x64
,%
	gÆ
 #Waô 
nŸ
 
busy


30 
ã°b
 
	g$0x2
,%
Æ


31 
jnz
 
	g£è20
.1

33 
movb
 
	g$0xd1
,%
	gÆ
 #0
	gxd1
 -> 
	gp‹t
 0x64

34 
	goutb
 %
	gÆ
,
$0x64


36 
	g£è20
.2:

37 
öb
 
$0x64
,%
	gÆ
 #Waô 
nŸ
 
busy


38 
ã°b
 
	g$0x2
,%
Æ


39 
jnz
 
	g£è20
.2

41 
movb
 
	g$0xdf
,%
	gÆ
 #0
	gxdf
 -> 
	gp‹t
 0x60

42 
	goutb
 %
	gÆ
,
	g$0x60


44 #Swôch 
‰om
 
ªÆ
 
to
 
¥Ÿe˘ed
 
mode
, 
usög
 
a
 
boŸ°øp
 
GDT


45 #™d 
£gmít
 
å™¶©i⁄
 
th©
 
makes
 
vútuÆ
 
addªs£s


46 #idítiˇ»
to
 
theú
 
physiˇl
 
addªs£s
, 
so
 
th©
 
the


47 #ef„˘ivê
mem‹y
 
m≠
 
d€s
 
nŸ
 
ch™ge
 
durög
 
the
 .

48 
lgdt
 
gdtdesc


49 
	gmovl
 %
	g¸0
, %
óx


50 
‹l
 
	g$CR0_PE_ON
, %
óx


51 
	gmovl
 %
	góx
, %
	g¸0


53 #Jum∞
to
 
√xt
 
ö°ru˘i⁄
, 
but
 
ö
 32-
bô
 
code
 
£gmít
.

54 #Swôche†
¥o˚ss‹
 
öto
 32-
bô
 
mode
.

55 
ljmp
 
	g$PROT_MODE_CSEG
, 
	g$¥Ÿc£g


57 .
	gcode32
 #As£mbÀ 32-
bô
 
mode


58 
	g¥Ÿc£g
:

59 #Së 
up
 
the
 
¥Ÿe˘ed
-
mode
 
d©a
 
£gmít
 
ªgi°îs


60 
movw
 
$PROT_MODE_DSEG
, %
	gax
 #Ou∏
d©a
 
£gmít
 
£À˘‹


61 
	gmovw
 %
	gax
, %
	gds
 #-> 
	gDS
: 
D©a
 
Segmít


62 
movw
 %
ax
, %
	ges
 #-> 
	gES
: 
Exåa
 
Segmít


63 
movw
 %
ax
, %
	gfs
 #-> 
FS


64 
	gmovw
 %
	gax
, %
	ggs
 #-> 
GS


65 
	gmovw
 %
	gax
, %
	gss
 #-> 
	gSS
: 
Sèck
 
Segmít


67 #Së 
up
 
the
 
°ack
 
poöãr
 
™d
 
ˇŒ
 
öto
 
C
.

68 
movl
 
$°¨t
, %
e•


69 
ˇŒ
 
	gboŸmaö


71 #I‡
boŸmaö
 
ªtu∫s
 (
ô
 
shouldn
't),Üoop.

72 
•ö
:

73 
jmp
 
•ö


75 #BoŸ°ø∞
GDT


76 .
p2Æign
 2 #f‹˚ 4 
byã
 
Æignmít


77 
gdt
:

78 
SEG_NULL
 #nuŒ 
£g


79 
SEG
(
STA_X
|
STA_R
, 0x0, 0xffffffffË#codê
£g


80 
	$SEG
(
STA_W
, 0x0, 0xffffffffË#d©®
£g


82 
gdtdesc
:

83 .
w‹d
 0x17 #sizeof(
gdt
) - 1

84 .
gdt
 #address gdt

	@boot/main.c

1 
	~<öc/x86.h
>

2 
	~<öc/ñf.h
>

32 
	#SECTSIZE
 512

	)

33 
	#ELFHDR
 ((
Elf
 *) 0x10000)

34 

	)

35 
ªad£˘
(*, 
uöt32_t
);

36 
ªad£g
(
uöt32_t
, uint32_t, uint32_t);

39 
	$boŸmaö
()

41 
Proghdr
 *
ph
, *
ïh
;

44 
	`ªad£g
((
uöt32_t
Ë
ELFHDR
, 
SECTSIZE
*8, 0);

47 i‡(
ELFHDR
->
e_magic
 !
ELF_MAGIC
)

48 
bad
;

51 
ph
 = (
Proghdr
 *Ë((
uöt8_t
 *Ë
ELFHDR
 + ELFHDR->
e_phoff
);

52 
ïh
 = 
ph
 + 
ELFHDR
->
e_phnum
;

53 ; 
ph
 < 
ïh
;Öh++)

54 
	`ªad£g
(
ph
->
p_va
,Öh->
p_memsz
,Öh->
p_off£t
);

58 (((*)()Ë(
ELFHDR
->
e_íåy
 & 0xFFFFFF))();

60 
bad
:

61 
	`outw
(0x8A00, 0x8A00);

62 
	`outw
(0x8A00, 0x8E00);

65 
	}
}

70 
	$ªad£g
(
uöt32_t
 
va
, uöt32_à
cou¡
, uöt32_à
off£t
)

72 
uöt32_t
 
íd_va
;

74 
va
 &= 0xFFFFFF;

75 
íd_va
 = 
va
 + 
cou¡
;

78 
va
 &~(
SECTSIZE
 - 1);

81 
off£t
 = (off£à/ 
SECTSIZE
) + 1;

86 
va
 < 
íd_va
) {

87 
	`ªad£˘
((
uöt8_t
*Ë
va
, 
off£t
);

88 
va
 +
SECTSIZE
;

89 
off£t
++;

91 
	}
}

94 
	$waôdisk
()

97 (
	`öb
(0x1F7) & 0xC0) != 0x40)

99 
	}
}

102 
	$ªad£˘
(*
d°
, 
uöt32_t
 
off£t
)

105 
	`waôdisk
();

107 
	`outb
(0x1F2, 1);

108 
	`outb
(0x1F3, 
off£t
);

109 
	`outb
(0x1F4, 
off£t
 >> 8);

110 
	`outb
(0x1F5, 
off£t
 >> 16);

111 
	`outb
(0x1F6, (
off£t
 >> 24) | 0xE0);

112 
	`outb
(0x1F7, 0x20);

115 
	`waôdisk
();

118 
	`ö¶
(0x1F0, 
d°
, 
SECTSIZE
/4);

119 
	}
}

	@fs/fs.c

1 
	~<öc/°rög.h
>

3 
	~"fs.h
"

5 
Su≥r
 *
	gsu≥r
;

6 
uöt32_t
 *
	gbôm≠
;

8 
fûe_Êush
(
Fûe
 *
f
);

9 
boﬁ
 
block_is_‰ì
(
uöt32_t
 
blockno
);

13 
	$diskaddr
(
uöt32_t
 
blockno
)

15 i‡(
su≥r
 && 
blockno
 >su≥r->
s_nblocks
)

16 
	`∑nic
("bad blockÇumbî %08x i¿diskaddr", 
blockno
);

17  (*Ë(
DISKMAP
 + 
blockno
 * 
BLKSIZE
);

18 
	}
}

21 
boﬁ


22 
	$va_is_m≠≥d
(*
va
)

24  (
vpd
[
	`PDX
(
va
)] & 
PTE_P
Ë&& (
v±
[
	`VPN
(va)] & PTE_P);

25 
	}
}

28 
boﬁ


29 
	$block_is_m≠≥d
(
uöt32_t
 
blockno
)

31 *
va
 = 
	`diskaddr
(
blockno
);

32  
	`va_is_m≠≥d
(
va
) && va != 0;

33 
	}
}

36 
boﬁ


37 
	$va_is_dúty
(*
va
)

39  (
v±
[
	`VPN
(
va
)] & 
PTE_D
) != 0;

40 
	}
}

43 
boﬁ


44 
	$block_is_dúty
(
uöt32_t
 
blockno
)

46 *
va
 = 
	`diskaddr
(
blockno
);

47  
	`va_is_m≠≥d
(
va
Ë&& 
	`va_is_dúty
(va);

48 
	}
}

52 
	$m≠_block
(
uöt32_t
 
blockno
)

54 i‡(
	`block_is_m≠≥d
(
blockno
))

56  
	`sys_∑ge_Æloc
(0, 
	`diskaddr
(
blockno
), 
PTE_U
|
PTE_P
|
PTE_W
);

57 
	}
}

66 
	$ªad_block
(
uöt32_t
 
blockno
, **
blk
)

68 
r
;

69 *
addr
;

71 i‡(
su≥r
 && 
blockno
 >su≥r->
s_nblocks
)

72 
	`∑nic
("ªadögÇ⁄-exi°íàblock %08x\n", 
blockno
);

74 i‡(
bôm≠
 && 
	`block_is_‰ì
(
blockno
))

75 
	`∑nic
("ªadög fªêblock %08x\n", 
blockno
);

78 
	`∑nic
("read_blockÇot implemented");

80 
	}
}

87 
	$wrôe_block
(
uöt32_t
 
blockno
)

89 *
addr
;

91 i‡(!
	`block_is_m≠≥d
(
blockno
))

92 
	`∑nic
("wrôêunm≠≥d block %08x", 
blockno
);

96 
	`∑nic
("write_blockÇot implemented");

97 
	}
}

101 
	$unm≠_block
(
uöt32_t
 
blockno
)

103 
r
;

105 i‡(!
	`block_is_m≠≥d
(
blockno
))

108 
	`as£π
(
	`block_is_‰ì
(
blockno
Ë|| !
	`block_is_dúty
(blockno));

110 i‡((
r
 = 
	`sys_∑ge_unm≠
(0, 
	`diskaddr
(
blockno
))) < 0)

111 
	`∑nic
("unm≠_block: sys_mem_unm≠: %e", 
r
);

112 
	`as£π
(!
	`block_is_m≠≥d
(
blockno
));

113 
	}
}

117 
boﬁ


118 
	$block_is_‰ì
(
uöt32_t
 
blockno
)

120 i‡(
su≥r
 =0 || 
blockno
 >su≥r->
s_nblocks
)

122 i‡(
bôm≠
[
blockno
 / 32] & (1 << (blockno % 32)))

125 
	}
}

129 
	$‰ì_block
(
uöt32_t
 
blockno
)

132 i‡(
blockno
 == 0)

133 
	`∑nic
("attemptÅo free zero block");

134 
bôm≠
[
blockno
/32] |= 1<<(blockno%32);

135 
	}
}

142 
	$Æloc_block_num
()

145 
	`∑nic
("alloc_block_numÇot implemented");

146  -
E_NO_DISK
;

147 
	}
}

152 
	$Æloc_block
()

154 
r
, 
bno
;

156 i‡((
r
 = 
	`Æloc_block_num
()) < 0)

157  
r
;

158 
bno
 = 
r
;

160 i‡((
r
 = 
	`m≠_block
(
bno
)) < 0) {

161 
	`‰ì_block
(
bno
);

162  
r
;

164  
bno
;

165 
	}
}

169 
	$ªad_su≥r
()

171 
r
;

172 *
blk
;

174 i‡((
r
 = 
	`ªad_block
(1, &
blk
)) < 0)

175 
	`∑nic
("ˇ¬ŸÑód su≥rblock: %e", 
r
);

177 
su≥r
 = (
Su≥r
*Ë
blk
;

178 i‡(
su≥r
->
s_magic
 !
FS_MAGIC
)

179 
	`∑nic
("bad file system magicÇumber");

181 i‡(
su≥r
->
s_nblocks
 > 
DISKSIZE
/
BLKSIZE
)

182 
	`∑nic
("file system isÅooÜarge");

184 
	`˝rötf
("superblock is good\n");

185 
	}
}

200 
	$ªad_bôm≠
()

202 
r
;

203 
uöt32_t
 
i
;

204 *
blk
;

214 
	`∑nic
("read_bitmapÇot implemented");

217 
	`as£π
(!
	`block_is_‰ì
(0));

218 
	`as£π
(!
	`block_is_‰ì
(1));

219 
	`as£π
(
bôm≠
);

224 
	`˝rötf
("read_bitmap is good\n");

225 
	}
}

229 
	$check_wrôe_block
()

231 
su≥r
 = 0;

234 
	`ªad_block
(0, 0);

235 
	`memmove
(
	`diskaddr
(0), diskaddr(1), 
PGSIZE
);

238 
	`°r˝y
(
	`diskaddr
(1), "OOPS!\n");

239 
	`wrôe_block
(1);

240 
	`as£π
(
	`block_is_m≠≥d
(1));

241 
	`as£π
(!
	`va_is_dúty
(
	`diskaddr
(1)));

244 
	`sys_∑ge_unm≠
(0, 
	`diskaddr
(1));

245 
	`as£π
(!
	`block_is_m≠≥d
(1));

248 
	`ªad_block
(1, 0);

249 
	`as£π
(
	`°rcmp
(
	`diskaddr
(1), "OOPS!\n") == 0);

252 
	`memmove
(
	`diskaddr
(1), diskaddr(0), 
PGSIZE
);

253 
	`wrôe_block
(1);

254 
su≥r
 = (
Su≥r
*)
	`diskaddr
(1);

256 
	`˝rötf
("write_block is good\n");

257 
	}
}

261 
	$fs_öô
()

263 
	`°©ic_as£π
((
Fûe
) == 256);

266 i‡(
	`ide_¥obe_disk1
())

267 
	`ide_£t_disk
(1);

269 
	`ide_£t_disk
(0);

271 
	`ªad_su≥r
();

272 
	`check_wrôe_block
();

273 
	`ªad_bôm≠
();

274 
	}
}

293 
	$fûe_block_wÆk
(
Fûe
 *
f
, 
uöt32_t
 
fûebno
, uöt32_à**
µdiskbno
, 
boﬁ
 
Æloc
)

295 
r
;

296 
uöt32_t
 *
±r
;

297 *
blk
;

299 i‡(
fûebno
 < 
NDIRECT
)

300 
±r
 = &
f
->
f_dúe˘
[
fûebno
];

301 i‡(
fûebno
 < 
NINDIRECT
) {

302 i‡(
f
->
f_ödúe˘
 == 0) {

303 i‡(
Æloc
 == 0)

304  -
E_NOT_FOUND
;

305 i‡((
r
 = 
	`Æloc_block
()) < 0)

306  
r
;

307 
f
->
f_ödúe˘
 = 
r
;

309 
Æloc
 = 0;

310 i‡((
r
 = 
	`ªad_block
(
f
->
f_ödúe˘
, &
blk
)) < 0)

311  
r
;

312 
	`as£π
(
blk
 != 0);

313 i‡(
Æloc
)

314 
	`mem£t
(
blk
, 0, 
BLKSIZE
);

315 
±r
 = (
uöt32_t
*)
blk
 + 
fûebno
;

317  -
E_INVAL
;

319 *
µdiskbno
 = 
±r
;

321 
	}
}

333 
	$fûe_m≠_block
(
Fûe
 *
f
, 
uöt32_t
 
fûebno
, uöt32_à*
diskbno
, 
boﬁ
 
Æloc
)

335 
r
;

336 
uöt32_t
 *
±r
;

338 i‡((
r
 = 
	`fûe_block_wÆk
(
f
, 
fûebno
, &
±r
, 
Æloc
)) < 0)

339  
r
;

340 i‡(*
±r
 == 0) {

341 i‡(
Æloc
 == 0)

342  -
E_NOT_FOUND
;

343 i‡((
r
 = 
	`Æloc_block
()) < 0)

344  
r
;

345 *
±r
 = 
r
;

347 *
diskbno
 = *
±r
;

349 
	}
}

354 
	$fûe_˛ór_block
(
Fûe
 *
f
, 
uöt32_t
 
fûebno
)

356 
r
;

357 
uöt32_t
 *
±r
;

359 i‡((
r
 = 
	`fûe_block_wÆk
(
f
, 
fûebno
, &
±r
, 0)) < 0)

360  
r
;

361 i‡(*
±r
) {

362 
	`‰ì_block
(*
±r
);

363 *
±r
 = 0;

366 
	}
}

372 
	$fûe_gë_block
(
Fûe
 *
f
, 
uöt32_t
 
fûebno
, **
blk
)

374 
r
;

375 
uöt32_t
 
diskbno
;

380 
	`∑nic
("file_get_blockÇot implemented");

382 
	}
}

387 
	$fûe_dúty
(
Fûe
 *
f
, 
off_t
 
off£t
)

389 
r
;

390 *
blk
;

392 i‡((
r
 = 
	`fûe_gë_block
(
f
, 
off£t
/
BLKSIZE
, &
blk
)) < 0)

393  
r
;

394 *(vﬁ©ûê*)
blk
 = *(volatile *)blk;

396 
	}
}

400 
	$dú_lookup
(
Fûe
 *
dú
, c⁄° *
«me
, Fûê**
fûe
)

402 
r
;

403 
uöt32_t
 
i
, 
j
, 
nblock
;

404 *
blk
;

405 
Fûe
 *
f
;

410 
	`as£π
((
dú
->
f_size
 % 
BLKSIZE
) == 0);

411 
nblock
 = 
dú
->
f_size
 / 
BLKSIZE
;

412 
i
 = 0; i < 
nblock
; i++) {

413 i‡((
r
 = 
	`fûe_gë_block
(
dú
, 
i
, &
blk
)) < 0)

414  
r
;

415 
f
 = (
Fûe
*Ë
blk
;

416 
j
 = 0; j < 
BLKFILES
; j++)

417 i‡(
	`°rcmp
(
f
[
j
].
f_«me
, 
«me
) == 0) {

418 *
fûe
 = &
f
[
j
];

419 
f
[
j
].
f_dú
 = 
dú
;

423  -
E_NOT_FOUND
;

424 
	}
}

428 
	$dú_Æloc_fûe
(
Fûe
 *
dú
, Fûê**
fûe
)

430 
r
;

431 
uöt32_t
 
nblock
, 
i
, 
j
;

432 *
blk
;

433 
Fûe
 *
f
;

435 
	`as£π
((
dú
->
f_size
 % 
BLKSIZE
) == 0);

436 
nblock
 = 
dú
->
f_size
 / 
BLKSIZE
;

437 
i
 = 0; i < 
nblock
; i++) {

438 i‡((
r
 = 
	`fûe_gë_block
(
dú
, 
i
, &
blk
)) < 0)

439  
r
;

440 
f
 = (
Fûe
*Ë
blk
;

441 
j
 = 0; j < 
BLKFILES
; j++)

442 i‡(
f
[
j
].
f_«me
[0] == '\0') {

443 *
fûe
 = &
f
[
j
];

444 
f
[
j
].
f_dú
 = 
dú
;

448 
dú
->
f_size
 +
BLKSIZE
;

449 i‡((
r
 = 
	`fûe_gë_block
(
dú
, 
i
, &
blk
)) < 0)

450  
r
;

451 
f
 = (
Fûe
*Ë
blk
;

452 *
fûe
 = &
f
[0];

453 
f
[0].
f_dú
 = 
dú
;

455 
	}
}

458 
ölöe
 const *

459 
	$skù_¶ash
(c⁄° *
p
)

461 *
p
 == '/')

462 
p
++;

463  
p
;

464 
	}
}

473 
	$wÆk_∑th
(c⁄° *
∑th
, 
Fûe
 **
pdú
, Fûê**
pf
, *
œ°ñem
)

475 c⁄° *
p
;

476 
«me
[
MAXNAMELEN
];

477 
Fûe
 *
dú
, *
f
;

478 
r
;

482 
∑th
 = 
	`skù_¶ash
(path);

483 
f
 = &
su≥r
->
s_roŸ
;

484 
dú
 = 0;

485 
«me
[0] = 0;

487 i‡(
pdú
)

488 *
pdú
 = 0;

489 *
pf
 = 0;

490 *
∑th
 != '\0') {

491 
dú
 = 
f
;

492 
p
 = 
∑th
;

493 *
∑th
 != '/' && *path != '\0')

494 
∑th
++;

495 i‡(
∑th
 - 
p
 >
MAXNAMELEN
)

496  -
E_BAD_PATH
;

497 
	`memmove
(
«me
, 
p
, 
∑th
 -Ö);

498 
«me
[
∑th
 - 
p
] = '\0';

499 
∑th
 = 
	`skù_¶ash
(path);

501 i‡(
dú
->
f_ty≥
 !
FTYPE_DIR
)

502  -
E_NOT_FOUND
;

504 i‡((
r
 = 
	`dú_lookup
(
dú
, 
«me
, &
f
)) < 0) {

505 i‡(
r
 =-
E_NOT_FOUND
 && *
∑th
 == '\0') {

506 i‡(
pdú
)

507 *
pdú
 = 
dú
;

508 i‡(
œ°ñem
)

509 
	`°r˝y
(
œ°ñem
, 
«me
);

510 *
pf
 = 0;

512  
r
;

516 i‡(
pdú
)

517 *
pdú
 = 
dú
;

518 *
pf
 = 
f
;

520 
	}
}

525 
	$fûe_¸óã
(c⁄° *
∑th
, 
Fûe
 **
pf
)

527 
«me
[
MAXNAMELEN
];

528 
r
;

529 
Fûe
 *
dú
, *
f
;

531 i‡((
r
 = 
	`wÆk_∑th
(
∑th
, &
dú
, &
f
, 
«me
)) == 0)

532  -
E_FILE_EXISTS
;

533 i‡(
r
 !-
E_NOT_FOUND
 || 
dú
 == 0)

534  
r
;

535 i‡(
	`dú_Æloc_fûe
(
dú
, &
f
) < 0)

536  
r
;

537 
	`°r˝y
(
f
->
f_«me
, 
«me
);

538 *
pf
 = 
f
;

540 
	}
}

545 
	$fûe_›í
(c⁄° *
∑th
, 
Fûe
 **
pf
)

549 
	`∑nic
("file_openÇot implemented");

551 
	}
}

563 
	$fûe_åunˇã_blocks
(
Fûe
 *
f
, 
off_t
 
√wsize
)

565 
r
;

566 
uöt32_t
 
bno
, 
ﬁd_nblocks
, 
√w_nblocks
;

570 
	`∑nic
("file_truncate_blocksÇot implemented");

571 
	}
}

574 
	$fûe_£t_size
(
Fûe
 *
f
, 
off_t
 
√wsize
)

576 i‡(
f
->
f_size
 > 
√wsize
)

577 
	`fûe_åunˇã_blocks
(
f
, 
√wsize
);

578 
f
->
f_size
 = 
√wsize
;

579 i‡(
f
->
f_dú
)

580 
	`fûe_Êush
(
f
->
f_dú
);

582 
	}
}

591 
	$fûe_Êush
(
Fûe
 *
f
)

594 
	`∑nic
("file_flushÇot implemented");

595 
	}
}

599 
	$fs_sync
()

601 
i
;

602 
i
 = 0; i < 
su≥r
->
s_nblocks
; i++)

603 i‡(
	`block_is_dúty
(
i
))

604 
	`wrôe_block
(
i
);

605 
	}
}

609 
	$fûe_˛o£
(
Fûe
 *
f
)

611 
	`fûe_Êush
(
f
);

612 i‡(
f
->
f_dú
)

613 
	`fûe_Êush
(
f
->
f_dú
);

614 
	}
}

618 
	$fûe_ªmove
(c⁄° *
∑th
)

620 
r
;

621 
Fûe
 *
f
;

623 i‡((
r
 = 
	`wÆk_∑th
(
∑th
, 0, &
f
, 0)) < 0)

624  
r
;

626 
	`fûe_åunˇã_blocks
(
f
, 0);

627 
f
->
f_«me
[0] = '\0';

628 
f
->
f_size
 = 0;

629 i‡(
f
->
f_dú
)

630 
	`fûe_Êush
(
f
->
f_dú
);

633 
	}
}

	@fs/fs.h

1 
	~<öc/fs.h
>

2 
	~<öc/lib.h
>

4 
	#SECTSIZE
 512

5 
	#BLKSECTS
 (
BLKSIZE
 / 
SECTSIZE
)

6 

	)

9 
	#DISKMAP
 0x10000000

	)

12 
	#DISKSIZE
 0xC0000000

	)

15 
boﬁ
 
ide_¥obe_disk1
();

16 
ide_£t_disk
(
diskno
);

17 
ide_ªad
(
uöt32_t
 
£˙o
, *
d°
, 
size_t
 
n£cs
);

18 
ide_wrôe
(
uöt32_t
 
£˙o
, c⁄° *
§c
, 
size_t
 
n£cs
);

21 
fûe_¸óã
(c⁄° *
∑th
, 
Fûe
 **
f
);

22 
fûe_›í
(c⁄° *
∑th
, 
Fûe
 **
f
);

23 
fûe_gë_block
(
Fûe
 *
f
, 
uöt32_t
 
fûe_blockno
, **
pblk
);

24 
fûe_£t_size
(
Fûe
 *
f
, 
off_t
 
√wsize
);

25 
fûe_Êush
(
Fûe
 *
f
);

26 
fûe_˛o£
(
Fûe
 *
f
);

27 
fûe_ªmove
(c⁄° *
∑th
);

28 
fs_öô
();

29 
fûe_dúty
(
Fûe
 *
f
, 
off_t
 
off£t
);

30 
fs_sync
();

32 
uöt32_t
 *
bôm≠
;

33 
m≠_block
(
uöt32_t
);

34 
Æloc_block
();

37 
fs_ã°
();

	@fs/fsformat.c

5 
	#_BSD_EXTENSION


	)

8 
	#off_t
 
xxx_off_t


	)

9 
	#boﬁ
 
xxx_boﬁ


	)

10 
	~<°dio.h
>

11 
	~<°dlib.h
>

12 
	~<f˙é.h
>

13 
	~<uni°d.h
>

14 
	~<öây≥s.h
>

15 
	~<sys/°©.h
>

16 
	~<°rög.h
>

17 
	~<as£π.h
>

18 
	~<î∫o.h
>

19 
	~<sys/ty≥s.h
>

20 
	~<dúít.h
>

21 
	~<limôs.h
>

22 #unde‡
off_t


23 #unde‡
boﬁ


27 
	#JOS_INC_TYPES_H


	)

29 
uöt32_t
 
	tphyßddr_t
;

30 
uöt32_t
 
	toff_t
;

31 
	tboﬁ
;

33 
	~<öc/mmu.h
>

34 
	~<öc/fs.h
>

36 
	#√Àm
(
x
Ë((xË/ ((x)[0]))

	)

37 
Su≥r
 
	tSu≥r
;

38 
Fûe
 
	tFûe
;

40 
Su≥r
 
	gsu≥r
;

41 
	gdiskfd
;

42 
uöt32_t
 
	gnblocks
;

43 
uöt32_t
 
	gnbôblock
;

44 
uöt32_t
 
	g√xtb
;

47 
	mBLOCK_SUPER
,

48 
	mBLOCK_DIR
,

49 
	mBLOCK_FILE
,

50 
	mBLOCK_BITS


53 
	sBlock


55 
uöt32_t
 
	mbusy
;

56 
uöt32_t
 
	mbno
;

57 
uöt32_t
 
	mu£d
;

58 
uöt8_t
 
	mbuf
[
BLKSIZE
];

59 
uöt32_t
 
	mty≥
;

62 
Block
 
	gˇche
[16];

64 
ssize_t


65 
	$ªadn
(
f
, *
av
, 
size_t
 
n
)

67 
uöt8_t
 *
a
;

68 
size_t
 
t
;

70 
a
 = 
av
;

71 
t
 = 0;

72 
t
 < 
n
) {

73 
size_t
 
m
 = 
	`ªad
(
f
, 
a
 + 
t
, 
n
 -Å);

74 i‡(
m
 <= 0) {

75 i‡(
t
 == 0)

76  
m
;

79 
t
 +
m
;

81  
t
;

82 
	}
}

86 
	$swizzÀ
(
uöt32_t
 *
x
)

88 
uöt32_t
 
y
;

89 
uöt8_t
 *
z
;

91 
z
 = (
uöt8_t
*Ë
x
;

92 
y
 = *
x
;

93 
z
[0] = 
y
 & 0xFF;

94 
z
[1] = (
y
 >> 8) & 0xFF;

95 
z
[2] = (
y
 >> 16) & 0xFF;

96 
z
[3] = (
y
 >> 24) & 0xFF;

97 
	}
}

100 
	$swizzÀfûe
(
Fûe
 *
f
)

102 
i
;

104 i‡(
f
->
f_«me
[0] == 0)

106 
	`swizzÀ
((
uöt32_t
*Ë&
f
->
f_size
);

107 
	`swizzÀ
(&
f
->
f_ty≥
);

108 
i
 = 0; i < 
NDIRECT
; i++)

109 
	`swizzÀ
(&
f
->
f_dúe˘
[
i
]);

110 
	`swizzÀ
(&
f
->
f_ödúe˘
);

111 
	}
}

114 
	$swizzÀblock
(
Block
 *
b
)

116 
i
;

117 
Su≥r
 *
s
;

118 
Fûe
 *
f
;

119 
uöt32_t
 *
u
;

121 
b
->
ty≥
) {

122 
BLOCK_SUPER
:

123 
s
 = (
Su≥r
*Ë
b
->
buf
;

124 
	`swizzÀ
(&
s
->
s_magic
);

125 
	`swizzÀ
(&
s
->
s_nblocks
);

126 
	`swizzÀfûe
(&
s
->
s_roŸ
);

128 
BLOCK_DIR
:

129 
f
 = (
Fûe
*Ë
b
->
buf
;

130 
i
 = 0; i < 
BLKFILES
; i++)

131 
	`swizzÀfûe
(
f
 + 
i
);

133 
BLOCK_BITS
:

134 
u
 = (
uöt32_t
*Ë
b
->
buf
;

135 
i
 = 0; i < 
BLKSIZE
 / 4; i++)

136 
	`swizzÀ
(
u
 + 
i
);

139 
	}
}

142 
	$Êushb
(
Block
 *
b
)

144 
	`swizzÀblock
(
b
);

145 i‡(
	`l£ek
(
diskfd
, 
b
->
bno
 * 
BLKSIZE
, 0) < 0

146 || 
	`wrôe
(
diskfd
, 
b
->
buf
, 
BLKSIZE
) != BLKSIZE) {

147 
	`≥º‹
("flushb");

148 
	`Ârötf
(
°dîr
, "\n");

149 
	`ab‹t
();

151 
	`swizzÀblock
(
b
);

152 
	}
}

154 
Block
*

155 
	$gëblk
(
uöt32_t
 
bno
, 
˛r
, uöt32_à
ty≥
)

157 
i
, 
Àa°
;

158 
t
 = 1;

159 
Block
 *
b
;

161 i‡(
bno
 >
nblocks
) {

162 
	`Ârötf
(
°dîr
, "©ãm±Åÿac˚s†∑°Énd o‡disk bno=%d\n", 
bno
);

163 
	`ab‹t
();

166 
Àa°
 = -1;

167 
i
 = 0; i < 
	`√Àm
(
ˇche
); i++) {

168 i‡(
ˇche
[
i
].
bno
 == bno) {

169 
b
 = &
ˇche
[
i
];

170 
out
;

172 i‡(!
ˇche
[
i
].
busy


173 && (
Àa°
 =-1 || 
ˇche
[
i
].
u£d
 < cache[least].used))

174 
Àa°
 = 
i
;

177 i‡(
Àa°
 == -1) {

178 
	`Ârötf
(
°dîr
, "panic: block cache full\n");

179 
	`ab‹t
();

182 
b
 = &
ˇche
[
Àa°
];

183 i‡(
b
->
u£d
)

184 
	`Êushb
(
b
);

186 i‡(
	`l£ek
(
diskfd
, 
bno
*
BLKSIZE
, 0) < 0

187 || 
	`ªadn
(
diskfd
, 
b
->
buf
, 
BLKSIZE
) != BLKSIZE) {

188 
	`Ârötf
(
°dîr
, "ªad block %d: ", 
bno
);

189 
	`≥º‹
("");

190 
	`Ârötf
(
°dîr
, "\n");

191 
	`ab‹t
();

193 
b
->
bno
 = bno;

194 i‡(!
˛r
)

195 
	`swizzÀblock
(
b
);

197 
out
:

198 i‡(
˛r
)

199 
	`mem£t
(
b
->
buf
, 0, (b->buf));

200 
b
->
u£d
 = ++
t
;

201 i‡(
b
->
busy
) {

202 
	`Ârötf
(
°dîr
, "∑nic: block #%d i†busy\n", 
b
->
bno
);

203 
	`ab‹t
();

208 
b
->
ty≥
 =Åype;

209 
b
->
busy
 = 1;

210  
b
;

211 
	}
}

214 
	$putblk
(
Block
 *
b
)

216 
b
->
busy
 = 0;

217 
	}
}

220 
	$›ídisk
(c⁄° *
«me
)

222 
i
, 
r
;

223 
Block
 *
b
;

225 i‡((
diskfd
 = 
	`›í
(
«me
, 
O_RDWR
 | 
O_CREAT
, 0666)) < 0) {

226 
	`Ârötf
(
°dîr
, "›í %s: ", 
«me
);

227 
	`≥º‹
("");

228 
	`Ârötf
(
°dîr
, "\n");

229 
	`ab‹t
();

232 i‡((
r
 = 
	`·runˇã
(
diskfd
, 0)) < 0

233 || (
r
 = 
	`·runˇã
(
diskfd
, 
nblocks
 * 
BLKSIZE
)) < 0) {

234 
	`Ârötf
(
°dîr
, "åunˇã %s: ", 
«me
);

235 
	`≥º‹
("");

236 
	`ab‹t
();

239 
nbôblock
 = (
nblocks
 + 
BLKBITSIZE
 - 1) / BLKBITSIZE;

240 
i
 = 0; i < 
nbôblock
; i++){

241 
b
 = 
	`gëblk
(2 + 
i
, 0, 
BLOCK_BITS
);

242 
	`mem£t
(
b
->
buf
, 0xFF, 
BLKSIZE
);

243 
	`putblk
(
b
);

246 
√xtb
 = 2 + 
nbôblock
;

248 
su≥r
.
s_magic
 = 
FS_MAGIC
;

249 
su≥r
.
s_nblocks
 = 
nblocks
;

250 
su≥r
.
s_roŸ
.
f_ty≥
 = 
FTYPE_DIR
;

251 
	`°r˝y
(
su≥r
.
s_roŸ
.
f_«me
, "/");

252 
	}
}

255 
	$°‹eblk
(
Fûe
 *
f
, 
Block
 *
b
, 
nblk
)

257 i‡(
nblk
 < 
NDIRECT
)

258 
f
->
f_dúe˘
[
nblk
] = 
b
->
bno
;

259 i‡(
nblk
 < 
NINDIRECT
) {

260 
Block
 *
bödú
;

261 i‡(
f
->
f_ödúe˘
 == 0) {

262 
bödú
 = 
	`gëblk
(
√xtb
++, 1, 
BLOCK_BITS
);

263 
f
->
f_ödúe˘
 = 
bödú
->
bno
;

265 
bödú
 = 
	`gëblk
(
f
->
f_ödúe˘
, 0, 
BLOCK_BITS
);

266 ((
uöt32_t
*)
bödú
->
buf
)[
nblk
] = 
b
->
bno
;

267 
	`putblk
(
bödú
);

269 
	`Ârötf
(
°dîr
, "fileÅooÜarge\n");

270 
	`ab‹t
();

272 
	}
}

274 
Fûe
 *

275 
	$Ælocfûe
(
Fûe
 *
dúf
, c⁄° *
«me
, 
Block
 **
dúb
)

277 
Fûe
 *
öo
;

278 
nblk
, 
i
;

280 
nblk
 = ()((
dúf
->
f_size
 + 
BLKSIZE
 - 1) / BLKSIZE) - 1;

281 i‡(
nblk
 >
NDIRECT
) {

282 
Block
 *
idúb
 = 
	`gëblk
(
dúf
->
f_ödúe˘
, 0, 
BLOCK_BITS
);

283 *
dúb
 = 
	`gëblk
(((
uöt32_t
*)
idúb
->
buf
Ë[
nblk
], 0, 
BLOCK_DIR
);

284 
	`putblk
(
idúb
);

285 } i‡(
nblk
 >= 0)

286 *
dúb
 = 
	`gëblk
(
dúf
->
f_dúe˘
[
nblk
], 0, 
BLOCK_DIR
);

288 
√w_dúb
;

290 
öo
 = (
Fûe
 *Ë(*
dúb
)->
buf
;

291 
i
 = 0; i < 
BLKFILES
; i++)

292 i‡(
öo
[
i
].
f_«me
[0] == '\0') {

293 
öo
 = &öo[
i
];

294 
gŸô
;

297 
	`putblk
(*
dúb
);

299 
√w_dúb
:

300 *
dúb
 = 
	`gëblk
(
√xtb
++, 1, 
BLOCK_DIR
);

301 
	`°‹eblk
(
dúf
, *
dúb
, ++
nblk
);

302 
dúf
->
f_size
 +
BLKSIZE
;

303 
	`as£π
((
nblk
 + 1Ë* 
BLKSIZE
 =
dúf
->
f_size
);

305 
öo
 = (
Fûe
 *Ë(*
dúb
)->
buf
;

307 
gŸô
:

308 
	`°r˝y
(
öo
->
f_«me
, 
«me
);

309  
öo
;

310 
	}
}

313 
	$wrôefûe
(
Fûe
 *
dúf
, c⁄° *
«me
)

315 
fd
;

316 c⁄° *
œ°
;

317 
Fûe
 *
f
;

318 
n
, 
nblk
;

319 
Block
 *
dúb
, *
b
;

321 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDONLY
)) < 0) {

322 
	`Ârötf
(
°dîr
, "›í %s:", 
«me
);

323 
	`≥º‹
("");

324 
	`ab‹t
();

327 
œ°
 = 
	`°ºchr
(
«me
, '/');

328 i‡(
œ°
)

329 
œ°
++;

331 
œ°
 = 
«me
;

333 
f
 = 
	`Ælocfûe
(
dúf
, 
œ°
, &
dúb
);

334 
f
->
f_ty≥
 = 
FTYPE_REG
;

336 
n
 = 0;

337 
nblk
 = 0; ;Çblk++) {

338 
b
 = 
	`gëblk
(
√xtb
, 1, 
BLOCK_FILE
);

339 
n
 = 
	`ªadn
(
fd
, 
b
->
buf
, 
BLKSIZE
);

340 i‡(
n
 < 0) {

341 
	`Ârötf
(
°dîr
, "ªadög %s: ", 
«me
);

342 
	`≥º‹
("");

343 
	`ab‹t
();

345 i‡(
n
 == 0) {

346 
	`putblk
(
b
);

349 
√xtb
++;

350 
	`°‹eblk
(
f
, 
b
, 
nblk
);

351 
	`putblk
(
b
);

352 i‡(
n
 < 
BLKSIZE
)

355 
f
->
f_size
 = 
nblk
*
BLKSIZE
 + 
n
;

356 
	`putblk
(
dúb
);

357 
	}
}

360 
	$wrôedúe˘‹y
(
Fûe
 *
∑ª¡dúf
, *
«me
, 
roŸ
)

362 
Fûe
 *
dúf
;

363 
DIR
 *
dú
;

364 
dúít
 *
ít
;

365 
°©
 
s
;

366 
∑thbuf
[
PATH_MAX
];

367 
«mñí
;

368 
Block
 *
dúb
 = 
NULL
;

370 i‡((
dú
 = 
	`›ídú
(
«me
)Ë=
NULL
) {

371 
	`Ârötf
(
°dîr
, "›í %s:", 
«me
);

372 
	`≥º‹
("");

373 
	`ab‹t
();

376 i‡(!
roŸ
) {

377 c⁄° *
œ°
 = 
	`°ºchr
(
«me
, '/');

378 i‡(
œ°
)

379 
œ°
++;

381 
œ°
 = 
«me
;

383 
dúf
 = 
	`Ælocfûe
(
∑ª¡dúf
, 
œ°
, &
dúb
);

384 
dúf
->
f_ty≥
 = 
FTYPE_DIR
;

385 
dúf
->
f_size
 = 0;

387 
dúf
 = 
∑ª¡dúf
;

389 
	`°r˝y
(
∑thbuf
, 
«me
);

390 
«mñí
 = 
	`°æí
(
∑thbuf
);

391 i‡(
∑thbuf
[
«mñí
 - 1] != '/') {

392 
∑thbuf
[
«mñí
++] = '/';

393 
∑thbuf
[
«mñí
] = 0;

396 (
ít
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

397 
ít_«mÀn
 = 
	`°æí
(
ít
->
d_«me
);

398 
	`°r˝y
(
∑thbuf
 + 
«mñí
, 
ít
->
d_«me
);

401 i‡(
	`°©
(
∑thbuf
, &
s
) < 0)

404 i‡(
	`S_ISREG
(
s
.
°_mode
))

405 
	`wrôefûe
(
dúf
, 
∑thbuf
);

406 i‡(
	`S_ISDIR
(
s
.
°_mode
)

407 && (
ít_«mÀn
 > 1 || 
ít
->
d_«me
[0] != '.')

408 && (
ít_«mÀn
 > 2 || 
ít
->
d_«me
[0] != '.' ||Ént->d_name[1] != '.')

409 && (
ít_«mÀn
 > 3 || 
ít
->
d_«me
[0] != 'C' ||Ént->d_name[1] != 'V' ||Ént->d_name[2] != 'S'))

410 
	`wrôedúe˘‹y
(
dúf
, 
∑thbuf
, 0);

413 
	`˛o£dú
(
dú
);

414 i‡(
dúb
)

415 
	`putblk
(
dúb
);

416 
	}
}

419 
	$föishfs
()

421 
i
;

422 
Block
 *
b
;

424 
i
 = 0; i < 
√xtb
; i++) {

425 
b
 = 
	`gëblk
(2 + 
i
/
BLKBITSIZE
, 0, 
BLOCK_BITS
);

426 ((
uöt32_t
*)
b
->
buf
)[(
i
%
BLKBITSIZE
)/32] &= ~(1<<(i%32));

427 
	`putblk
(
b
);

431 i‡(
nblocks
 !
nbôblock
*
BLKBITSIZE
) {

432 
b
 = 
	`gëblk
(2+
nbôblock
-1, 0, 
BLOCK_BITS
);

433 
i
 = 
nblocks
 % 
BLKBITSIZE
; i < BLKBITSIZE; i++)

434 ((
uöt32_t
*)
b
->
buf
)[
i
/32] &= ~(1<<(i%32));

435 
	`putblk
(
b
);

438 
b
 = 
	`gëblk
(1, 1, 
BLOCK_SUPER
);

439 
	`memmove
(
b
->
buf
, &
su≥r
, (
Su≥r
));

440 
	`putblk
(
b
);

441 
	}
}

444 
	$Êushdisk
()

446 
i
;

448 
i
 = 0; i < 
	`√Àm
(
ˇche
); i++)

449 i‡(
ˇche
[
i
].
u£d
)

450 
	`Êushb
(&
ˇche
[
i
]);

451 
	}
}

454 
	$ußge
()

456 
	`Ârötf
(
°dîr
, "Usage: fsformat kern/fs.img NBLOCKS files...\n\
 kern/fs.img NBLOCKS -r DIR\n");

458 
	`ab‹t
();

459 
	}
}

462 
	$maö
(
¨gc
, **
¨gv
)

464 
i
;

465 *
s
;

467 
	`as£π
(
BLKSIZE
 % (
Fûe
) == 0);

469 i‡(
¨gc
 < 3)

470 
	`ußge
();

472 
nblocks
 = 
	`°πﬁ
(
¨gv
[2], &
s
, 0);

473 i‡(*
s
 || s =
¨gv
[2] || 
nblocks
 < 2 ||Çblocks > 1024)

474 
	`ußge
();

476 
	`›ídisk
(
¨gv
[1]);

478 i‡(
	`°rcmp
(
¨gv
[3], "-r") == 0) {

479 i‡(
¨gc
 != 5)

480 
	`ußge
();

481 
	`wrôedúe˘‹y
(&
su≥r
.
s_roŸ
, 
¨gv
[4], 1);

483 
i
 = 3; i < 
¨gc
; i++)

484 
	`wrôefûe
(&
su≥r
.
s_roŸ
, 
¨gv
[
i
]);

487 
	`föishfs
();

488 
	`Êushdisk
();

489 
	`exô
(0);

491 
	}
}

	@fs/ide.c

7 
	~"fs.h
"

8 
	~<öc/x86.h
>

10 
	#IDE_BSY
 0x80

	)

11 
	#IDE_DRDY
 0x40

	)

12 
	#IDE_DF
 0x20

	)

13 
	#IDE_ERR
 0x01

	)

15 
	gdiskno
 = 1;

18 
	$ide_waô_ªady
(
boﬁ
 
check_îr‹
)

20 
r
;

22 ((
r
 = 
	`öb
(0x1F7)Ë& (
IDE_BSY
|
IDE_DRDY
)) != IDE_DRDY)

25 i‡(
check_îr‹
 && (
r
 & (
IDE_DF
|
IDE_ERR
)) != 0)

28 
	}
}

30 
boﬁ


31 
	$ide_¥obe_disk1
()

33 
r
, 
x
;

36 
	`ide_waô_ªady
(0);

39 
	`outb
(0x1F6, 0xE0 | (1<<4));

42 
x
 = 0; x < 1000 && (
r
 = 
	`öb
(0x1F7)) == 0; x++)

46 
	`outb
(0x1F6, 0xE0 | (0<<4));

48 
	`˝rötf
("Devi˚ 1Öª£n˚: %d\n", (
x
 < 1000));

49  (
x
 < 1000);

50 
	}
}

53 
	$ide_£t_disk
(
d
)

55 i‡(
d
 != 0 && d != 1)

56 
	`∑nic
("bad diskÇumber");

57 
diskno
 = 
d
;

58 
	}
}

61 
	$ide_ªad
(
uöt32_t
 
£˙o
, *
d°
, 
size_t
 
n£cs
)

63 
r
;

65 
	`as£π
(
n£cs
 <= 256);

67 
	`ide_waô_ªady
(0);

69 
	`outb
(0x1F2, 
n£cs
);

70 
	`outb
(0x1F3, 
£˙o
 & 0xFF);

71 
	`outb
(0x1F4, (
£˙o
 >> 8) & 0xFF);

72 
	`outb
(0x1F5, (
£˙o
 >> 16) & 0xFF);

73 
	`outb
(0x1F6, 0xE0 | ((
diskno
&1)<<4Ë| ((
£˙o
>>24)&0x0F));

74 
	`outb
(0x1F7, 0x20);

76 ; 
n£cs
 > 0;Ç£cs--, 
d°
 +
SECTSIZE
) {

77 i‡((
r
 = 
	`ide_waô_ªady
(1)) < 0)

78  
r
;

79 
	`ö¶
(0x1F0, 
d°
, 
SECTSIZE
/4);

83 
	}
}

86 
	$ide_wrôe
(
uöt32_t
 
£˙o
, c⁄° *
§c
, 
size_t
 
n£cs
)

88 
r
;

90 
	`as£π
(
n£cs
 <= 256);

92 
	`ide_waô_ªady
(0);

94 
	`outb
(0x1F2, 
n£cs
);

95 
	`outb
(0x1F3, 
£˙o
 & 0xFF);

96 
	`outb
(0x1F4, (
£˙o
 >> 8) & 0xFF);

97 
	`outb
(0x1F5, (
£˙o
 >> 16) & 0xFF);

98 
	`outb
(0x1F6, 0xE0 | ((
diskno
&1)<<4Ë| ((
£˙o
>>24)&0x0F));

99 
	`outb
(0x1F7, 0x30);

101 ; 
n£cs
 > 0;Ç£cs--, 
§c
 +
SECTSIZE
) {

102 i‡((
r
 = 
	`ide_waô_ªady
(1)) < 0)

103  
r
;

104 
	`out¶
(0x1F0, 
§c
, 
SECTSIZE
/4);

108 
	}
}

	@fs/serv.c

6 
	~<öc/x86.h
>

7 
	~<öc/°rög.h
>

9 
	~"fs.h
"

12 
	#debug
 0

	)

14 
	sO≥nFûe
 {

15 
uöt32_t
 
	mo_fûeid
;

16 
Fûe
 *
	mo_fûe
;

17 
	mo_mode
;

18 
Fd
 *
	mo_fd
;

22 
	#MAXOPEN
 1024

	)

23 
	#FILEVA
 0xD0000000

	)

26 
O≥nFûe
 
	g›íèb
[
MAXOPEN
] = {

31 
	#REQVA
 0x0ffff000

	)

34 
	$£rve_öô
()

36 
i
;

37 
uöçå_t
 
va
 = 
FILEVA
;

38 
i
 = 0; i < 
MAXOPEN
; i++) {

39 
›íèb
[
i
].
o_fûeid
 = i;

40 
›íèb
[
i
].
o_fd
 = (
Fd
*Ë
va
;

41 
va
 +
PGSIZE
;

43 
	}
}

47 
	$›ífûe_Æloc
(
O≥nFûe
 **
o
)

49 
i
, 
r
;

52 
i
 = 0; i < 
MAXOPEN
; i++) {

53 
	`∑gîef
(
›íèb
[
i
].
o_fd
)) {

55 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
›íèb
[
i
].
o_fd
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

56  
r
;

59 
›íèb
[
i
].
o_fûeid
 +
MAXOPEN
;

60 *
o
 = &
›íèb
[
i
];

61 
	`mem£t
(
›íèb
[
i
].
o_fd
, 0, 
PGSIZE
);

62  (*
o
)->
o_fûeid
;

65  -
E_MAX_OPEN
;

66 
	}
}

70 
	$›ífûe_lookup
(
ívid_t
 
ívid
, 
uöt32_t
 
fûeid
, 
O≥nFûe
 **
po
)

72 
O≥nFûe
 *
o
;

74 
o
 = &
›íèb
[
fûeid
 % 
MAXOPEN
];

75 i‡(
	`∑gîef
(
o
->
o_fd
Ë=1 || o->
o_fûeid
 !
fûeid
)

76  -
E_INVAL
;

77 *
po
 = 
o
;

79 
	}
}

85 
	$£rve_›í
(
ívid_t
 
ívid
, 
F§eq_›í
 *
rq
)

87 
∑th
[
MAXPATHLEN
];

88 
Fûe
 *
f
;

89 
fûeid
;

90 
r
;

91 
O≥nFûe
 *
o
;

93 i‡(
debug
)

94 
	`˝rötf
("£rve_›í %08x %†0x%x\n", 
ívid
, 
rq
->
ªq_∑th
,Ñq->
ªq_omode
);

97 
	`memmove
(
∑th
, 
rq
->
ªq_∑th
, 
MAXPATHLEN
);

98 
∑th
[
MAXPATHLEN
-1] = 0;

101 i‡((
r
 = 
	`›ífûe_Æloc
(&
o
)) < 0) {

102 i‡(
debug
)

103 
	`˝rötf
("›ífûe_Ælo¯Áûed: %e", 
r
);

104 
out
;

106 
fûeid
 = 
r
;

109 i‡((
r
 = 
	`fûe_›í
(
∑th
, &
f
)) < 0) {

110 i‡(
debug
)

111 
	`˝rötf
("fûe_›í faûed: %e", 
r
);

112 
out
;

116 
o
->
o_fûe
 = 
f
;

119 
o
->
o_fd
->
fd_fûe
.
fûe
 = *
f
;

120 
o
->
o_fd
->
fd_fûe
.
id
 = o->
o_fûeid
;

121 
o
->
o_fd
->
fd_omode
 = 
rq
->
ªq_omode
;

122 
o
->
o_fd
->
fd_dev_id
 = 
devfûe
.
dev_id
;

123 
o
->
o_mode
 = 
rq
->
ªq_omode
;

125 i‡(
debug
)

126 
	`˝rötf
("£ndög suc˚ss,Öagê%08x\n", (
uöçå_t
Ë
o
->
o_fd
);

127 
	`ùc_£nd
(
ívid
, 0, 
o
->
o_fd
, 
PTE_P
|
PTE_U
|
PTE_W
|
PTE_SHARE
);

129 
out
:

130 
	`ùc_£nd
(
ívid
, 
r
, 0, 0);

131 
	}
}

134 
	$£rve_£t_size
(
ívid_t
 
ívid
, 
F§eq_£t_size
 *
rq
)

136 
O≥nFûe
 *
o
;

137 
r
;

139 i‡(
debug
)

140 
	`˝rötf
("£rve_£t_sizê%08x %08x %08x\n", 
ívid
, 
rq
->
ªq_fûeid
,Ñq->
ªq_size
);

174 i‡((
r
 = 
	`›ífûe_lookup
(
ívid
, 
rq
->
ªq_fûeid
, &
o
)) < 0)

175 
out
;

179 i‡((
r
 = 
	`fûe_£t_size
(
o
->
o_fûe
, 
rq
->
ªq_size
)) < 0)

180 
out
;

184 
o
->
o_fd
->
fd_fûe
.
fûe
.
f_size
 = 
rq
->
ªq_size
;

188 
out
:

189 
	`ùc_£nd
(
ívid
, 
r
, 0, 0);

190 
	}
}

193 
	$£rve_m≠
(
ívid_t
 
ívid
, 
F§eq_m≠
 *
rq
)

195 
r
;

196 *
blk
;

197 
O≥nFûe
 *
o
;

198 
≥rm
;

200 i‡(
debug
)

201 
	`˝rötf
("£rve_m≠ %08x %08x %08x\n", 
ívid
, 
rq
->
ªq_fûeid
,Ñq->
ªq_off£t
);

209 
	`∑nic
("serve_mapÇot implemented");

210 
	}
}

213 
	$£rve_˛o£
(
ívid_t
 
ívid
, 
F§eq_˛o£
 *
rq
)

215 
O≥nFûe
 *
o
;

216 
r
;

218 i‡(
debug
)

219 
	`˝rötf
("£rve_˛o£ %08x %08x\n", 
ívid
, 
rq
->
ªq_fûeid
);

224 
	`∑nic
("serve_closeÇot implemented");

225 
	}
}

228 
	$£rve_ªmove
(
ívid_t
 
ívid
, 
F§eq_ªmove
 *
rq
)

230 
∑th
[
MAXPATHLEN
];

231 
r
;

233 i‡(
debug
)

234 
	`˝rötf
("£rve_ªmovê%08x %s\n", 
ívid
, 
rq
->
ªq_∑th
);

241 
	`∑nic
("serve_removeÇot implemented");

242 
	}
}

245 
	$£rve_dúty
(
ívid_t
 
ívid
, 
F§eq_dúty
 *
rq
)

247 
O≥nFûe
 *
o
;

248 
r
;

250 i‡(
debug
)

251 
	`˝rötf
("£rve_dúty %08x %08x %08x\n", 
ívid
, 
rq
->
ªq_fûeid
,Ñq->
ªq_off£t
);

257 
	`∑nic
("serve_dirtyÇot implemented");

258 
	}
}

261 
	$£rve_sync
(
ívid_t
 
ívid
)

263 
	`fs_sync
();

264 
	`ùc_£nd
(
ívid
, 0, 0, 0);

265 
	}
}

268 
	$£rve
()

270 
uöt32_t
 
ªq
, 
whom
;

271 
≥rm
;

274 
≥rm
 = 0;

275 
ªq
 = 
	`ùc_ªcv
((
öt32_t
 *Ë&
whom
, (*Ë
REQVA
, &
≥rm
);

276 i‡(
debug
)

277 
	`˝rötf
("fsÑeq %d from %08x [page %08x: %s]\n",

278 
ªq
, 
whom
, 
v±
[
	`VPN
(
REQVA
)], REQVA);

281 i‡(!(
≥rm
 & 
PTE_P
)) {

282 
	`˝rötf
("InvalidÑequest from %08x:ÇoárgumentÖage\n",

283 
whom
);

287 
ªq
) {

288 
FSREQ_OPEN
:

289 
	`£rve_›í
(
whom
, (
F§eq_›í
*)
REQVA
);

291 
FSREQ_MAP
:

292 
	`£rve_m≠
(
whom
, (
F§eq_m≠
*)
REQVA
);

294 
FSREQ_SET_SIZE
:

295 
	`£rve_£t_size
(
whom
, (
F§eq_£t_size
*)
REQVA
);

297 
FSREQ_CLOSE
:

298 
	`£rve_˛o£
(
whom
, (
F§eq_˛o£
*)
REQVA
);

300 
FSREQ_DIRTY
:

301 
	`£rve_dúty
(
whom
, (
F§eq_dúty
*)
REQVA
);

303 
FSREQ_REMOVE
:

304 
	`£rve_ªmove
(
whom
, (
F§eq_ªmove
*)
REQVA
);

306 
FSREQ_SYNC
:

307 
	`£rve_sync
(
whom
);

310 
	`˝rötf
("InvÆidÑeque° codê%d from %08x\n", 
whom
, 
ªq
);

313 
	`sys_∑ge_unm≠
(0, (*Ë
REQVA
);

315 
	}
}

318 
	$umaö
()

320 
	`°©ic_as£π
((
Fûe
) == 256);

321 
bö¨y«me
 = "fs";

322 
	`˝rötf
("FS isÑunning\n");

325 
	`outw
(0x8A00, 0x8A00);

326 
	`˝rötf
("FS can do I/O\n");

328 
	`£rve_öô
();

329 
	`fs_öô
();

330 
	`fs_ã°
();

332 
	`£rve
();

333 
	}
}

	@fs/test.c

2 
	~<öc/x86.h
>

3 
	~<öc/°rög.h
>

5 
	~"fs.h
"

9 
	$°ªcmp
(*
a
, *
b
)

11 *
b
)

12 i‡(*
a
++ !*
b
++)

15 
	}
}

17 *
	gmsg
 = "This isÅhe NEW message ofÅhe day!\n\n";

20 
	$fs_ã°
()

22 
Fûe
 *
f
;

23 
r
;

24 *
blk
;

25 
uöt32_t
 *
bôs
;

28 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, (*Ë
PGSIZE
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

29 
	`∑nic
("sys_∑ge_Æloc: %e", 
r
);

30 
bôs
 = (
uöt32_t
*Ë
PGSIZE
;

31 
	`memmove
(
bôs
, 
bôm≠
, 
PGSIZE
);

33 i‡((
r
 = 
	`Æloc_block
()) < 0)

34 
	`∑nic
("Æloc_block: %e", 
r
);

36 
	`as£π
(
bôs
[
r
/32] & (1 << (r%32)));

38 
	`as£π
(!(
bôm≠
[
r
/32] & (1 << (r%32))));

39 
	`˝rötf
("alloc_block is good\n");

41 i‡((
r
 = 
	`fûe_›í
("/nŸ-found", &
f
)Ë< 0 &&Ñ !-
E_NOT_FOUND
)

42 
	`∑nic
("fûe_›í /nŸ-found: %e", 
r
);

43 i‡(
r
 == 0)

44 
	`∑nic
("file_open /not-found succeeded!");

45 i‡((
r
 = 
	`fûe_›í
("/√wmŸd", &
f
)) < 0)

46 
	`∑nic
("fûe_›í /√wmŸd: %e", 
r
);

47 
	`˝rötf
("file_open is good\n");

49 i‡((
r
 = 
	`fûe_gë_block
(
f
, 0, &
blk
)) < 0)

50 
	`∑nic
("fûe_gë_block: %e", 
r
);

51 i‡(
	`°ªcmp
(
blk
, 
msg
) != 0)

52 
	`∑nic
("file_get_blockÑeturned wrong data");

53 
	`˝rötf
("file_get_block is good\n");

55 *(vﬁ©ûê*)
blk
 = *(volatile *)blk;

56 
	`as£π
((
v±
[
	`VPN
(
blk
)] & 
PTE_D
));

57 
	`fûe_Êush
(
f
);

58 
	`as£π
(!(
v±
[
	`VPN
(
blk
)] & 
PTE_D
));

59 
	`˝rötf
("file_flush is good\n");

61 i‡((
r
 = 
	`fûe_£t_size
(
f
, 0)) < 0)

62 
	`∑nic
("fûe_£t_size: %e", 
r
);

63 
	`as£π
(
f
->
f_dúe˘
[0] == 0);

64 
	`as£π
(!(
v±
[
	`VPN
(
f
)] & 
PTE_D
));

65 
	`˝rötf
("file_truncate is good\n");

67 i‡((
r
 = 
	`fûe_£t_size
(
f
, 
	`°æí
(
msg
))) < 0)

68 
	`∑nic
("fûe_£t_sizê2: %e", 
r
);

69 
	`as£π
(!(
v±
[
	`VPN
(
f
)] & 
PTE_D
));

70 i‡((
r
 = 
	`fûe_gë_block
(
f
, 0, &
blk
)) < 0)

71 
	`∑nic
("fûe_gë_block 2: %e", 
r
);

72 
	`°r˝y
(
blk
, 
msg
);

73 
	`as£π
((
v±
[
	`VPN
(
blk
)] & 
PTE_D
));

74 
	`fûe_Êush
(
f
);

75 
	`as£π
(!(
v±
[
	`VPN
(
blk
)] & 
PTE_D
));

76 
	`fûe_˛o£
(
f
);

77 
	`as£π
(!(
v±
[
	`VPN
(
f
)] & 
PTE_D
));

78 
	`˝rötf
("fileÑewrite is good\n");

79 
	}
}

	@inc/args.h

74 *
¨gv0
;

76 
	#_ARGSET
(
x
Ë(xË0

	)

77 
	#_ARGUSED
(
x
Ëi‡(xË{ } 

	)

79 
	#ARGBEGIN
 (
¨gv
?0:◊rgv=(*)&
¨gc
)),(
¨gv0
?0:(argv0=*argv)),\

80 
¨gv
++,
¨gc
--;\

81 
¨gv
[0] &&árgv[0][0]=='-' &&árgv[0][1];\

82 
¨gc
--, 
¨gv
++) {\

83 *
_¨gs
, *
_¨gt
;\

84 
_¨gc
;\

85 
_¨gs
 = &
¨gv
[0][1];\

86 if(
_¨gs
[0]=='-' && _args[1]==0){\

87 
¨gc
--; 
¨gv
++; ;\

89 
_¨gc
 = 0;\

90 *
_¨gs
 && (
_¨gc
 = *_args++))\

91 
_¨gc
)

	)

92 
	#ARGEND
 
	`_ARGSET
(
_¨gt
);
	`_ARGUSED
(_¨gt);_ARGUSED(
_¨gc
);_ARGUSED(
_¨gs
);}_ARGUSED(
¨gv
);_ARGUSED(
¨gc
);

	)

93 
	#ARGF
(Ë(
_¨gt
=
_¨gs
, _args="",\

94 (*
_¨gt
? _¨gt: 
¨gv
[1]? (
¨gc
--, *++¨gv): 0))

	)

95 
	#EARGF
(
x
Ë(
_¨gt
=
_¨gs
, _args="",\

96 (*
_¨gt
? _¨gt: 
¨gv
[1]? (
¨gc
--, *++¨gv): ((
x
), 
	`ab‹t
(), (*)0)))

	)

98 
	#ARGC
(Ë
_¨gc


	)

	@inc/assert.h

3 #i‚de‡
JOS_INC_ASSERT_H


4 
	#JOS_INC_ASSERT_H


	)

6 
	~<öc/°dio.h
>

8 
_w¨n
(const *, , const *, ...);

9 
	$_∑nic
(c⁄° *, , c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

11 
	#w¨n
(...Ë
	`_w¨n
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
)

	)

12 
	#∑nic
(...Ë
	`_∑nic
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
)

	)

14 
	#as£π
(
x
) \

15 dÿ{ i‡(!(
x
)Ë
	`∑nic
("as£πi⁄ faûed: %s", #x); 
	}
} 0)

	)

18 
	#°©ic_as£π
(
x
ËxË0: (x):

	)

	@inc/elf.h

1 #i‚de‡
JOS_INC_ELF_H


2 
	#JOS_INC_ELF_H


	)

4 
	#ELF_MAGIC
 0x464C457FU

	)

6 
	sElf
 {

7 
uöt32_t
 
	me_magic
;

8 
uöt8_t
 
	me_ñf
[12];

9 
uöt16_t
 
	me_ty≥
;

10 
uöt16_t
 
	me_machöe
;

11 
uöt32_t
 
	me_vîsi⁄
;

12 
uöt32_t
 
	me_íåy
;

13 
uöt32_t
 
	me_phoff
;

14 
uöt32_t
 
	me_shoff
;

15 
uöt32_t
 
	me_Êags
;

16 
uöt16_t
 
	me_ehsize
;

17 
uöt16_t
 
	me_phítsize
;

18 
uöt16_t
 
	me_phnum
;

19 
uöt16_t
 
	me_shítsize
;

20 
uöt16_t
 
	me_shnum
;

21 
uöt16_t
 
	me_sh°∫dx
;

24 
	sProghdr
 {

25 
uöt32_t
 
	mp_ty≥
;

26 
uöt32_t
 
	mp_off£t
;

27 
uöt32_t
 
	mp_va
;

28 
uöt32_t
 
	mp_∑
;

29 
uöt32_t
 
	mp_fûesz
;

30 
uöt32_t
 
	mp_memsz
;

31 
uöt32_t
 
	mp_Êags
;

32 
uöt32_t
 
	mp_Æign
;

35 
	sSe˘hdr
 {

36 
uöt32_t
 
	msh_«me
;

37 
uöt32_t
 
	msh_ty≥
;

38 
uöt32_t
 
	msh_Êags
;

39 
uöt32_t
 
	msh_addr
;

40 
uöt32_t
 
	msh_off£t
;

41 
uöt32_t
 
	msh_size
;

42 
uöt32_t
 
	msh_lök
;

43 
uöt32_t
 
	msh_öfo
;

44 
uöt32_t
 
	msh_addølign
;

45 
uöt32_t
 
	msh_ítsize
;

49 
	#ELF_PROG_LOAD
 1

	)

52 
	#ELF_PROG_FLAG_EXEC
 1

	)

53 
	#ELF_PROG_FLAG_WRITE
 2

	)

54 
	#ELF_PROG_FLAG_READ
 4

	)

57 
	#ELF_SHT_NULL
 0

	)

58 
	#ELF_SHT_PROGBITS
 1

	)

59 
	#ELF_SHT_SYMTAB
 2

	)

60 
	#ELF_SHT_STRTAB
 3

	)

63 
	#ELF_SHN_UNDEF
 0

	)

	@inc/env.h

3 #i‚de‡
JOS_INC_ENV_H


4 
	#JOS_INC_ENV_H


	)

6 
	~<öc/ty≥s.h
>

7 
	~<öc/queue.h
>

8 
	~<öc/å≠.h
>

9 
	~<öc/memœyout.h
>

11 
öt32_t
 
	tívid_t
;

29 
	#LOG2NENV
 10

	)

30 
	#NENV
 (1 << 
LOG2NENV
)

	)

31 
	#ENVX
(
ívid
Ë(”nvidË& (
NENV
 - 1))

	)

34 
	#ENV_FREE
 0

	)

35 
	#ENV_RUNNABLE
 1

	)

36 
	#ENV_NOT_RUNNABLE
 2

	)

39 
	#ENV_PRIOR_SUPREME
 -20

	)

40 
	#ENV_PRIOR_HIGH
 -10

	)

41 
	#ENV_PRIOR_DEFAULT
 0

	)

42 
	#ENV_PRIOR_LOW
 20

	)

45 
	sEnv
 {

46 
Tøp‰ame
 
	mív_tf
;

47 
LIST_ENTRY
(
Env
Ë
	mív_lök
;

48 
ívid_t
 
	mív_id
;

49 
ívid_t
 
	mív_∑ª¡_id
;

50 
	mív_°©us
;

51 
uöt32_t
 
	mív_runs
;

54 
pde_t
 *
	mív_pgdú
;

55 
phyßddr_t
 
	mív_¸3
;

58 *
	mív_pgÁu…_upˇŒ
;

61 
boﬁ
 
	mív_ùc_ªcvög
;

62 *
	mív_ùc_d°va
;

63 
uöt32_t
 
	mív_ùc_vÆue
;

64 
ívid_t
 
	mív_ùc_‰om
;

65 
	mív_ùc_≥rm
;

68 
	mív_¥i‹ôy
;

	@inc/error.h

3 #i‚de‡
JOS_INC_ERROR_H


4 
	#JOS_INC_ERROR_H


	)

7 
	#E_UNSPECIFIED
 1

8 
	#E_BAD_ENV
 2

10 
	#E_INVAL
 3

11 
	#E_NO_MEM
 4

12 
	#E_NO_FREE_ENV
 5

14 
	#E_FAULT
 6

15 

	)

16 
	#E_IPC_NOT_RECV
 7

17 
	#E_EOF
 8

18 

	)

20 
	#E_NO_DISK
 9

21 
	#E_MAX_OPEN
 10

22 
	#E_NOT_FOUND
 11

23 
	#E_BAD_PATH
 12

24 
	#E_FILE_EXISTS
 13

25 
	#E_NOT_EXEC
 14

26 

	)

27 
	#MAXERROR
 14

	)

	@inc/fd.h

5 #i‚de‡
JOS_INC_FD_H


6 
	#JOS_INC_FD_H


	)

8 
	~<öc/ty≥s.h
>

9 
	~<öc/fs.h
>

12 
	gFd
;

13 
	gSèt
;

14 
	gDev
;

16 
	sDev
 {

17 
	mdev_id
;

18 *
	mdev_«me
;

19 
ssize_t
 (*
dev_ªad
)(
Fd
 *
	mfd
, *
	mbuf
, 
size_t
 
	mÀn
, 
off_t
 
	moff£t
);

20 
ssize_t
 (*
dev_wrôe
)(
Fd
 *
	mfd
, c⁄° *
	mbuf
, 
size_t
 
	mÀn
, 
off_t
 
	moff£t
);

21 (*
	mdev_˛o£
)(
Fd
 *
	mfd
);

22 (*
	mdev_°©
)(
Fd
 *
	mfd
, 
Sèt
 *
	m°©
);

23 (*
	mdev_£ek
)(
Fd
 *
	mfd
, 
off_t
 
	mpos
);

24 (*
	mdev_åunc
)(
Fd
 *
	mfd
, 
off_t
 
	mÀngth
);

27 
	sFdFûe
 {

28 
	mid
;

29 
Fûe
 
	mfûe
;

32 
	sFd
 {

33 
	mfd_dev_id
;

34 
off_t
 
	mfd_off£t
;

35 
	mfd_omode
;

38 
FdFûe
 
	mfd_fûe
;

42 
	sSèt
 {

43 
	m°_«me
[
MAXNAMELEN
];

44 
off_t
 
	m°_size
;

45 
	m°_isdú
;

46 
Dev
 *
	m°_dev
;

49 * 
fd2d©a
(
Fd
 *
fd
);

50 
fd2num
(
Fd
 *
fd
);

51 
fd_Æloc
(
Fd
 **
fd_°‹e
);

52 
fd_˛o£
(
Fd
 *
fd
, 
boﬁ
 
mu°_exi°
);

53 
fd_lookup
(
fdnum
, 
Fd
 **
fd_°‹e
);

54 
dev_lookup
(
devid
, 
Dev
 **
dev_°‹e
);

56 
Dev
 
devc⁄s
;

57 
Dev
 
devfûe
;

58 
Dev
 
devpùe
;

	@inc/fs.h

3 #i‚de‡
JOS_INC_FS_H


4 
	#JOS_INC_FS_H


	)

6 
	~<öc/ty≥s.h
>

11 
	#BLKSIZE
 
PGSIZE


	)

12 
	#BLKBITSIZE
 (
BLKSIZE
 * 8)

	)

16 
	#MAXNAMELEN
 128

	)

19 
	#MAXPATHLEN
 1024

	)

22 
	#NDIRECT
 10

	)

24 
	#NINDIRECT
 (
BLKSIZE
 / 4)

	)

26 
	#MAXFILESIZE
 (
NINDIRECT
 * 
BLKSIZE
)

	)

28 
	sFûe
 {

29 
	mf_«me
[
MAXNAMELEN
];

30 
off_t
 
	mf_size
;

31 
uöt32_t
 
	mf_ty≥
;

35 
uöt32_t
 
	mf_dúe˘
[
NDIRECT
];

36 
uöt32_t
 
	mf_ödúe˘
;

41 
Fûe
 *
	mf_dú
;

45 
uöt8_t
 
	mf_∑d
[256 - 
MAXNAMELEN
 - 8 - 4*
NDIRECT
 - 4 - (
Fûe
*)];

46 } 
__©åibuã__
((
∑cked
));

49 
	#BLKFILES
 (
BLKSIZE
 / (
Fûe
))

	)

52 
	#FTYPE_REG
 0

53 
	#FTYPE_DIR
 1

54 

	)

58 
	#FS_MAGIC
 0x4A0530AE

59 

	)

60 
	sSu≥r
 {

61 
uöt32_t
 
	ms_magic
;

62 
uöt32_t
 
	ms_nblocks
;

63 
Fûe
 
	ms_roŸ
;

68 
	#FSREQ_OPEN
 1

	)

69 
	#FSREQ_MAP
 2

	)

70 
	#FSREQ_SET_SIZE
 3

	)

71 
	#FSREQ_CLOSE
 4

	)

72 
	#FSREQ_DIRTY
 5

	)

73 
	#FSREQ_REMOVE
 6

	)

74 
	#FSREQ_SYNC
 7

	)

76 
	sF§eq_›í
 {

77 
	mªq_∑th
[
MAXPATHLEN
];

78 
	mªq_omode
;

81 
	sF§eq_m≠
 {

82 
	mªq_fûeid
;

83 
off_t
 
	mªq_off£t
;

86 
	sF§eq_£t_size
 {

87 
	mªq_fûeid
;

88 
off_t
 
	mªq_size
;

91 
	sF§eq_˛o£
 {

92 
	mªq_fûeid
;

95 
	sF§eq_dúty
 {

96 
	mªq_fûeid
;

97 
off_t
 
	mªq_off£t
;

100 
	sF§eq_ªmove
 {

101 
	mªq_∑th
[
MAXPATHLEN
];

	@inc/isareg.h

14 #i‚de‡
IO_ISABEGIN


15 
	#IO_ISABEGIN
 0x000

	)

18 
	#IO_DMA1
 0x000

	)

19 
	#IO_ICU1
 0x020

	)

20 
	#IO_PMP1
 0x026

	)

21 
	#IO_TIMER1
 0x040

	)

22 
	#IO_TIMER2
 0x048

	)

23 
	#IO_KBD
 0x060

	)

24 
	#IO_PPI
 0x061

	)

25 
	#IO_RTC
 0x070

	)

26 
	#IO_NMI
 
IO_RTC


	)

27 
	#IO_DMAPG
 0x080

	)

28 
	#IO_ICU2
 0x0A0

	)

29 
	#IO_DMA2
 0x0C0

	)

30 
	#IO_NPX
 0x0F0

	)

35 
	#IO_WD2
 0x170

	)

36 
	#IO_PMP2
 0x178

	)

40 
	#IO_WD1
 0x1f0

	)

41 
	#IO_GAME
 0x200

	)

45 
	#IO_BMS2
 0x238

	)

46 
	#IO_BMS1
 0x23¯

	)

50 
	#IO_LPT2
 0x278

	)

54 
	#IO_COM4
 0x2e8

	)

58 
	#IO_COM2
 0x2f8

	)

62 
	#IO_BT0
 0x330

	)

63 
	#IO_AHA0
 0x330

	)

64 
	#IO_UHA0
 0x330

	)

65 
	#IO_BT1
 0x334

	)

66 
	#IO_AHA1
 0x334

	)

70 
	#IO_WDS
 0x350

	)

74 
	#IO_FD2
 0x370

	)

75 
	#IO_LPT1
 0x378

	)

79 
	#IO_MDA
 0x3B0

	)

80 
	#IO_LPT3
 0x3BC

	)

81 
	#IO_VGA
 0x3C0

	)

82 
	#IO_CGA
 0x3D0

	)

86 
	#IO_COM3
 0x3e8

	)

87 
	#IO_FD1
 0x3f0

	)

88 
	#IO_COM1
 0x3f8

	)

90 
	#IO_ISAEND
 0x3FF

	)

99 #i‚def 
IO_ISASIZES


100 
	#IO_ISASIZES


	)

102 
	#IO_COMSIZE
 8

	)

103 
	#IO_CGASIZE
 16

	)

104 
	#IO_DMASIZE
 16

	)

105 
	#IO_DPGSIZE
 32

	)

106 
	#IO_FDCSIZE
 8

	)

107 
	#IO_WDCSIZE
 8

	)

108 
	#IO_GAMSIZE
 16

	)

109 
	#IO_ICUSIZE
 16

	)

110 
	#IO_KBDSIZE
 16

	)

111 
	#IO_LPTSIZE
 8

	)

112 
	#IO_MDASIZE
 16

	)

113 
	#IO_RTCSIZE
 16

	)

114 
	#IO_TMRSIZE
 16

	)

115 
	#IO_NPXSIZE
 16

	)

116 
	#IO_VGASIZE
 16

	)

117 
	#IO_PMPSIZE
 2

	)

124 #i‚def 
IOM_BEGIN


125 
	#IOM_BEGIN
 0x0a0000

	)

126 
	#IOM_END
 0x100000

	)

127 
	#IOM_SIZE
 (
IOM_END
 - 
IOM_BEGIN
)

	)

	@inc/kbdreg.h

1 #i‚de‡
JOS_KBDREG_H


2 
	#JOS_KBDREG_H


	)

5 
	#KEY_HOME
 0xE0

	)

6 
	#KEY_END
 0xE1

	)

7 
	#KEY_UP
 0xE2

	)

8 
	#KEY_DN
 0xE3

	)

9 
	#KEY_LF
 0xE4

	)

10 
	#KEY_RT
 0xE5

	)

11 
	#KEY_PGUP
 0xE6

	)

12 
	#KEY_PGDN
 0xE7

	)

13 
	#KEY_INS
 0xE8

	)

14 
	#KEY_DEL
 0xE9

	)

19 
	#KBSTATP
 0x64

	)

20 
	#KBS_DIB
 0x01

	)

21 
	#KBS_IBF
 0x02

	)

22 
	#KBS_WARM
 0x04

	)

23 
	#KBS_OCMD
 0x08

	)

24 
	#KBS_NOSEC
 0x10

	)

25 
	#KBS_TERR
 0x20

	)

26 
	#KBS_RERR
 0x40

	)

27 
	#KBS_PERR
 0x80

	)

29 
	#KBCMDP
 0x64

	)

30 
	#KBC_RAMREAD
 0x20

	)

31 
	#KBC_RAMWRITE
 0x60

	)

32 
	#KBC_AUXDISABLE
 0xa7

	)

33 
	#KBC_AUXENABLE
 0xa8

	)

34 
	#KBC_AUXTEST
 0xa9

	)

35 
	#KBC_KBDECHO
 0xd2

	)

36 
	#KBC_AUXECHO
 0xd3

	)

37 
	#KBC_AUXWRITE
 0xd4

	)

38 
	#KBC_SELFTEST
 0xØ

	)

39 
	#KBC_KBDTEST
 0xab

	)

40 
	#KBC_KBDDISABLE
 0xad

	)

41 
	#KBC_KBDENABLE
 0x´

	)

42 
	#KBC_PULSE0
 0x„

	)

43 
	#KBC_PULSE1
 0xfd

	)

44 
	#KBC_PULSE2
 0xfb

	)

45 
	#KBC_PULSE3
 0xf7

	)

47 
	#KBDATAP
 0x60

	)

48 
	#KBOUTP
 0x60

	)

50 
	#K_RDCMDBYTE
 0x20

	)

51 
	#K_LDCMDBYTE
 0x60

	)

53 
	#KC8_TRANS
 0x40

	)

54 
	#KC8_MDISABLE
 0x20

	)

55 
	#KC8_KDISABLE
 0x10

	)

56 
	#KC8_IGNSEC
 0x08

	)

57 
	#KC8_CPU
 0x04

	)

58 
	#KC8_MENABLE
 0x02

	)

59 
	#KC8_KENABLE
 0x01

	)

60 
	#CMDBYTE
 (
KC8_TRANS
|
KC8_CPU
|
KC8_MENABLE
|
KC8_KENABLE
)

	)

63 
	#KBC_RESET
 0xFF

	)

64 
	#KBC_RESEND
 0xFE

	)

65 
	#KBC_SETDEFAULT
 0xF6

	)

66 
	#KBC_DISABLE
 0xF5

	)

67 
	#KBC_ENABLE
 0xF4

	)

68 
	#KBC_TYPEMATIC
 0xF3

	)

69 
	#KBC_SETTABLE
 0xF0

	)

70 
	#KBC_MODEIND
 0xED

	)

71 
	#KBC_ECHO
 0xEE

	)

74 
	#KBR_EXTENDED
 0xE0

	)

75 
	#KBR_RESEND
 0xFE

	)

76 
	#KBR_ACK
 0xFA

	)

77 
	#KBR_OVERRUN
 0x00

	)

78 
	#KBR_FAILURE
 0xFD

	)

79 
	#KBR_BREAK
 0xF0

	)

80 
	#KBR_RSTDONE
 0xAA

	)

81 
	#KBR_ECHO
 0xEE

	)

	@inc/lib.h

7 #i‚de‡
JOS_INC_LIB_H


8 
	#JOS_INC_LIB_H
 1

	)

10 
	~<öc/ty≥s.h
>

11 
	~<öc/°dio.h
>

12 
	~<öc/°d¨g.h
>

13 
	~<öc/°rög.h
>

14 
	~<öc/îr‹.h
>

15 
	~<öc/as£π.h
>

16 
	~<öc/ív.h
>

17 
	~<öc/memœyout.h
>

18 
	~<öc/sysˇŒ.h
>

19 
	~<öc/å≠.h
>

20 
	~<öc/fs.h
>

21 
	~<öc/fd.h
>

22 
	~<öc/¨gs.h
>

24 
	#USED
(
x
Ë()(x)

	)

27 *
bö¨y«me
;

28 vﬁ©ûê
Env
 *
ív
;

29 vﬁ©ûê
Env
 
ívs
[
NENV
];

30 vﬁ©ûê
Page
 
∑ges
[];

31 
exô
();

34 
£t_pgÁu…_h™dÀr
((*
h™dÀr
)(
UTøp‰ame
 *
utf
));

37 * 
	`ªadlöe
(c⁄° *
buf
);

40 
	`sys_˝uts
(c⁄° *
°rög
, 
size_t
 
Àn
);

41 
	`sys_cgëc
();

42 
ívid_t
 
	`sys_gëívid
();

43 
	`sys_ív_de°roy
(
ívid_t
);

44 
	`sys_yõld
();

45 
ívid_t
 
	`sys_exof‹k
();

46 
	`sys_ív_£t_¥i‹ôy
(
ívid_t
 
ív
, 
¥i‹ôy
);

47 
	`sys_ív_£t_°©us
(
ívid_t
 
ív
, 
°©us
);

48 
	`sys_ív_£t_å≠‰ame
(
ívid_t
 
ív
, 
Tøp‰ame
 *
tf
);

49 
	`sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ív
, *
upˇŒ
);

50 
	`sys_∑ge_Æloc
(
ívid_t
 
ív
, *
pg
, 
≥rm
);

51 
	`sys_∑ge_m≠
(
ívid_t
 
§c_ív
, *
§c_pg
,

52 
ívid_t
 
d°_ív
, *
d°_pg
, 
≥rm
);

53 
	`sys_∑ge_unm≠
(
ívid_t
 
ív
, *
pg
);

54 
	`sys_ùc_åy_£nd
(
ívid_t
 
to_ív
, 
uöt32_t
 
vÆue
, *
pg
, 
≥rm
);

55 
	`sys_ùc_ªcv
(*
rcv_pg
);

58 
__ölöe
 
ívid_t
 
	$sys_exof‹k
(Ë
	`__©åibuã__
((
Æways_ölöe
));

59 
__ölöe
 
ívid_t


60 
	$sys_exof‹k
()

62 
ívid_t
 
ªt
;

63 
__asm
 
	`__vﬁ©ûe
("int %2"

64 : "˜" (
ªt
)

65 : "a" (
SYS_exof‹k
),

66 "i" (
T_SYSCALL
)

68  
ªt
;

69 
	}
}

72 
ùc_£nd
(
ívid_t
 
to_ív
, 
uöt32_t
 
vÆue
, *
pg
, 
≥rm
);

73 
öt32_t
 
ùc_ªcv
(
ívid_t
 *
‰om_ív_°‹e
, *
pg
, *
≥rm_°‹e
);

76 
	#PTE_SHARE
 0x400

	)

77 
ívid_t
 
f‹k
();

78 
ívid_t
 
sf‹k
();

81 
˛o£
(
fd
);

82 
ssize_t
 
ªad
(
fd
, *
buf
, 
size_t
 
nbyãs
);

83 
ssize_t
 
wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
nbyãs
);

84 
£ek
(
fd
, 
off_t
 
off£t
);

85 
˛o£_Æl
();

86 
ssize_t
 
ªadn
(
fd
, *
buf
, 
size_t
 
nbyãs
);

87 
dup
(
ﬁdfd
, 
√wfd
);

88 
f°©
(
fd
, 
Sèt
 *
°©buf
);

89 
°©
(c⁄° *
∑th
, 
Sèt
 *
°©buf
);

92 
›í
(c⁄° *
∑th
, 
mode
);

93 
ªad_m≠
(
fd
, 
off_t
 
off£t
, **
blk
);

94 
·runˇã
(
fd
, 
off_t
 
size
);

95 
ªmove
(c⁄° *
∑th
);

96 
sync
();

99 
fsùc_›í
(c⁄° *
∑th
, 
omode
, 
Fd
 *
fd
);

100 
fsùc_m≠
(
fûeid
, 
off_t
 
off£t
, *
d°_va
);

101 
fsùc_£t_size
(
fûeid
, 
off_t
 
size
);

102 
fsùc_˛o£
(
fûeid
);

103 
fsùc_dúty
(
fûeid
, 
off_t
 
off£t
);

104 
fsùc_ªmove
(c⁄° *
∑th
);

105 
fsùc_sync
();

108 
∑gîef
(*
addr
);

111 
ívid_t
 
•awn
(c⁄° *
¥ogøm
, c⁄° **
¨gv
);

112 
ívid_t
 
•aw∆
(c⁄° *
¥ogøm
, c⁄° *
¨g0
, ...);

116 
	#O_RDONLY
 0x0000

	)

117 
	#O_WRONLY
 0x0001

	)

118 
	#O_RDWR
 0x0002

	)

119 
	#O_ACCMODE
 0x0003

	)

121 
	#O_CREAT
 0x0100

	)

122 
	#O_TRUNC
 0x0200

	)

123 
	#O_EXCL
 0x0400

	)

124 
	#O_MKDIR
 0x0800

	)

	@inc/malloc.h

1 #i‚de‡
JOS_INC_MALLOC_H


2 
	#JOS_INC_MALLOC_H
 1

	)

4 *
mÆloc
(
size_t
 
size
);

5 
‰ì
(*
addr
);

	@inc/memlayout.h

1 #i‚de‡
JOS_INC_MEMLAYOUT_H


2 
	#JOS_INC_MEMLAYOUT_H


	)

4 #i‚de‡
__ASSEMBLER__


5 
	~<öc/ty≥s.h
>

6 
	~<öc/queue.h
>

7 
	~<öc/mmu.h
>

16 
	#GD_KT
 0x08

17 
	#GD_KD
 0x10

18 
	#GD_UT
 0x18

19 
	#GD_UD
 0x20

20 
	#GD_TSS
 0x28

21 

	)

82 
	#KERNBASE
 0xF0000000

	)

87 
	#IOPHYSMEM
 0x0A0000

	)

88 
	#EXTPHYSMEM
 0x100000

	)

94 
	#VPT
 (
KERNBASE
 - 
PTSIZE
)

	)

95 
	#KSTACKTOP
 
VPT


	)

96 
	#KSTKSIZE
 (8*
PGSIZE
)

97 
	#ULIM
 (
KSTACKTOP
 - 
PTSIZE
)

	)

105 
	#UVPT
 (
ULIM
 - 
PTSIZE
)

	)

107 
	#UPAGES
 (
UVPT
 - 
PTSIZE
)

	)

109 
	#UENVS
 (
UPAGES
 - 
PTSIZE
)

	)

116 
	#UTOP
 
UENVS


	)

118 
	#UXSTACKTOP
 
UTOP


	)

121 
	#USTACKTOP
 (
UTOP
 - 2*
PGSIZE
)

	)

124 
	#UTEXT
 (2*
PTSIZE
)

	)

127 
	#UTEMP
 ((*Ë
PTSIZE
)

	)

130 
	#PFTEMP
 (
UTEMP
 + 
PTSIZE
 - 
PGSIZE
)

	)

132 
	#USTABDATA
 (
PTSIZE
 / 2)

	)

135 #i‚de‡
__ASSEMBLER__


151 
uöt32_t
 
	t±e_t
;

152 
uöt32_t
 
	tpde_t
;

154 vﬁ©ûê
±e_t
 
v±
[];

155 vﬁ©ûê
pde_t
 
vpd
[];

166 
LIST_HEAD
(
Page_li°
, 
Page
);

167 
	$LIST_ENTRY
(
	tPage
Ë
	tPage_LIST_íåy_t
;

169 
	sPage
 {

170 
Page_LIST_íåy_t
 
µ_lök
;

177 
uöt16_t
 
µ_ªf
;

	@inc/mmu.h

1 #i‚de‡
JOS_INC_MMU_H


2 
	#JOS_INC_MMU_H


	)

30 
	#PPN
(
œ
Ë(((
uöçå_t
Ë÷a)Ë>> 
PTXSHIFT
)

	)

31 
	#VPN
(
œ
Ë
	`PPN
(la)

32 

	)

34 
	#PDX
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PDXSHIFT
Ë& 0x3FF)

	)

35 
	#VPD
(
œ
Ë
	`PDX
(la)

36 

	)

38 
	#PTX
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PTXSHIFT
Ë& 0x3FF)

	)

41 
	#PGOFF
(
œ
Ë(((
uöçå_t
Ë÷a)Ë& 0xFFF)

	)

44 
	#PGADDR
(
d
, 
t
, 
o
Ë((*Ë((dË<< 
PDXSHIFT
 | (tË<< 
PTXSHIFT
 | (o)))

	)

47 
	#NPDENTRIES
 1024

48 
	#NPTENTRIES
 1024

49 

	)

50 
	#PGSIZE
 4096

51 
	#PGSHIFT
 12

52 

	)

53 
	#PTSIZE
 (
PGSIZE
*
NPTENTRIES
)

54 
	#PTSHIFT
 22

55 

	)

56 
	#PTXSHIFT
 12

57 
	#PDXSHIFT
 22

58 

	)

60 
	#PTE_P
 0x001

61 
	#PTE_W
 0x002

62 
	#PTE_U
 0x004

63 
	#PTE_PWT
 0x008

64 
	#PTE_PCD
 0x010

65 
	#PTE_A
 0x020

66 
	#PTE_D
 0x040

67 
	#PTE_PS
 0x080

68 
	#PTE_MBZ
 0x180

69 

	)

72 
	#PTE_AVAIL
 0xE00

73 

	)

75 
	#PTE_USER
 (
PTE_AVAIL
 | 
PTE_P
 | 
PTE_W
 | 
PTE_U
)

	)

78 
	#PTE_ADDR
(
±e
Ë((
phyßddr_t
Ë’ãË& ~0xFFF)

	)

81 
	#CR0_PE
 0x00000001

82 
	#CR0_MP
 0x00000002

83 
	#CR0_EM
 0x00000004

84 
	#CR0_TS
 0x00000008

85 
	#CR0_ET
 0x00000010

86 
	#CR0_NE
 0x00000020

87 
	#CR0_WP
 0x00010000

88 
	#CR0_AM
 0x00040000

89 
	#CR0_NW
 0x20000000

90 
	#CR0_CD
 0x40000000

91 
	#CR0_PG
 0x80000000

92 

	)

93 
	#CR4_PCE
 0x00000100

94 
	#CR4_MCE
 0x00000040

95 
	#CR4_PSE
 0x00000010

96 
	#CR4_DE
 0x00000008

97 
	#CR4_TSD
 0x00000004

98 
	#CR4_PVI
 0x00000002

99 
	#CR4_VME
 0x00000001

100 

	)

102 
	#FL_CF
 0x00000001

103 
	#FL_PF
 0x00000004

104 
	#FL_AF
 0x00000010

105 
	#FL_ZF
 0x00000040

106 
	#FL_SF
 0x00000080

107 
	#FL_TF
 0x00000100

108 
	#FL_IF
 0x00000200

109 
	#FL_DF
 0x00000400

110 
	#FL_OF
 0x00000800

111 
	#FL_IOPL_MASK
 0x00003000

112 
	#FL_IOPL_0
 0x00000000

113 
	#FL_IOPL_1
 0x00001000

114 
	#FL_IOPL_2
 0x00002000

115 
	#FL_IOPL_3
 0x00003000

116 
	#FL_NT
 0x00004000

117 
	#FL_RF
 0x00010000

118 
	#FL_VM
 0x00020000

119 
	#FL_AC
 0x00040000

120 
	#FL_VIF
 0x00080000

121 
	#FL_VIP
 0x00100000

122 
	#FL_ID
 0x00200000

123 

	)

125 
	#FEC_PR
 0x1

126 
	#FEC_WR
 0x2

127 
	#FEC_U
 0x4

128 

	)

136 #ifde‡
__ASSEMBLER__


141 
	#SEG_NULL
 \

142 .
w‹d
 0, 0; \

143 .
byã
 0, 0, 0, 0

	)

144 
	#SEG
(
ty≥
,
ba£
,
lim
) \

145 .
	`w‹d
 (((
lim
Ë>> 12Ë& 0xffff), ((
ba£
) & 0xffff); \

146 .
	`byã
 (((
ba£
Ë>> 16Ë& 0xff), (0x90 | (
ty≥
)), \

147 (0xC0 | (((
lim
Ë>> 28Ë& 0xf)), (((
ba£
Ë>> 24Ë& 0xff)

	)

151 
	~<öc/ty≥s.h
>

154 
	sSegdesc
 {

155 
	msd_lim_15_0
 : 16;

156 
	msd_ba£_15_0
 : 16;

157 
	msd_ba£_23_16
 : 8;

158 
	msd_ty≥
 : 4;

159 
	msd_s
 : 1;

160 
	msd_d∂
 : 2;

161 
	msd_p
 : 1;

162 
	msd_lim_19_16
 : 4;

163 
	msd_avl
 : 1;

164 
	msd_rsv1
 : 1;

165 
	msd_db
 : 1;

166 
	msd_g
 : 1;

167 
	msd_ba£_31_24
 : 8;

170 
	#SEG_NULL
 (
Segdesc
){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }

	)

172 
	#SEG_FAULT
 (
Segdesc
){ 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0 }

	)

174 
	#SEG
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
Segdesc
) \

175 { ((
lim
Ë>> 12Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

176 
ty≥
, 1, 
d∂
, 1, (Ë(
lim
) >> 28, 0, 0, 1, 1, \

177 (Ë(
ba£
Ë>> 24 }

	)

178 
	#SEG16
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
Segdesc
) \

179 { (
lim
Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

180 
ty≥
, 1, 
d∂
, 1, (Ë(
lim
) >> 16, 0, 0, 1, 0, \

181 (Ë(
ba£
Ë>> 24 }

	)

186 
	#STA_X
 0x8

187 
	#STA_E
 0x4

188 
	#STA_C
 0x4

189 
	#STA_W
 0x2

190 
	#STA_R
 0x2

191 
	#STA_A
 0x1

192 

	)

194 
	#STS_T16A
 0x1

195 
	#STS_LDT
 0x2

196 
	#STS_T16B
 0x3

197 
	#STS_CG16
 0x4

198 
	#STS_TG
 0x5

199 
	#STS_IG16
 0x6

200 
	#STS_TG16
 0x7

201 
	#STS_T32A
 0x9

202 
	#STS_T32B
 0xB

203 
	#STS_CG32
 0xC

204 
	#STS_IG32
 0xE

205 
	#STS_TG32
 0xF

206 

	)

214 #i‚de‡
__ASSEMBLER__


217 
	sTask°©e
 {

218 
uöt32_t
 
	mts_lök
;

219 
uöçå_t
 
	mts_e•0
;

220 
uöt16_t
 
	mts_ss0
;

221 
uöt16_t
 
	mts_∑ddög1
;

222 
uöçå_t
 
	mts_e•1
;

223 
uöt16_t
 
	mts_ss1
;

224 
uöt16_t
 
	mts_∑ddög2
;

225 
uöçå_t
 
	mts_e•2
;

226 
uöt16_t
 
	mts_ss2
;

227 
uöt16_t
 
	mts_∑ddög3
;

228 
phyßddr_t
 
	mts_¸3
;

229 
uöçå_t
 
	mts_eù
;

230 
uöt32_t
 
	mts_eÊags
;

231 
uöt32_t
 
	mts_óx
;

232 
uöt32_t
 
	mts_ecx
;

233 
uöt32_t
 
	mts_edx
;

234 
uöt32_t
 
	mts_ebx
;

235 
uöçå_t
 
	mts_e•
;

236 
uöçå_t
 
	mts_ebp
;

237 
uöt32_t
 
	mts_esi
;

238 
uöt32_t
 
	mts_edi
;

239 
uöt16_t
 
	mts_es
;

240 
uöt16_t
 
	mts_∑ddög4
;

241 
uöt16_t
 
	mts_cs
;

242 
uöt16_t
 
	mts_∑ddög5
;

243 
uöt16_t
 
	mts_ss
;

244 
uöt16_t
 
	mts_∑ddög6
;

245 
uöt16_t
 
	mts_ds
;

246 
uöt16_t
 
	mts_∑ddög7
;

247 
uöt16_t
 
	mts_fs
;

248 
uöt16_t
 
	mts_∑ddög8
;

249 
uöt16_t
 
	mts_gs
;

250 
uöt16_t
 
	mts_∑ddög9
;

251 
uöt16_t
 
	mts_ldt
;

252 
uöt16_t
 
	mts_∑ddög10
;

253 
uöt16_t
 
	mts_t
;

254 
uöt16_t
 
	mts_iomb
;

258 
	sG©edesc
 {

259 
	mgd_off_15_0
 : 16;

260 
	mgd_ss
 : 16;

261 
	mgd_¨gs
 : 5;

262 
	mgd_rsv1
 : 3;

263 
	mgd_ty≥
 : 4;

264 
	mgd_s
 : 1;

265 
	mgd_d∂
 : 2;

266 
	mgd_p
 : 1;

267 
	mgd_off_31_16
 : 16;

277 
	#SETGATE
(
g©e
, 
i°øp
, 
£l
, 
off
, 
d∂
) \

279 (
g©e
).
gd_off_15_0
 = (
uöt32_t
Ë(
off
) & 0xffff; \

280 (
g©e
).
gd_ss
 = (
£l
); \

281 (
g©e
).
gd_¨gs
 = 0; \

282 (
g©e
).
gd_rsv1
 = 0; \

283 (
g©e
).
gd_ty≥
 = (
i°øp
Ë? 
STS_TG32
 : 
STS_IG32
; \

284 (
g©e
).
gd_s
 = 0; \

285 (
g©e
).
gd_d∂
 = (
d∂
); \

286 (
g©e
).
gd_p
 = 1; \

287 (
g©e
).
gd_off_31_16
 = (
uöt32_t
Ë(
off
) >> 16; \

288 }

	)

291 
	#SETCALLGATE
(
g©e
, 
ss
, 
off
, 
d∂
) \

293 (
g©e
).
gd_off_15_0
 = (
uöt32_t
Ë(
off
) & 0xffff; \

294 (
g©e
).
gd_ss
 = (
ss
); \

295 (
g©e
).
gd_¨gs
 = 0; \

296 (
g©e
).
gd_rsv1
 = 0; \

297 (
g©e
).
gd_ty≥
 = 
STS_CG32
; \

298 (
g©e
).
gd_s
 = 0; \

299 (
g©e
).
gd_d∂
 = (
d∂
); \

300 (
g©e
).
gd_p
 = 1; \

301 (
g©e
).
gd_off_31_16
 = (
uöt32_t
Ë(
off
) >> 16; \

302 }

	)

305 
	sP£udodesc
 {

306 
uöt16_t
 
	mpd_lim
;

307 
uöt32_t
 
	mpd_ba£
;

308 } 
__©åibuã__
 ((
∑cked
));

	@inc/queue.h

35 #i‚de‡
JOS_INC_QUEUE_H


36 
	#JOS_INC_QUEUE_H


	)

52 
	sFrob


54 
	m‰obozz
;

55 
LIST_ENTRY
(
Frob
Ë
	m‰ob_lök
;

58 
	$LIST_HEAD
(
Frob_li°
, 
Frob
)

60 
Frob_li°
 
Êi°
;

62 
	`LIST_INIT
(&
Êi°
);

63 
Êi°
 = 
	`LIST_HEAD_INITIALIZER
(&flist);

65 if(
	$LIST_EMPTY
(&
Êi°
))

66 
	`¥ötf
("list isÉmpty\n");

68 
Frob
 *
f
 = 
	`LIST_FIRST
(&
Êi°
);

69 
f
 = 
	`LIST_NEXT
(f, 
‰ob_lök
);

70 
f
 = 
	`LIST_NEXT
(f, 
‰ob_lök
);

72 
f
=
	`LIST_FIRST
(&
Êi°
); f != 0;

73 
f
 = 
	$LIST_NEXT
(
f
, 
‰ob_lök
))

74 
	`¥ötf
("‡%d\n", 
f
->
‰obozz
);

76 
	$LIST_FOREACH
(
f
, &
Êi°
, 
‰ob_lök
)

77 
	`¥ötf
("‡%d\n", 
f
->
‰obozz
);

79 
f
 = 
	`LIST_NEXT
(
	`LIST_FIRST
(&
Êi°
));

80 
	`LIST_INSERT_AFTER
(
f
, 
g
, 
‰ob_lök
);

81 
	`LIST_REMOVE
(
g
, 
‰ob_lök
);

82 
	`LIST_INSERT_BEFORE
(
f
, 
g
, 
‰ob_lök
);

83 
	`LIST_REMOVE
(
g
, 
‰ob_lök
);

84 
	`LIST_INSERT_HEAD
(&
Êi°
, 
g
, 
‰ob_lök
);

109 
	#LIST_HEAD
(
«me
, 
ty≥
) \

110 
	s«me
 { \

111 
ty≥
 *
lh_fú°
; \

112 }

	)

118 
	#LIST_HEAD_INITIALIZER
(
hód
) \

119 { 
NULL
 
	}

	)
}

129 
	#LIST_ENTRY
(
ty≥
) \

131 
ty≥
 *
À_√xt
; \

132 
ty≥
 **
À_¥ev
; \

133 }

	)

142 
	#LIST_EMPTY
(
hód
Ë((hód)->
lh_fú°
 =
NULL
)

	)

147 
	#LIST_FIRST
(
hód
Ë((hód)->
lh_fú°
)

	)

153 
	#LIST_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
À_√xt
)

	)

160 
	#LIST_FOREACH
(
v¨
, 
hód
, 
fõld
) \

161 (
v¨
Ë
	`LIST_FIRST
((
hód
)); \

162 (
v¨
); \

163 (
v¨
Ë
	`LIST_NEXT
((v¨), 
fõld
))

	)

168 
	#LIST_INIT
(
hód
) do { \

169 
	`LIST_FIRST
((
hód
)Ë
NULL
; \

170 } 0)

	)

177 
	#LIST_INSERT_AFTER
(
li°ñm
, 
ñm
, 
fõld
) do { \

178 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
ËLIST_NEXT((
li°ñm
), fõld)Ë!
NULL
)\

179 
	`LIST_NEXT
((
li°ñm
), 
fõld
)->fõld.
À_¥ev
 = \

180 &
	`LIST_NEXT
((
ñm
), 
fõld
); \

181 
	`LIST_NEXT
((
li°ñm
), 
fõld
Ë(
ñm
); \

182 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
li°ñm
), field); \

183 } 0)

	)

190 
	#LIST_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

191 (
ñm
)->
fõld
.
À_¥ev
 = (
li°ñm
)->field.le_prev; \

192 
	`LIST_NEXT
((
ñm
), 
fõld
Ë(
li°ñm
); \

193 *(
li°ñm
)->
fõld
.
À_¥ev
 = (
ñm
); \

194 (
li°ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field); \

195 } 0)

	)

201 
	#LIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

202 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
Ë
	`LIST_FIRST
((
hód
))Ë!
NULL
) \

203 
	`LIST_FIRST
((
hód
))->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field);\

204 
	`LIST_FIRST
((
hód
)Ë(
ñm
); \

205 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_FIRST
((
hód
)); \

206 } 0)

	)

212 
	#LIST_REMOVE
(
ñm
, 
fõld
) do { \

213 i‡(
	`LIST_NEXT
((
ñm
), 
fõld
Ë!
NULL
) \

214 
	`LIST_NEXT
((
ñm
), 
fõld
)->fõld.
À_¥ev
 = \

215 (
ñm
)->
fõld
.
À_¥ev
; \

216 *(
ñm
)->
fõld
.
À_¥ev
 = 
	`LIST_NEXT
((elm), field); \

217 } 0)

	)

	@inc/stab.h

1 #i‚de‡
JOS_STAB_H


2 
	#JOS_STAB_H


	)

3 
	~<öc/ty≥s.h
>

15 
	#N_GSYM
 0x20

16 
	#N_FNAME
 0x22

17 
	#N_FUN
 0x24

18 
	#N_STSYM
 0x26

19 
	#N_LCSYM
 0x28

20 
	#N_MAIN
 0x2a

21 
	#N_PC
 0x30

22 
	#N_RSYM
 0x40

23 
	#N_SLINE
 0x44

24 
	#N_DSLINE
 0x46

25 
	#N_BSLINE
 0x48

26 
	#N_SSYM
 0x60

27 
	#N_SO
 0x64

28 
	#N_LSYM
 0x80

29 
	#N_BINCL
 0x82

30 
	#N_SOL
 0x84

31 
	#N_PSYM
 0xa0

32 
	#N_EINCL
 0xa2

33 
	#N_ENTRY
 0xa4

34 
	#N_LBRAC
 0xc0

35 
	#N_EXCL
 0xc2

36 
	#N_RBRAC
 0xe0

37 
	#N_BCOMM
 0xe2

38 
	#N_ECOMM
 0xe4

39 
	#N_ECOML
 0xe8

40 
	#N_LENG
 0xfe

41 

	)

43 
	sSèb
 {

44 
uöt32_t
 
	mn_°rx
;

45 
uöt8_t
 
	mn_ty≥
;

46 
uöt8_t
 
	mn_Ÿhî
;

47 
uöt16_t
 
	mn_desc
;

48 
uöçå_t
 
	mn_vÆue
;

	@inc/stdarg.h

3 #i‚de‡
JOS_INC_STDARG_H


4 
	#JOS_INC_STDARG_H


	)

6 *
	tva_li°
;

8 
	#__va_size
(
ty≥
) \

9 ((((
ty≥
Ë+ (Ë- 1Ë/ ()Ë* ())

	)

11 
	#va_°¨t
(
≠
, 
œ°
) \

12 ((
≠
Ë(
va_li°
)&(
œ°
Ë+ 
	`__va_size
÷a°))

	)

14 
	#va_¨g
(
≠
, 
ty≥
) \

15 (*(
ty≥
 *)((
≠
Ë+
	`__va_size
—y≥), (≠Ë- __va_size—y≥)))

	)

17 
	#va_íd
(
≠
Ë(()0)

	)

	@inc/stdio.h

1 #i‚de‡
JOS_INC_STDIO_H


2 
	#JOS_INC_STDIO_H


	)

4 
	~<öc/°d¨g.h
>

6 #i‚de‡
NULL


7 
	#NULL
 ((*Ë0)

	)

11 
˝utch¨
(
c
);

12 
gëch¨
();

13 
isc⁄s
(
fd
);

16 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...);

17 
	`v¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, 
va_li°
);

18 
	`¢¥ötf
(*
°r
, 
size
, c⁄° *
fmt
, ...);

19 
	`v¢¥ötf
(*
°r
, 
size
, c⁄° *
fmt
, 
va_li°
);

22 
	`˝rötf
(c⁄° *
fmt
, ...);

23 
	`v˝rötf
(c⁄° *
fmt
, 
va_li°
);

26 
	`¥ötf
(c⁄° *
fmt
, ...);

27 
	`Ârötf
(
fd
, c⁄° *
fmt
, ...);

28 
	`vÂrötf
(
fd
, c⁄° *
fmt
, 
va_li°
);

31 * 
	`ªadlöe
(c⁄° *
¥om±
);

	@inc/string.h

1 #i‚de‡
JOS_INC_STRING_H


2 
	#JOS_INC_STRING_H


	)

4 
	~<öc/ty≥s.h
>

6 
°æí
(c⁄° *
s
);

7 
°∫Àn
(c⁄° *
s
, 
size_t
 
size
);

8 * 
°r˝y
(*
d°
, c⁄° *
§c
);

9 * 
°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
);

10 
size_t
 
°æ˝y
(*
d°
, c⁄° *
§c
, size_à
size
);

11 
°rcmp
(c⁄° *
s1
, c⁄° *
s2
);

12 
°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
size
);

13 * 
°rchr
(c⁄° *
s
, 
c
);

14 * 
°rföd
(c⁄° *
s
, 
c
);

16 * 
mem£t
(*
d°
, 
c
, 
size_t
 
Àn
);

18 * 
memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
);

19 
memcmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
Àn
);

20 * 
memföd
(c⁄° *
s
, 
c
, 
size_t
 
Àn
);

22 
°πﬁ
(c⁄° *
s
, **
íd±r
, 
ba£
);

	@inc/syscall.h

1 #i‚de‡
JOS_INC_SYSCALL_H


2 
	#JOS_INC_SYSCALL_H


	)

7 
	mSYS_˝uts
 = 0,

8 
	mSYS_cgëc
,

9 
	mSYS_gëívid
,

10 
	mSYS_ív_de°roy
,

11 
	mSYS_∑ge_Æloc
,

12 
	mSYS_∑ge_m≠
,

13 
	mSYS_∑ge_unm≠
,

14 
	mSYS_exof‹k
,

15 
	mSYS_ív_£t_°©us
,

16 
	mSYS_ív_£t_å≠‰ame
,

17 
	mSYS_ív_£t_pgÁu…_upˇŒ
,

18 
	mSYS_yõld
,

19 
	mSYS_ùc_åy_£nd
,

20 
	mSYS_ùc_ªcv
,

21 
	mSYS_ív_£t_¥i‹ôy
,

22 
	mNSYSCALLS


	@inc/timerreg.h

42 
	#TIMER_FREQ
 1193182

	)

43 
	#TIMER_DIV
(
x
Ë((
TIMER_FREQ
+(x)/2)/(x))

	)

48 
	#TIMER_CNTR0
 (
IO_TIMER1
 + 0Ë

	)

49 
	#TIMER_CNTR1
 (
IO_TIMER1
 + 1Ë

	)

50 
	#TIMER_CNTR2
 (
IO_TIMER1
 + 2Ë

	)

51 
	#TIMER_MODE
 (
IO_TIMER1
 + 3Ë

	)

52 
	#TIMER_SEL0
 0x00

	)

53 
	#TIMER_SEL1
 0x40

	)

54 
	#TIMER_SEL2
 0x80

	)

55 
	#TIMER_INTTC
 0x00

	)

56 
	#TIMER_ONESHOT
 0x02

	)

57 
	#TIMER_RATEGEN
 0x04

	)

58 
	#TIMER_SQWAVE
 0x06

	)

59 
	#TIMER_SWSTROBE
 0x08

	)

60 
	#TIMER_HWSTROBE
 0x0®

	)

61 
	#TIMER_LATCH
 0x00

	)

62 
	#TIMER_LSB
 0x10

	)

63 
	#TIMER_MSB
 0x20

	)

64 
	#TIMER_16BIT
 0x30

	)

65 
	#TIMER_BCD
 0x01

	)

	@inc/trap.h

1 #i‚de‡
JOS_INC_TRAP_H


2 
	#JOS_INC_TRAP_H


	)

6 
	#T_DIVIDE
 0

7 
	#T_DEBUG
 1

8 
	#T_NMI
 2

9 
	#T_BRKPT
 3

10 
	#T_OFLOW
 4

11 
	#T_BOUND
 5

12 
	#T_ILLOP
 6

13 
	#T_DEVICE
 7

14 
	#T_DBLFLT
 8

16 
	#T_TSS
 10

17 
	#T_SEGNP
 11

18 
	#T_STACK
 12

19 
	#T_GPFLT
 13

20 
	#T_PGFLT
 14

22 
	#T_FPERR
 16

23 
	#T_ALIGN
 17

24 
	#T_MCHK
 18

25 
	#T_SIMDERR
 19

26 

	)

29 
	#T_SYSCALL
 48

30 
	#T_DEFAULT
 500

31 

	)

33 
	#IRQ_TIMER
 0

	)

34 
	#IRQ_KBD
 1

	)

35 
	#IRQ_IDE
 14

	)

36 
	#IRQ_ERROR
 19

	)

37 
	#IRQ_SPURIOUS
 31

	)

39 #i‚de‡
__ASSEMBLER__


41 
	~<öc/ty≥s.h
>

43 
	sPushRegs
 {

45 
uöt32_t
 
	mªg_edi
;

46 
uöt32_t
 
	mªg_esi
;

47 
uöt32_t
 
	mªg_ebp
;

48 
uöt32_t
 
	mªg_€•
;

49 
uöt32_t
 
	mªg_ebx
;

50 
uöt32_t
 
	mªg_edx
;

51 
uöt32_t
 
	mªg_ecx
;

52 
uöt32_t
 
	mªg_óx
;

55 
	sTøp‰ame
 {

56 
PushRegs
 
	mtf_ªgs
;

57 
uöt16_t
 
	mtf_es
;

58 
uöt16_t
 
	mtf_∑ddög1
;

59 
uöt16_t
 
	mtf_ds
;

60 
uöt16_t
 
	mtf_∑ddög2
;

61 
uöt32_t
 
	mtf_å≠no
;

63 
uöt32_t
 
	mtf_îr
;

64 
uöçå_t
 
	mtf_eù
;

65 
uöt16_t
 
	mtf_cs
;

66 
uöt16_t
 
	mtf_∑ddög3
;

67 
uöt32_t
 
	mtf_eÊags
;

69 
uöçå_t
 
	mtf_e•
;

70 
uöt16_t
 
	mtf_ss
;

71 
uöt16_t
 
	mtf_∑ddög4
;

74 
	sUTøp‰ame
 {

76 
uöt32_t
 
	mutf_Áu…_va
;

77 
uöt32_t
 
	mutf_îr
;

79 
PushRegs
 
	mutf_ªgs
;

80 
uöçå_t
 
	mutf_eù
;

81 
uöt32_t
 
	mutf_eÊags
;

83 
uöçå_t
 
	mutf_e•
;

90 
	#SIZEOF_STRUCT_TRAPFRAME
 0x44

	)

	@inc/types.h

1 #i‚de‡
JOS_INC_TYPES_H


2 
	#JOS_INC_TYPES_H


	)

4 #i‚de‡
NULL


5 
	#NULL
 ((*Ë0)

	)

9 
	tboﬁ
;

12 
__sig√d
 
	töt8_t
;

13 
	tuöt8_t
;

14 
	töt16_t
;

15 
	tuöt16_t
;

16 
	töt32_t
;

17 
	tuöt32_t
;

18 
	töt64_t
;

19 
	tuöt64_t
;

25 
öt32_t
 
	töçå_t
;

26 
uöt32_t
 
	tuöçå_t
;

27 
uöt32_t
 
	tphyßddr_t
;

30 
uöt32_t
 
	tµn_t
;

33 
uöt32_t
 
	tsize_t
;

36 
öt32_t
 
	tssize_t
;

39 
öt32_t
 
	toff_t
;

42 
	#MIN
(
_a
, 
_b
) \

44 
	`ty≥of
(
_a
Ë
__a
 = (_a); \

45 
	`ty≥of
(
_b
Ë
__b
 = (_b); \

46 
__a
 <
__b
 ? __a : __b; \

47 })

	)

48 
	#MAX
(
_a
, 
_b
) \

50 
	`ty≥of
(
_a
Ë
__a
 = (_a); \

51 
	`ty≥of
(
_b
Ë
__b
 = (_b); \

52 
__a
 >
__b
 ? __a : __b; \

53 })

	)

57 
	#ROUNDDOWN
(
a
, 
n
) \

59 
uöt32_t
 
__a
 = (uöt32_tË(
a
); \

60 (
	`ty≥of
(
a
)Ë(
__a
 - __®% (
n
)); \

61 })

	)

63 
	#ROUNDUP
(
a
, 
n
) \

65 
uöt32_t
 
__n
 = (uöt32_tË(
n
); \

66 (
	`ty≥of
(
a
)Ë(
	`ROUNDDOWN
((
uöt32_t
Ë◊Ë+ 
__n
 - 1, __n)); \

67 })

	)

70 
	#off£tof
(
ty≥
, 
membî
Ë((
size_t
Ë(&(—y≥*)0)->membî))

	)

	@inc/x86.h

1 #i‚de‡
JOS_INC_X86_H


2 
	#JOS_INC_X86_H


	)

4 
	~<öc/ty≥s.h
>

6 
__ölöe
 
	$bªakpoöt
(Ë
	`__©åibuã__
((
Æways_ölöe
));

7 
__ölöe
 
uöt8_t
 
	$öb
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

8 
__ölöe
 
	$ösb
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

9 
__ölöe
 
uöt16_t
 
	$öw
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

10 
__ölöe
 
	$ösw
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

11 
__ölöe
 
uöt32_t
 
	$öl
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

12 
__ölöe
 
	$ö¶
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

13 
__ölöe
 
	$outb
(
p‹t
, 
uöt8_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

14 
__ölöe
 
	$outsb
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

15 
__ölöe
 
	$outw
(
p‹t
, 
uöt16_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

16 
__ölöe
 
	$outsw
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

17 
__ölöe
 
	$out¶
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

18 
__ölöe
 
	$oué
(
p‹t
, 
uöt32_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

19 
__ölöe
 
	$övÕg
(*
addr
Ë
	`__©åibuã__
((
Æways_ölöe
));

20 
__ölöe
 
	$lidt
(*
p
Ë
	`__©åibuã__
((
Æways_ölöe
));

21 
__ölöe
 
	$Œdt
(
uöt16_t
 
£l
Ë
	`__©åibuã__
((
Æways_ölöe
));

22 
__ölöe
 
	$…r
(
uöt16_t
 
£l
Ë
	`__©åibuã__
((
Æways_ölöe
));

23 
__ölöe
 
	$l¸0
(
uöt32_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

24 
__ölöe
 
uöt32_t
 
	$r¸0
(Ë
	`__©åibuã__
((
Æways_ölöe
));

25 
__ölöe
 
uöt32_t
 
	$r¸2
(Ë
	`__©åibuã__
((
Æways_ölöe
));

26 
__ölöe
 
	$l¸3
(
uöt32_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

27 
__ölöe
 
uöt32_t
 
	$r¸3
(Ë
	`__©åibuã__
((
Æways_ölöe
));

28 
__ölöe
 
	$l¸4
(
uöt32_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

29 
__ölöe
 
uöt32_t
 
	$r¸4
(Ë
	`__©åibuã__
((
Æways_ölöe
));

30 
__ölöe
 
	$ébÊush
(Ë
	`__©åibuã__
((
Æways_ölöe
));

31 
__ölöe
 
uöt32_t
 
	$ªad_eÊags
(Ë
	`__©åibuã__
((
Æways_ölöe
));

32 
__ölöe
 
	$wrôe_eÊags
(
uöt32_t
 
eÊags
Ë
	`__©åibuã__
((
Æways_ölöe
));

33 
__ölöe
 
uöt32_t
 
	$ªad_ebp
(Ë
	`__©åibuã__
((
Æways_ölöe
));

34 
__ölöe
 
uöt32_t
 
	$ªad_e•
(Ë
	`__©åibuã__
((
Æways_ölöe
));

35 
__ölöe
 
	`˝uid
(
uöt32_t
 
öfo
, uöt32_à*
óxp
, uöt32_à*
ebxp
, uöt32_à*
ecxp
, uöt32_à*
edxp
);

36 
__ölöe
 
uöt64_t
 
	$ªad_tsc
(Ë
	`__©åibuã__
((
Æways_ölöe
));

38 
__ölöe
 

39 
	$bªakpoöt
()

41 
__asm
 
	`__vﬁ©ûe
("int3");

42 
	}
}

44 
__ölöe
 
uöt8_t


45 
	$öb
(
p‹t
)

47 
uöt8_t
 
d©a
;

48 
__asm
 
	`__vﬁ©ûe
("öb %w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

49  
d©a
;

50 
	}
}

52 
__ölöe
 

53 
	$ösb
(
p‹t
, *
addr
, 
˙t
)

55 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsb" :

56 "=D" (
addr
), "=c" (
˙t
) :

57 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

59 
	}
}

61 
__ölöe
 
uöt16_t


62 
	$öw
(
p‹t
)

64 
uöt16_t
 
d©a
;

65 
__asm
 
	`__vﬁ©ûe
("öw %w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

66  
d©a
;

67 
	}
}

69 
__ölöe
 

70 
	$ösw
(
p‹t
, *
addr
, 
˙t
)

72 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsw" :

73 "=D" (
addr
), "=c" (
˙t
) :

74 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

76 
	}
}

78 
__ölöe
 
uöt32_t


79 
	$öl
(
p‹t
)

81 
uöt32_t
 
d©a
;

82 
__asm
 
	`__vﬁ©ûe
("ö»%w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

83  
d©a
;

84 
	}
}

86 
__ölöe
 

87 
	$ö¶
(
p‹t
, *
addr
, 
˙t
)

89 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsl" :

90 "=D" (
addr
), "=c" (
˙t
) :

91 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

93 
	}
}

95 
__ölöe
 

96 
	$outb
(
p‹t
, 
uöt8_t
 
d©a
)

98 
__asm
 
	`__vﬁ©ûe
("outb %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

99 
	}
}

101 
__ölöe
 

102 
	$outsb
(
p‹t
, c⁄° *
addr
, 
˙t
)

104 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsb" :

105 "=S" (
addr
), "=c" (
˙t
) :

106 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

108 
	}
}

110 
__ölöe
 

111 
	$outw
(
p‹t
, 
uöt16_t
 
d©a
)

113 
__asm
 
	`__vﬁ©ûe
("outw %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

114 
	}
}

116 
__ölöe
 

117 
	$outsw
(
p‹t
, c⁄° *
addr
, 
˙t
)

119 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsw" :

120 "=S" (
addr
), "=c" (
˙t
) :

121 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

123 
	}
}

125 
__ölöe
 

126 
	$out¶
(
p‹t
, c⁄° *
addr
, 
˙t
)

128 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsl" :

129 "=S" (
addr
), "=c" (
˙t
) :

130 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

132 
	}
}

134 
__ölöe
 

135 
	$oué
(
p‹t
, 
uöt32_t
 
d©a
)

137 
__asm
 
	`__vﬁ©ûe
("oué %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

138 
	}
}

140 
__ölöe
 

141 
	$övÕg
(*
addr
)

143 
__asm
 
	`__vﬁ©ûe
("övÕg (%0)" : : "r" (
addr
) : "memory");

144 
	}
}

146 
__ölöe
 

147 
	$lidt
(*
p
)

149 
__asm
 
	`__vﬁ©ûe
("lidà(%0)" : : "r" (
p
));

150 
	}
}

152 
__ölöe
 

153 
	$Œdt
(
uöt16_t
 
£l
)

155 
__asm
 
	`__vﬁ©ûe
("Œdà%0" : : "r" (
£l
));

156 
	}
}

158 
__ölöe
 

159 
	$…r
(
uöt16_t
 
£l
)

161 
__asm
 
	`__vﬁ©ûe
("…∏%0" : : "r" (
£l
));

162 
	}
}

164 
__ölöe
 

165 
	$l¸0
(
uöt32_t
 
vÆ
)

167 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸0" : : "r" (
vÆ
));

168 
	}
}

170 
__ölöe
 
uöt32_t


171 
	$r¸0
()

173 
uöt32_t
 
vÆ
;

174 
__asm
 
	`__vﬁ©ûe
("mov»%%¸0,%0" : "Ù" (
vÆ
));

175  
vÆ
;

176 
	}
}

178 
__ölöe
 
uöt32_t


179 
	$r¸2
()

181 
uöt32_t
 
vÆ
;

182 
__asm
 
	`__vﬁ©ûe
("mov»%%¸2,%0" : "Ù" (
vÆ
));

183  
vÆ
;

184 
	}
}

186 
__ölöe
 

187 
	$l¸3
(
uöt32_t
 
vÆ
)

189 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸3" : : "r" (
vÆ
));

190 
	}
}

192 
__ölöe
 
uöt32_t


193 
	$r¸3
()

195 
uöt32_t
 
vÆ
;

196 
__asm
 
	`__vﬁ©ûe
("mov»%%¸3,%0" : "Ù" (
vÆ
));

197  
vÆ
;

198 
	}
}

200 
__ölöe
 

201 
	$l¸4
(
uöt32_t
 
vÆ
)

203 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸4" : : "r" (
vÆ
));

204 
	}
}

206 
__ölöe
 
uöt32_t


207 
	$r¸4
()

209 
uöt32_t
 
¸4
;

210 
__asm
 
	`__vﬁ©ûe
("mov»%%¸4,%0" : "Ù" (
¸4
));

211  
¸4
;

212 
	}
}

214 
__ölöe
 

215 
	$ébÊush
()

217 
uöt32_t
 
¸3
;

218 
__asm
 
	`__vﬁ©ûe
("mov»%%¸3,%0" : "Ù" (
¸3
));

219 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸3" : : "r" (
¸3
));

220 
	}
}

222 
__ölöe
 
uöt32_t


223 
	$ªad_eÊags
()

225 
uöt32_t
 
eÊags
;

226 
__asm
 
	`__vﬁ©ûe
("pushÊ;Ö›»%0" : "Ù" (
eÊags
));

227  
eÊags
;

228 
	}
}

230 
__ölöe
 

231 
	$wrôe_eÊags
(
uöt32_t
 
eÊags
)

233 
__asm
 
	`__vﬁ©ûe
("push»%0;Ö›Ê" : : "r" (
eÊags
));

234 
	}
}

236 
__ölöe
 
uöt32_t


237 
	$ªad_ebp
()

239 
uöt32_t
 
ebp
;

240 
__asm
 
	`__vﬁ©ûe
("mov»%%ebp,%0" : "Ù" (
ebp
));

241  
ebp
;

242 
	}
}

244 
__ölöe
 
uöt32_t


245 
	$ªad_e•
()

247 
uöt32_t
 
e•
;

248 
__asm
 
	`__vﬁ©ûe
("mov»%%e•,%0" : "Ù" (
e•
));

249  
e•
;

250 
	}
}

252 
__ölöe
 

253 
	$˝uid
(
uöt32_t
 
öfo
, uöt32_à*
óxp
, uöt32_à*
ebxp
, uöt32_à*
ecxp
, uöt32_à*
edxp
)

255 
uöt32_t
 
óx
, 
ebx
, 
ecx
, 
edx
;

256 
asm
 volatile("cpuid"

257 : "˜" (
óx
), "=b" (
ebx
), "=c" (
ecx
), "=d" (
edx
)

258 : "a" (
öfo
));

259 i‡(
óxp
)

260 *
óxp
 = 
óx
;

261 i‡(
ebxp
)

262 *
ebxp
 = 
ebx
;

263 i‡(
ecxp
)

264 *
ecxp
 = 
ecx
;

265 i‡(
edxp
)

266 *
edxp
 = 
edx
;

267 
	}
}

269 
__ölöe
 
uöt64_t


270 
	$ªad_tsc
()

272 
uöt64_t
 
tsc
;

273 
__asm
 
	`__vﬁ©ûe
("rdtsc" : "=A" (
tsc
));

274  
tsc
;

275 
	}
}

	@kern/console.c

3 
	~<öc/x86.h
>

4 
	~<öc/memœyout.h
>

5 
	~<öc/kbdªg.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/c⁄sﬁe.h
>

10 
	~<kîn/picúq.h
>

13 
c⁄s_öå
((*
¥oc
)());

18 
	#COM1
 0x3F8

	)

20 
	#COM_RX
 0

21 
	#COM_DLL
 0

22 
	#COM_DLM
 1

23 
	#COM_IER
 1

24 
	#COM_IER_RDI
 0x01

25 
	#COM_IIR
 2

26 
	#COM_FCR
 2

27 
	#COM_LCR
 3

28 
	#COM_LCR_DLAB
 0x80

29 
	#COM_LCR_WLEN8
 0x03

30 
	#COM_MCR
 4

31 
	#COM_MCR_RTS
 0x02

32 
	#COM_MCR_DTR
 0x01

33 
	#COM_MCR_OUT2
 0x08

34 
	#COM_LSR
 5

35 
	#COM_LSR_DATA
 0x01

36 

	)

37 
boﬁ
 
£rül_exi°s
;

40 
	$£rül_¥oc_d©a
()

42 i‡(!(
	`öb
(
COM1
+
COM_LSR
Ë& 
COM_LSR_DATA
))

44  
	`öb
(
COM1
+
COM_RX
);

45 
	}
}

48 
	$£rül_öå
()

50 i‡(
£rül_exi°s
)

51 
	`c⁄s_öå
(
£rül_¥oc_d©a
);

52 
	}
}

55 
	$£rül_öô
()

58 
	`outb
(
COM1
+
COM_FCR
, 0);

61 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_DLAB
);

62 
	`outb
(
COM1
+
COM_DLL
, (
uöt8_t
) (115200 / 9600));

63 
	`outb
(
COM1
+
COM_DLM
, 0);

66 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_WLEN8
 & ~
COM_LCR_DLAB
);

69 
	`outb
(
COM1
+
COM_MCR
, 0);

71 
	`outb
(
COM1
+
COM_IER
, 
COM_IER_RDI
);

75 
£rül_exi°s
 = (
	`öb
(
COM1
+
COM_LSR
) != 0xFF);

76 (Ë
	`öb
(
COM1
+
COM_IIR
);

77 (Ë
	`öb
(
COM1
+
COM_RX
);

80 i‡(
£rül_exi°s
)

81 
	`úq_£tmask_8259A
(
úq_mask_8259A
 & ~(1<<4));

82 
	}
}

92 
	$dñay
()

94 
	`öb
(0x84);

95 
	`öb
(0x84);

96 
	`öb
(0x84);

97 
	`öb
(0x84);

98 
	}
}

101 
	$Õt_putc
(
c
)

103 
i
;

105 
i
 = 0; !(
	`öb
(0x378+1) & 0x80) && i < 12800; i++)

106 
	`dñay
();

107 
	`outb
(0x378+0, 
c
);

108 
	`outb
(0x378+2, 0x08|0x04|0x01);

109 
	`outb
(0x378+2, 0x08);

110 
	}
}

117 
	gaddr_6845
;

118 
uöt16_t
 *
	g¸t_buf
;

119 
uöt16_t
 
	g¸t_pos
;

122 
	$cga_öô
()

124 vﬁ©ûê
uöt16_t
 *
˝
;

125 
uöt16_t
 
was
;

126 
pos
;

128 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
CGA_BUF
);

129 
was
 = *
˝
;

130 *
˝
 = (
uöt16_t
) 0xA55A;

131 i‡(*
˝
 != 0xA55A) {

132 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
MONO_BUF
);

133 
addr_6845
 = 
MONO_BASE
;

135 *
˝
 = 
was
;

136 
addr_6845
 = 
CGA_BASE
;

140 
	`outb
(
addr_6845
, 14);

141 
pos
 = 
	`öb
(
addr_6845
 + 1) << 8;

142 
	`outb
(
addr_6845
, 15);

143 
pos
 |
	`öb
(
addr_6845
 + 1);

145 
¸t_buf
 = (
uöt16_t
*Ë
˝
;

146 
¸t_pos
 = 
pos
;

147 
	}
}

149 
ch_cﬁ‹
;

151 
	$SëBackCﬁ‹
(
uöt16_t
 
num
){

152 
BackCﬁ‹
 = 
num
;

153 
ch_cﬁ‹
 = (
num
 >> 8) & 0x00FF;

154 
	}
}

157 
	$cga_putc
(
c
)

160 
c
 = c + (
ch_cﬁ‹
 << 8);

162 i‡(!(
c
 & ~0xFF))

163 
c
 |
BackCﬁ‹
;

165 
c
 & 0xff) {

167 i‡(
¸t_pos
 > 0) {

168 
¸t_pos
--;

169 
¸t_buf
[
¸t_pos
] = (
c
 & ~0xff) | ' ';

173 
¸t_pos
 +
CRT_COLS
;

176 
¸t_pos
 -(¸t_po†% 
CRT_COLS
);

179 
	`c⁄s_putc
(' ');

180 
	`c⁄s_putc
(' ');

181 
	`c⁄s_putc
(' ');

182 
	`c⁄s_putc
(' ');

183 
	`c⁄s_putc
(' ');

186 
¸t_buf
[
¸t_pos
++] = 
c
;

191 i‡(
¸t_pos
 >
CRT_SIZE
) {

192 
i
;

194 
	`memmove
(
¸t_buf
, cπ_bu‡+ 
CRT_COLS
, (
CRT_SIZE
 - CRT_COLSË* (
uöt16_t
));

195 
i
 = 
CRT_SIZE
 - 
CRT_COLS
; i < CRT_SIZE; i++)

196 
¸t_buf
[
i
] = 0x0700 | ' ';

197 
¸t_pos
 -
CRT_COLS
;

201 
	`outb
(
addr_6845
, 14);

202 
	`outb
(
addr_6845
 + 1, 
¸t_pos
 >> 8);

203 
	`outb
(
addr_6845
, 15);

204 
	`outb
(
addr_6845
 + 1, 
¸t_pos
);

205 
	}
}

210 
	#NO
 0

	)

212 
	#SHIFT
 (1<<0)

	)

213 
	#CTL
 (1<<1)

	)

214 
	#ALT
 (1<<2)

	)

216 
	#CAPSLOCK
 (1<<3)

	)

217 
	#NUMLOCK
 (1<<4)

	)

218 
	#SCROLLLOCK
 (1<<5)

	)

220 
	#E0ESC
 (1<<6)

	)

222 
uöt8_t
 
	gshi·code
[256] =

224 [0x1D] 
CTL
,

225 [0x2A] 
SHIFT
,

226 [0x36] 
SHIFT
,

227 [0x38] 
ALT
,

228 [0x9D] 
CTL
,

229 [0xB8] 
ALT


232 
uöt8_t
 
	gtoggÀcode
[256] =

234 [0x3A] 
CAPSLOCK
,

235 [0x45] 
NUMLOCK
,

236 [0x46] 
SCROLLLOCK


239 
uöt8_t
 
	gn‹mÆm≠
[256] =

241 
NO
, 0x1B, '1', '2', '3', '4', '5', '6',

244 'o', 'p', '[', ']', '\n', 
NO
, 'a', 's',

246 '\'', '`', 
NO
, '\\', 'z', 'x', 'c', 'v',

247 'b', 'n', 'm', ',', '.', '/', 
NO
, '*',

248 
NO
, ' ', NO, NO, NO, NO, NO, NO,

249 
NO
, NO, NO, NO, NO, NO, NO, '7',

251 '2', '3', '0', '.', 
NO
, NO, NO, NO,

252 [0xC7] 
KEY_HOME
, [0x9C] '\n' ,

253 [0xB5] '/' , [0xC8] 
KEY_UP
,

254 [0xC9] 
KEY_PGUP
, [0xCB] 
KEY_LF
,

255 [0xCD] 
KEY_RT
, [0xCF] 
KEY_END
,

256 [0xD0] 
KEY_DN
, [0xD1] 
KEY_PGDN
,

257 [0xD2] 
KEY_INS
, [0xD3] 
KEY_DEL


260 
uöt8_t
 
	gshi·m≠
[256] =

262 
NO
, 033, '!', '@', '#', '$', '%', '^',

265 'O', 'P', '{', '}', '\n', 
NO
, 'A', 'S',

267 '"', '~', 
NO
, '|', 'Z', 'X', 'C', 'V',

268 'B', 'N', 'M', '<', '>', '?', 
NO
, '*',

269 
NO
, ' ', NO, NO, NO, NO, NO, NO,

270 
NO
, NO, NO, NO, NO, NO, NO, '7',

272 '2', '3', '0', '.', 
NO
, NO, NO, NO,

273 [0xC7] 
KEY_HOME
, [0x9C] '\n' ,

274 [0xB5] '/' , [0xC8] 
KEY_UP
,

275 [0xC9] 
KEY_PGUP
, [0xCB] 
KEY_LF
,

276 [0xCD] 
KEY_RT
, [0xCF] 
KEY_END
,

277 [0xD0] 
KEY_DN
, [0xD1] 
KEY_PGDN
,

278 [0xD2] 
KEY_INS
, [0xD3] 
KEY_DEL


281 
	#C
(
x
Ë(x - '@')

	)

283 
uöt8_t
 
	g˘lm≠
[256] =

285 
NO
, NO, NO, NO, NO, NO, NO, NO,

286 
NO
, NO, NO, NO, NO, NO, NO, NO,

287 
C
('Q'), C('W'), C('E'), C('R'), C('T'), C('Y'), C('U'), C('I'),

288 
C
('O'), C('P'), 
NO
, NO, '\r', NO, C('A'), C('S'),

289 
C
('D'), C('F'), C('G'), C('H'), C('J'), C('K'), C('L'), 
NO
,

290 
NO
, NO, NO, 
C
('\\'), C('Z'), C('X'), C('C'), C('V'),

291 
C
('B'), C('N'), C('M'), 
NO
, NO, C('/'), NO, NO,

292 [0x97] 
KEY_HOME
,

293 [0xB5] 
C
('/'), [0xC8] 
KEY_UP
,

294 [0xC9] 
KEY_PGUP
, [0xCB] 
KEY_LF
,

295 [0xCD] 
KEY_RT
, [0xCF] 
KEY_END
,

296 [0xD0] 
KEY_DN
, [0xD1] 
KEY_PGDN
,

297 [0xD2] 
KEY_INS
, [0xD3] 
KEY_DEL


300 
uöt8_t
 *
	gch¨code
[4] = {

301 
n‹mÆm≠
,

302 
shi·m≠
,

303 
˘lm≠
,

304 
˘lm≠


312 
	$kbd_¥oc_d©a
()

314 
c
;

315 
uöt8_t
 
d©a
;

316 
uöt32_t
 
shi·
;

318 i‡((
	`öb
(
KBSTATP
Ë& 
KBS_DIB
) == 0)

321 
d©a
 = 
	`öb
(
KBDATAP
);

323 i‡(
d©a
 == 0xE0) {

325 
shi·
 |
E0ESC
;

327 } i‡(
d©a
 & 0x80) {

329 
d©a
 = (
shi·
 & 
E0ESC
 ? data : data & 0x7F);

330 
shi·
 &~(
shi·code
[
d©a
] | 
E0ESC
);

332 } i‡(
shi·
 & 
E0ESC
) {

334 
d©a
 |= 0x80;

335 
shi·
 &~
E0ESC
;

338 
shi·
 |
shi·code
[
d©a
];

339 
shi·
 ^
toggÀcode
[
d©a
];

341 
c
 = 
ch¨code
[
shi·
 & (
CTL
 | 
SHIFT
)][
d©a
];

342 i‡(
shi·
 & 
CAPSLOCK
) {

343 i‡('a' <
c
 && c <= 'z')

344 
c
 += 'A' - 'a';

345 i‡('A' <
c
 && c <= 'Z')

346 
c
 += 'a' - 'A';

351 i‡(!(~
shi·
 & (
CTL
 | 
ALT
)Ë&& 
c
 =
KEY_DEL
) {

352 
	`˝rötf
("Rebooting!\n");

353 
	`outb
(0x92, 0x3);

356  
c
;

357 
	}
}

360 
	$kbd_öå
()

362 
	`c⁄s_öå
(
kbd_¥oc_d©a
);

363 
	}
}

366 
	$kbd_öô
()

369 
	`kbd_öå
();

370 
	`úq_£tmask_8259A
(
úq_mask_8259A
 & ~(1<<1));

371 
	}
}

380 
	#CONSBUFSIZE
 512

	)

383 
uöt8_t
 
	mbuf
[
CONSBUFSIZE
];

384 
uöt32_t
 
	mΩos
;

385 
uöt32_t
 
	mwpos
;

386 } 
	gc⁄s
;

391 
c⁄s_öå
((*
¥oc
)())

393 
c
;

395 (
c
 = (*
¥oc
)()) != -1) {

396 i‡(
c
 == 0)

398 
c⁄s
.
buf
[c⁄s.
wpos
++] = 
c
;

399 i‡(
c⁄s
.
wpos
 =
CONSBUFSIZE
)

400 
c⁄s
.
wpos
 = 0;

402 
	}
}

406 
	$c⁄s_gëc
()

408 
c
;

413 
	`£rül_öå
();

414 
	`kbd_öå
();

417 i‡(
c⁄s
.
Ωos
 !c⁄s.
wpos
) {

418 
c
 = 
c⁄s
.
buf
[c⁄s.
Ωos
++];

419 i‡(
c⁄s
.
Ωos
 =
CONSBUFSIZE
)

420 
c⁄s
.
Ωos
 = 0;

421  
c
;

424 
	}
}

428 
	$c⁄s_putc
(
c
)

430 
	`Õt_putc
(
c
);

431 
	`cga_putc
(
c
);

432 
	}
}

436 
	$c⁄s_öô
()

438 
	`cga_öô
();

439 
	`kbd_öô
();

440 
	`£rül_öô
();

442 i‡(!
£rül_exi°s
)

443 
	`˝rötf
("SerialÖort doesÇotÉxist!\n");

444 
	}
}

450 
	$˝utch¨
(
c
)

452 
	`c⁄s_putc
(
c
);

453 
	}
}

456 
	$gëch¨
()

458 
c
;

460 (
c
 = 
	`c⁄s_gëc
()) == 0)

462  
c
;

463 
	}
}

466 
	$isc⁄s
(
fdnum
)

470 
	}
}

	@kern/console.h

3 #i‚de‡
_CONSOLE_H_


4 
	#_CONSOLE_H_


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/ty≥s.h
>

11 
	#MONO_BASE
 0x3B4

	)

12 
	#MONO_BUF
 0xB0000

	)

13 
	#CGA_BASE
 0x3D4

	)

14 
	#CGA_BUF
 0xB8000

	)

16 
	#CRT_ROWS
 25

	)

17 
	#CRT_COLS
 80

	)

18 
	#CRT_SIZE
 (
CRT_ROWS
 * 
CRT_COLS
)

	)

20 
c⁄s_öô
();

21 
c⁄s_putc
(
c
);

22 
c⁄s_gëc
();

23 
SëBackCﬁ‹
(
uöt16_t
 
num
);

24 
uöt16_t
 
	gBackCﬁ‹
 = 0x0700;

26 
kbd_öå
();

27 
£rül_öå
();

	@kern/entry.S

3 
	~<öc/mmu.h
>

4 
	~<öc/memœyout.h
>

5 
	~<öc/å≠.h
>

7 #Shi· 
Right
 
Logiˇl


8 
	#SRL
(
vÆ
, 
shamt
Ë(((vÆË>> (shamt)Ë& ~(-1 << (32 - (shamt))))

	)

11 ###################################################################
#Thê
kî√l
 (
this
 
code
Ë
is
 
löked
 
©
 
addªss
 ~(
KERNBASE
 + 1 
Meg
),

12 #buà
the
 
boŸlﬂdî
 
lﬂds
 
ô
 
©
 
addªss
 ~1 
Meg
.

13 #
#RELOC(
x
Ë
m≠s
 
a
 
symbﬁ
 x 
‰om
 
ôs
 
lök
 
addªss
 
to
 it†
a˘uÆ


14 #loˇti⁄ 
ö
 
physiˇl
 
mem‹y
 (
ôs
 
lﬂd
 
addªss
).

16 
	#RELOC
(
x
Ë((xË- 
KERNBASE
)

	)

19 .
£t
 
	gCODE_SEL
,0x8 #ödex 
of
 
code
 
£g
 
wôhö
 
	gmygdt


20 .
£t
 
	gDATA_SEL
,0x10 #ödex 
of
 
d©a
 
£g
 
wôhö
 
	gmygdt


22 
	#MULTIBOOT_PAGE_ALIGN
 (1<<0)

	)

23 
	#MULTIBOOT_MEMORY_INFO
 (1<<1)

	)

24 
	#MULTIBOOT_HEADER_MAGIC
 (0x1BADB002)

	)

25 
	#MULTIBOOT_HEADER_FLAGS
 (
MULTIBOOT_MEMORY_INFO
 | 
MULTIBOOT_PAGE_ALIGN
)

	)

26 
	#CHECKSUM
 (-(
MULTIBOOT_HEADER_MAGIC
 + 
MULTIBOOT_HEADER_FLAGS
))

	)

28 ###################################################################
#íåy 
poöt


30 .
	gãxt


32 #Thê
Mu…iboŸ
 
hódî


33 .
	gÆign
 4

34 .
	gMULTIBOOT_HEADER_MAGIC


35 .
	gMULTIBOOT_HEADER_FLAGS


36 .
	gCHECKSUM


38 .
globl
 
_°¨t


39 
	g_°¨t
:

40 
movw
 
$0x1234
,0x472 #w¨m 
	gboŸ


42 #E°ablish 
our
 
own
 
GDT
 
ö
 
∂a˚
 
of
 
the
 
boŸ
 
lﬂdî
'sÅemporary GDT.

43 
lgdt
 
	$RELOC
(
mygdtdesc
Ë#lﬂd 
des¸ùt‹
 
èbÀ


45 #Immedüãly 
ªlﬂd
 
Æl
 
£gmít
 
	`ªgi°îs
 (
ö˛udög
 
CS
!)

46 #wôh 
£gmít
 
£À˘‹s
 
‰om
 
the
 
√w
 
GDT
.

47 
movl
 
$DATA_SEL
, %
óx
 #D©®
£gmít
 
£À˘‹


48 
movw
 %
ax
,%
ds
 #-> 
DS
: 
D©a
 
Segmít


49 
movw
 %
ax
,%
es
 #-> 
ES
: 
Exåa
 
Segmít


50 
movw
 %
ax
,%
ss
 #-> 
SS
: 
Sèck
 
Segmít


51 
ljmp
 
$CODE_SEL
,
$ªloˇãd
 #ªlﬂd 
CS
 
by
 
jumpög


52 
ªloˇãd
:

54 #CÀ¨ 
the
 
‰ame
 
poöãr
 (
EBP
)

55 #sÿ
th©
 
⁄˚
 
we
 
gë
 
öto
 
debuggög
 
C
 
code
,

56 #°ack 
backåa˚s
 
wûl
 
be
 
ãrmö©ed
 
¥›îly
.

57 
movl
 
$0x0
,%
ebp
 #nukê
‰ame
 
poöãr


59 #Lóvê
a
 
„w
 
w‹ds
 
⁄
 
the
 
°ack
 thê
u£r
 
å≠
 
‰ame


60 
movl
 
	`$
(
boŸ°ackt›
-
SIZEOF_STRUCT_TRAPFRAME
),%
e•


62 #now 
to
 
C
 
code


63 
ˇŒ
 
i386_öô


65 #Should 
√vî
 
gë
 
hîe
, 
but
 
ö
 
we
 do, 
ju°
 
•ö
.

66 
•ö
: 
jmp
 spin

69 ###################################################################
#Sì <
öc
/
memœyout
.
h
> 
a
 
com∂ëe
 
des¸ùti⁄
 
of
 
the£
 
two
 
symbﬁs
.

70 ###################################################################
.
d©a


71 .
globl
 
v±


72 .
£t
 
v±
, 
VPT


73 .
globl
 
vpd


74 .
£t
 
vpd
, (
VPT
 + 
	$SRL
(
VPT
, 10))

77 ###################################################################
#boŸ 
°ack


78 ###################################################################
.
p2Æign
 
PGSHIFT
 #f‹˚ 
∑ge
 
Æignmít


79 .
globl
 
boŸ°ack


80 
boŸ°ack
:

81 .
•a˚
 
KSTKSIZE


82 .
globl
 
boŸ°ackt›


83 
boŸ°ackt›
:

85 ###################################################################
#£tu∞
the
 
GDT


86 ###################################################################
.
p2Æign
 2 #f‹˚ 4 
byã
 
Æignmít


87 
mygdt
:

88 
SEG_NULL
 #nuŒ 
£g


89 
	`SEG
(
STA_X
|
STA_R
, -
KERNBASE
, 0xffffffffË#codê
£g


90 
	`SEG
(
STA_W
, -
KERNBASE
, 0xffffffffË#d©®
£g


91 
mygdtdesc
:

92 .
w‹d
 0x17 #sizeof(
mygdt
) - 1

93 .
	$RELOC
(
mygdt
) #address mygdt

	@kern/env.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/ñf.h
>

10 
	~<kîn/ív.h
>

11 
	~<kîn/pm≠.h
>

12 
	~<kîn/å≠.h
>

13 
	~<kîn/m⁄ô‹.h
>

14 
	~<kîn/sched.h
>

16 
Env
 *
	gívs
 = 
NULL
;

17 
Env
 *
	gcuªnv
 = 
NULL
;

18 
Env_li°
 
	gív_‰ì_li°
;

20 
	#ENVGENSHIFT
 12

21 

	)

31 
	$ívid2ív
(
ívid_t
 
ívid
, 
Env
 **
ív_°‹e
, 
boﬁ
 
check≥rm
)

33 
Env
 *
e
;

36 i‡(
ívid
 == 0) {

37 *
ív_°‹e
 = 
cuªnv
;

46 
e
 = &
ívs
[
	`ENVX
(
ívid
)];

47 i‡(
e
->
ív_°©us
 =
ENV_FREE
 ||É->
ív_id
 !
ívid
) {

48 *
ív_°‹e
 = 0;

49  -
E_BAD_ENV
;

57 i‡(
check≥rm
 && 
e
 !
cuªnv
 &&É->
ív_∑ª¡_id
 !cuªnv->
ív_id
) {

58 *
ív_°‹e
 = 0;

59  -
E_BAD_ENV
;

62 *
ív_°‹e
 = 
e
;

64 
	}
}

73 
	$ív_öô
()

76 
i
;

77 
	`LIST_INIT
(&
ív_‰ì_li°
);

78 
i
 = 
NENV
-1;i>=0;i--){

79 
ívs
[
i
].
ív_id
 = 0;

80 
ívs
[
i
].
ív_°©us
 = 
ENV_FREE
;

81 
	`LIST_INSERT_HEAD
(&
ív_‰ì_li°
, &
ívs
[
i
], 
ív_lök
);

83 
	}
}

96 
	$ív_£tup_vm
(
Env
 *
e
)

98 
i
, 
r
;

99 
Page
 *
p
 = 
NULL
;

102 i‡((
r
 = 
	`∑ge_Æloc
(&
p
)) < 0)

103  
r
;

121 
e
->
ív_pgdú
 = 
	`∑ge2kva
(
p
);

122 
e
->
ív_¸3
 = 
	`∑ge2∑
(
p
);

129 
	`memmove
(
e
->
ív_pgdú
, 
boŸ_pgdú
, 
PGSIZE
);

130 
	`mem£t
(
e
->
ív_pgdú
, 0, 
	`PDX
(
UTOP
)*(
pde_t
));

131 
p
->
µ_ªf
++;

134 
e
->
ív_pgdú
[
	`PDX
(
VPT
)] =É->
ív_¸3
 | 
PTE_P
 | 
PTE_W
;

135 
e
->
ív_pgdú
[
	`PDX
(
UVPT
)] =É->
ív_¸3
 | 
PTE_P
 | 
PTE_U
;

138 
	}
}

149 
	$ív_Æloc
(
Env
 **
√wív_°‹e
, 
ívid_t
 
∑ª¡_id
)

151 
öt32_t
 
gíî©i⁄
;

152 
r
;

153 
Env
 *
e
;

155 i‡(!(
e
 = 
	`LIST_FIRST
(&
ív_‰ì_li°
)))

156  -
E_NO_FREE_ENV
;

159 i‡((
r
 = 
	`ív_£tup_vm
(
e
)) < 0)

160  
r
;

163 
gíî©i⁄
 = (
e
->
ív_id
 + (1 << 
ENVGENSHIFT
)Ë& ~(
NENV
 - 1);

164 i‡(
gíî©i⁄
 <= 0)

165 
gíî©i⁄
 = 1 << 
ENVGENSHIFT
;

166 
e
->
ív_id
 = 
gíî©i⁄
 | (ê- 
ívs
);

169 
e
->
ív_∑ª¡_id
 = 
∑ª¡_id
;

170 
e
->
ív_°©us
 = 
ENV_RUNNABLE
;

171 
e
->
ív_runs
 = 0;

177 
	`mem£t
(&
e
->
ív_tf
, 0, (e->env_tf));

184 
e
->
ív_tf
.
tf_ds
 = 
GD_UD
 | 3;

185 
e
->
ív_tf
.
tf_es
 = 
GD_UD
 | 3;

186 
e
->
ív_tf
.
tf_ss
 = 
GD_UD
 | 3;

187 
e
->
ív_tf
.
tf_e•
 = 
USTACKTOP
;

188 
e
->
ív_tf
.
tf_cs
 = 
GD_UT
 | 3;

192 
e
->
ív_¥i‹ôy
 = 
ENV_PRIOR_DEFAULT
;

196 
e
->
ív_tf
.
tf_eÊags
 |
FL_IF
;

198 
e
->
ív_pgÁu…_upˇŒ
 = 0;

201 
e
->
ív_ùc_ªcvög
 = 0;

207 
	`LIST_REMOVE
(
e
, 
ív_lök
);

208 *
√wív_°‹e
 = 
e
;

212 
	}
}

222 
	$£gmít_Æloc
(
Env
 *
e
, *
va
, 
size_t
 
Àn
)

230 
va
 = 
	`ROUNDDOWN
(va, 
PGSIZE
);

231 
Àn
 = 
	`ROUNDUP
÷í, 
PGSIZE
);

232 
Page
 *
pg
;

233 
r
;

234 ;
Àn
>0;Àn-=
PGSIZE
, 
va
+=PGSIZE){

235 
r
 = 
	`∑ge_Æloc
(&
pg
);

236 if(
r
!=0){

237 
	`∑nic
("alloc failed withÇoneÖhysicalÖage\n");

239 
r
 = 
	`∑ge_ö£π
(
e
->
ív_pgdú
, 
pg
, 
va
, 
PTE_U
|
PTE_W
);

240 if(
r
!=0){

241 
	`∑nic
("alloc failed with mapping failed\n");

244 
	}
}

269 
	$lﬂd_icode
(
Env
 *
e
, 
uöt8_t
 *
bö¨y
, 
size_t
 
size
)

306 
Elf
 *
ív_ñf
 = (Elf*)
bö¨y
;

307 
Proghdr
 *
ph
, *
ïh
;

308 if(
ív_ñf
->
e_magic
 !
ELF_MAGIC
){

309 
	`∑nic
("load_icode:Åhis isÇotáÉlf file\n");

311 
ph
 = (
Proghdr
*)((
uöt8_t
 *)
ív_ñf
 +Énv_ñf->
e_phoff
);

312 
ïh
 = 
ph
 + 
ív_ñf
->
e_phnum
;

314 
	`l¸3
(
e
->
ív_¸3
);

315 ;
ph
<
ïh
;ph++){

316 if(
ph
->
p_ty≥
 =
ELF_PROG_LOAD
){

317 
	`£gmít_Æloc
(
e
, (*)
ph
->
p_va
,Öh->
p_memsz
);

318 
	`mem£t
((*)
ph
->
p_va
, 0,Öh->
p_memsz
);

319 
	`memmove
((*)
ph
->
p_va
, 
bö¨y
+ph->
p_off£t
,Öh->
p_fûesz
);

323 
	`l¸3
(
boŸ_¸3
);

325 
e
->
ív_tf
.
tf_eù
 = 
ív_ñf
->
e_íåy
;

333 
	`£gmít_Æloc
(
e
, (*)(
USTACKTOP
 - 
PGSIZE
), PGSIZE);

336 
	}
}

349 
	$ív_¸óã
(
uöt8_t
 *
bö¨y
, 
size_t
 
size
)

352 
Env
 *
e
;

353 
r
 = 
	`ív_Æloc
(&
e
, 0);

355 if(
r
<0){

356 
	`∑nic
("env_create failed\n");

358 
	`lﬂd_icode
(
e
, 
bö¨y
, 
size
);

359 
	}
}

365 
	$ív_‰ì
(
Env
 *
e
)

367 
±e_t
 *
±
;

368 
uöt32_t
 
pdío
, 
±ío
;

369 
phyßddr_t
 
∑
;

374 i‡(
e
 =
cuªnv
)

375 
	`l¸3
(
boŸ_¸3
);

381 
	`°©ic_as£π
(
UTOP
 % 
PTSIZE
 == 0);

382 
pdío
 = 0;Ödíÿ< 
	`PDX
(
UTOP
);Ödeno++) {

385 i‡(!(
e
->
ív_pgdú
[
pdío
] & 
PTE_P
))

389 
∑
 = 
	`PTE_ADDR
(
e
->
ív_pgdú
[
pdío
]);

390 
±
 = (
±e_t
*Ë
	`KADDR
(
∑
);

393 
±ío
 = 0;Öãnÿ<
	`PTX
(~0);Öteno++) {

394 i‡(
±
[
±ío
] & 
PTE_P
)

395 
	`∑ge_ªmove
(
e
->
ív_pgdú
, 
	`PGADDR
(
pdío
, 
±ío
, 0));

399 
e
->
ív_pgdú
[
pdío
] = 0;

400 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

404 
∑
 = 
e
->
ív_¸3
;

405 
e
->
ív_pgdú
 = 0;

406 
e
->
ív_¸3
 = 0;

407 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

410 
e
->
ív_°©us
 = 
ENV_FREE
;

411 
	`LIST_INSERT_HEAD
(&
ív_‰ì_li°
, 
e
, 
ív_lök
);

412 
	}
}

420 
	$ív_de°roy
(
Env
 *
e
)

422 
	`ív_‰ì
(
e
);

424 i‡(
cuªnv
 =
e
) {

425 
cuªnv
 = 
NULL
;

426 
	`sched_yõld
();

428 
	}
}

437 
	$ív_p›_tf
(
Tøp‰ame
 *
tf
)

439 
__asm
 
	`__vﬁ©ûe
("movl %0,%%esp\n"

445 : : "g" (
tf
) : "memory");

446 
	`∑nic
("iret failed");

447 
	}
}

455 
	$ív_run
(
Env
 *
e
)

475 if(
cuªnv
 !
e
){

476 
cuªnv
 = 
e
;

477 
cuªnv
->
ív_runs
++;

478 
	`l¸3
(
cuªnv
->
ív_¸3
);

480 
	`ív_p›_tf
(&
cuªnv
->
ív_tf
);

481 
	}
}

	@kern/env.h

3 #i‚de‡
JOS_KERN_ENV_H


4 
	#JOS_KERN_ENV_H


	)

6 
	~<öc/ív.h
>

8 #i‚de‡
JOS_MULTIENV


11 
	#JOS_MULTIENV
 0

	)

14 
Env
 *
ívs
;

15 
Env
 *
cuªnv
;

17 
LIST_HEAD
(
Env_li°
, 
Env
);

19 
ív_öô
();

20 
ív_Æloc
(
Env
 **
e
, 
ívid_t
 
∑ª¡_id
);

21 
ív_‰ì
(
Env
 *
e
);

22 
ív_¸óã
(
uöt8_t
 *
bö¨y
, 
size_t
 
size
);

23 
ív_de°roy
(
Env
 *
e
);

25 
ívid2ív
(
ívid_t
 
ívid
, 
Env
 **
ív_°‹e
, 
boﬁ
 
check≥rm
);

27 
	$ív_run
(
Env
 *
e
Ë
	`__©åibuã__
((
n‹ëu∫
));

28 
	$ív_p›_tf
(
Tøp‰ame
 *
tf
Ë
	`__©åibuã__
((
n‹ëu∫
));

31 
	#ENV_CREATE2
(
°¨t
, 
size
) { \

32 
uöt8_t
 
°¨t
[], 
size
[]; \

33 
	`ív_¸óã
(
°¨t
, ()
size
); \

34 
	}

	)
}

36 
	#ENV_CREATE
(
x
) { \

37 
uöt8_t
 
_bö¨y_obj_
##
x
##
_°¨t
[], \

38 
_bö¨y_obj_
##
x
##
_size
[]; \

39 
	`ív_¸óã
(
_bö¨y_obj_
##
x
##
_°¨t
, \

40 ()
_bö¨y_obj_
##
x
##
_size
); \

41 }

	)

	@kern/init.c

3 
	~<öc/°dio.h
>

4 
	~<öc/°rög.h
>

5 
	~<öc/as£π.h
>

7 
	~<kîn/m⁄ô‹.h
>

8 
	~<kîn/c⁄sﬁe.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/k˛ock.h
>

11 
	~<kîn/ív.h
>

12 
	~<kîn/å≠.h
>

13 
	~<kîn/sched.h
>

14 
	~<kîn/picúq.h
>

16 
	$ã°_backåa˚
(
¨g
){

17 
	`˝rötf
("íãrögÅe°_backåa˚ %d\n", 
¨g
);

18 if(
¨g
>0Ë
	`ã°_backåa˚
(arg-1);

19 
	`m⁄_backåa˚
(0,0,0);

20 
	`˝rötf
("ÀavögÅe°_backåa˚ %d\n", 
¨g
);

21 
	}
}

22 
	$£lffun
(){

23 
i
 = 0x00646c72;

24 
	`˝rötf
("++++++++++++++++++++++++++++++++++++++\n");

25 
	`˝rötf
(" H%x Wo%s!!\n", 57616, &
i
);

26 
	`˝rötf
("++++++++++++++++++++++++++++++++++++++\n");

27 
	`˝rötf
("welcomeÅoÅhe Jos system!\n");

28 
	}
}

31 
	$i386_öô
()

33 
ed©a
[], 
íd
[];

38 
	`mem£t
(
ed©a
, 0, 
íd
 -Édata);

42 
	`c⁄s_öô
();

44 
	`˝rötf
("6828 decimal is %o octal!\n", 6828);

47 
	`i386_dëe˘_mem‹y
();

48 
	`i386_vm_öô
();

51 
	`ív_öô
();

52 
	`idt_öô
();

55 
	`pic_öô
();

56 
	`k˛ock_öô
();

59 
	`ENV_CREATE
(
u£r_idÀ
);

65 #i‡
	`deföed
(
TEST
)

67 
	`ENV_CREATE2
(
TEST
, 
TESTSIZE
);

78 
	`sched_yõld
();

81 
	}
}

88 c⁄° *
	g∑nic°r
;

95 
	$_∑nic
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

97 
va_li°
 
≠
;

99 i‡(
∑nic°r
)

100 
dód
;

101 
∑nic°r
 = 
fmt
;

103 
	`va_°¨t
(
≠
, 
fmt
);

104 
	`˝rötf
("kî√»∑ni¯© %s:%d: ", 
fûe
, 
löe
);

105 
	`v˝rötf
(
fmt
, 
≠
);

106 
	`˝rötf
("\n");

107 
	`va_íd
(
≠
);

109 
dód
:

112 
	`m⁄ô‹
(
NULL
);

113 
	}
}

117 
	$_w¨n
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

119 
va_li°
 
≠
;

121 
	`va_°¨t
(
≠
, 
fmt
);

122 
	`˝rötf
("kî√»w¨nögáà%s:%d: ", 
fûe
, 
löe
);

123 
	`v˝rötf
(
fmt
, 
≠
);

124 
	`˝rötf
("\n");

125 
	`va_íd
(
≠
);

126 
	}
}

	@kern/kclock.c

8 
	~<öc/x86.h
>

9 
	~<öc/°dio.h
>

10 
	~<öc/ißªg.h
>

11 
	~<öc/timîªg.h
>

13 
	~<kîn/k˛ock.h
>

14 
	~<kîn/picúq.h
>

18 
	$mc146818_ªad
(
ªg
)

20 
	`outb
(
IO_RTC
, 
ªg
);

21  
	`öb
(
IO_RTC
+1);

22 
	}
}

25 
	$mc146818_wrôe
(
ªg
, 
d©um
)

27 
	`outb
(
IO_RTC
, 
ªg
);

28 
	`outb
(
IO_RTC
+1, 
d©um
);

29 
	}
}

33 
	$k˛ock_öô
()

36 
	`outb
(
TIMER_MODE
, 
TIMER_SEL0
 | 
TIMER_RATEGEN
 | 
TIMER_16BIT
);

37 
	`outb
(
IO_TIMER1
, 
	`TIMER_DIV
(100) % 256);

38 
	`outb
(
IO_TIMER1
, 
	`TIMER_DIV
(100) / 256);

39 
	`˝rötf
(" SetupÅimer interrupts via 8259A\n");

40 
	`úq_£tmask_8259A
(
úq_mask_8259A
 & ~(1<<0));

41 
	`˝rötf
(" unmaskedÅimer interrupt\n");

42 
	}
}

	@kern/kclock.h

3 #i‚de‡
JOS_KERN_KCLOCK_H


4 
	#JOS_KERN_KCLOCK_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	#IO_RTC
 0x070

	)

11 
	#MC_NVRAM_START
 0xê

	)

12 
	#MC_NVRAM_SIZE
 50

	)

15 
	#NVRAM_BASELO
 (
MC_NVRAM_START
 + 7Ë

	)

16 
	#NVRAM_BASEHI
 (
MC_NVRAM_START
 + 8Ë

	)

19 
	#NVRAM_EXTLO
 (
MC_NVRAM_START
 + 9Ë

	)

20 
	#NVRAM_EXTHI
 (
MC_NVRAM_START
 + 10Ë

	)

23 
	#NVRAM_PEXTLO
 (
MC_NVRAM_START
 + 34Ë

	)

24 
	#NVRAM_PEXTHI
 (
MC_NVRAM_START
 + 35Ë

	)

27 
	#NVRAM_CENTURY
 (
MC_NVRAM_START
 + 36Ë

	)

29 
mc146818_ªad
(
ªg
);

30 
mc146818_wrôe
(
ªg
, 
d©um
);

31 
k˛ock_öô
();

	@kern/kdebug.c

1 
	~<öc/°ab.h
>

2 
	~<öc/°rög.h
>

3 
	~<öc/memœyout.h
>

4 
	~<öc/as£π.h
>

6 
	~<kîn/kdebug.h
>

7 
	~<kîn/pm≠.h
>

8 
	~<kîn/ív.h
>

10 c⁄° 
Sèb
 
__STAB_BEGIN__
[];

11 c⁄° 
Sèb
 
__STAB_END__
[];

12 c⁄° 
__STABSTR_BEGIN__
[];

13 c⁄° 
__STABSTR_END__
[];

15 
	sU£rSèbD©a
 {

16 c⁄° 
Sèb
 *
	m°abs
;

17 c⁄° 
Sèb
 *
	m°ab_íd
;

18 c⁄° *
	m°ab°r
;

19 c⁄° *
	m°ab°r_íd
;

60 
	$°ab_bö£¨ch
(c⁄° 
Sèb
 *
°abs
, *
ªgi⁄_À·
, *
ªgi⁄_right
,

61 
ty≥
, 
uöçå_t
 
addr
)

63 
l
 = *
ªgi⁄_À·
, 
r
 = *
ªgi⁄_right
, 
™y_m©ches
 = 0;

65 
l
 <
r
) {

66 
åue_m
 = (
l
 + 
r
Ë/ 2, 
m
 =Årue_m;

69 
m
 >
l
 && 
°abs
[m].
n_ty≥
 !
ty≥
)

70 
m
--;

71 i‡(
m
 < 
l
) {

72 
l
 = 
åue_m
 + 1;

77 
™y_m©ches
 = 1;

78 i‡(
°abs
[
m
].
n_vÆue
 < 
addr
) {

79 *
ªgi⁄_À·
 = 
m
;

80 
l
 = 
åue_m
 + 1;

81 } i‡(
°abs
[
m
].
n_vÆue
 > 
addr
) {

82 *
ªgi⁄_right
 = 
m
 - 1;

83 
r
 = 
m
 - 1;

87 *
ªgi⁄_À·
 = 
m
;

88 
l
 = 
m
;

89 
addr
++;

93 i‡(!
™y_m©ches
)

94 *
ªgi⁄_right
 = *
ªgi⁄_À·
 - 1;

97 
l
 = *
ªgi⁄_right
;

98 
l
 > *
ªgi⁄_À·
 && 
°abs
[l].
n_ty≥
 !
ty≥
;

99 
l
--)

101 *
ªgi⁄_À·
 = 
l
;

103 
	}
}

114 
	$debugöfo_eù
(
uöçå_t
 
addr
, 
Eùdebugöfo
 *
öfo
)

116 c⁄° 
Sèb
 *
°abs
, *
°ab_íd
;

117 c⁄° *
°ab°r
, *
°ab°r_íd
;

118 
lfûe
, 
rfûe
, 
lfun
, 
rfun
, 
Œöe
, 
æöe
;

121 
öfo
->
eù_fûe
 = "<unknown>";

122 
öfo
->
eù_löe
 = 0;

123 
öfo
->
eù_‚_«me
 = "<unknown>";

124 
öfo
->
eù_‚_«mñí
 = 9;

125 
öfo
->
eù_‚_addr
 = 
addr
;

126 
öfo
->
eù_‚_«rg
 = 0;

129 i‡(
addr
 >
ULIM
) {

130 
°abs
 = 
__STAB_BEGIN__
;

131 
°ab_íd
 = 
__STAB_END__
;

132 
°ab°r
 = 
__STABSTR_BEGIN__
;

133 
°ab°r_íd
 = 
__STABSTR_END__
;

140 c⁄° 
U£rSèbD©a
 *
usd
 = (c⁄° U£rSèbD©®*Ë
USTABDATA
;

146 
°abs
 = 
usd
->stabs;

147 
°ab_íd
 = 
usd
->stab_end;

148 
°ab°r
 = 
usd
->stabstr;

149 
°ab°r_íd
 = 
usd
->stabstr_end;

153 i‡(
	`u£r_mem_check
(
cuªnv
, 
°abs
, 
°ab_íd
 - sèbs, 
PTE_U
) < 0

154 || 
	`u£r_mem_check
 (
cuªnv
, 
°ab°r
, 
°ab°r_íd
 - sèb°r, 
PTE_U
) < 0){

160 i‡(
°ab°r_íd
 <
°ab°r
 || stabstr_end[-1] != 0)

169 
lfûe
 = 0;

170 
rfûe
 = (
°ab_íd
 - 
°abs
) - 1;

171 
	`°ab_bö£¨ch
(
°abs
, &
lfûe
, &
rfûe
, 
N_SO
, 
addr
);

172 i‡(
lfûe
 == 0)

177 
lfun
 = 
lfûe
;

178 
rfun
 = 
rfûe
;

179 
	`°ab_bö£¨ch
(
°abs
, &
lfun
, &
rfun
, 
N_FUN
, 
addr
);

181 i‡(
lfun
 <
rfun
) {

184 i‡(
°abs
[
lfun
].
n_°rx
 < 
°ab°r_íd
 - 
°ab°r
)

185 
öfo
->
eù_‚_«me
 = 
°ab°r
 + 
°abs
[
lfun
].
n_°rx
;

186 
öfo
->
eù_‚_addr
 = 
°abs
[
lfun
].
n_vÆue
;

187 
addr
 -
öfo
->
eù_‚_addr
;

189 
Œöe
 = 
lfun
;

190 
æöe
 = 
rfun
;

194 
öfo
->
eù_‚_addr
 = 
addr
;

195 
Œöe
 = 
lfûe
;

196 
æöe
 = 
rfûe
;

199 
öfo
->
eù_‚_«mñí
 = 
	`°rföd
(öfo->
eù_‚_«me
, ':') - info->eip_fn_name;

218 
Œöe
 >
lfûe


219 && 
°abs
[
Œöe
].
n_ty≥
 !
N_SOL


220 && (
°abs
[
Œöe
].
n_ty≥
 !
N_SO
 || !°abs[Œöe].
n_vÆue
))

221 
Œöe
--;

222 i‡(
Œöe
 >
lfûe
 && 
°abs
[Œöe].
n_°rx
 < 
°ab°r_íd
 - 
°ab°r
)

223 
öfo
->
eù_fûe
 = 
°ab°r
 + 
°abs
[
Œöe
].
n_°rx
;

232 
	}
}

	@kern/kdebug.h

1 #i‚de‡
JOS_KERN_KDEBUG_H


2 
	#JOS_KERN_KDEBUG_H


	)

4 
	~<öc/ty≥s.h
>

7 
	sEùdebugöfo
 {

8 c⁄° *
	meù_fûe
;

9 
	meù_löe
;

11 c⁄° *
	meù_‚_«me
;

13 
	meù_‚_«mñí
;

14 
uöçå_t
 
	meù_‚_addr
;

15 
	meù_‚_«rg
;

18 
debugöfo_eù
(
uöçå_t
 
eù
, 
Eùdebugöfo
 *
öfo
);

	@kern/monitor.c

4 
	~<öc/°dio.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/x86.h
>

10 
	~<kîn/c⁄sﬁe.h
>

11 
	~<kîn/m⁄ô‹.h
>

12 
	~<kîn/å≠.h
>

13 
	~<kîn/kdebug.h
>

14 
	~<kîn/pm≠.h
>

15 
	#CMDBUF_SIZE
 80

16 

	)

18 
	sComm™d
 {

19 c⁄° *
	m«me
;

20 c⁄° *
	mdesc
;

22 (*
	mfunc
)(
	m¨gc
, ** 
	m¨gv
, 
Tøp‰ame
* 
	mtf
);

26 
	$SåToNum
(*
°r
,
ba£
){

27 
i
,
sum
 = 0;

28 
i
=0;
°r
[i]!='\0';i++){

29 if(
ba£
 !10&&
i
<2) ;

30 
sum
 *
ba£
;

31 if(
°r
[
i
]>='0'&&°r[i]<='9'Ë
sum
 += (str[i]-'0');

32 if(
°r
[
i
]>='a'&&°r[i]<='f'Ë
sum
 += (str[i]+10-'a');

33 {
	`˝rötf
("wrong inputÇum ! \n"); 0;}

36  
sum
;

37 
	}
}

39 
Comm™d
 
	gcomm™ds
[] = {

40 { "hñp", "Di•œyÅhi†li° o‡comm™ds", 
m⁄_hñp
 },

41 { "kînöfo", "Di•œy inf‹m©i⁄ábouàthêkî√l", 
m⁄_kînöfo
 },

42 { "£tcﬁ‹", "£àthêback cﬁ‹ o‡thêOs, RemembîÅÿadd '0x'", 
m⁄_£tcﬁ‹
 },

43 { "add", "addáŒÇum fﬁlowed", 
m⁄_add
 },

44 { "¥odu˚", "mu»Æ»num fﬁlowed", 
m⁄_mul
 },

45 { "backåa˚", "showÅhêfun˘i⁄ i¿thê°ack", 
m⁄_backåa˚
},

46 { "showm≠pögs", "Di•œy i¿®u£fu»f‹m©áŒ o‡thêphysiˇ»∑gêm≠pögs", 
m⁄_showm≠pögs
},

47 { "£tm≠pögs", " c⁄ã¡†o‡mem‹y givíÉôhîá vútuÆ o∏physiˇ»addªss", 
m⁄_£tm≠pögs
}

49 
	#NCOMMANDS
 ((
comm™ds
)/(comm™ds[0]))

	)

51 
ªad_eù
();

54 
	$m⁄_add
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
){

55 
sum
 = 0;

56 
i
;

57 
i
=1;i<
¨gc
;i++){

58 
sum
 +
	`SåToNum
(
¨gv
[
i
],10);

60 
	`˝rötf
("thêsum i†%d\n",
sum
);

62 
	}
}

64 
	$m⁄_mul
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
){

65 
sum
 = 1;

66 
i
;

67 
i
=1;i<
¨gc
;i++){

68 
sum
 *
	`SåToNum
(
¨gv
[
i
],10);

70 
	`˝rötf
("thê¥odu˚ i†%d\n",
sum
);

72 
	}
}

75 
	$m⁄_£tcﬁ‹
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
){

76 if(
¨gc
<2||¨gc>2Ë
	`˝rötf
("theárgc wrong!\n");

78 
	`˝rötf
("£àcﬁ‹Åÿ%s\n",
¨gv
[1]);

79 
	`SëBackCﬁ‹
(
	`SåToNum
(
¨gv
[1],16));

82 
	}
}

85 
	$showm≠pögs
(
öt32_t
 
lva
, i¡32_à
hva
){

86 
±e_t
 *
±e
;

87 
lva
 < 
hva
){

88 
±e
 = 
	`pgdú_wÆk
(
boŸ_pgdú
, (*)
lva
, 0);

89 
	`˝rötf
("v®: 0x%x -- 0x%x : ",
lva
,Üv®+ 
PGSIZE
);

90 if(
±e
 =
NULL
||!(*±ê& 
PTE_P
)Ë
	`˝rötf
("Not Mapped\n");

92 
	`˝rötf
("∑: 0x%x ",
	`PTE_ADDR
(*
±e
));

93 if(*
±e
 & 
PTE_U
Ë
	`˝rötf
("User ");

94 
	`˝rötf
("Kernel ");

95 if(*
±e
 & 
PTE_W
Ë
	`˝rötf
("Read/Write");

96 
	`˝rötf
("Read Only");

97 
	`˝rötf
("\n");

99 
lva
 +
PGSIZE
;

101 
	}
}

103 
	$m⁄_showm≠pögs
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
){

104 if(
¨gc
 != 3){

105 
	`˝rötf
("Hit: showmappings [LOWER_ADDR] [HIGHER_ADDER]\n");

108 
uöt32_t
 
lva
 = 
	`°πﬁ
(
¨gv
[1], 0, 0);

109 
uöt32_t
 
hva
 = 
	`°πﬁ
(
¨gv
[2], 0, 0);

111 if(
lva
 !
	`ROUNDUP
÷va, 
PGSIZE
)||

112 
hva
 !
	`ROUNDUP
(hva, 
PGSIZE
)||

113 
lva
 > 
hva
){

114 
	`˝rötf
("showmappings : Invalidáddress\n");

115 
	`˝rötf
("Botháddress must beáligned in 4KB\n");

118 
	`showm≠pögs
(
lva
, 
hva
);

120 
	}
}

122 
	$£tm≠pögs
(
uöt32_t
 
va
, uöt32_à
memsize
, uöt32_à
∑
, 
≥rm
){

123 
uöt32_t
 
off£t
;

124 
off£t
 = 0; off£à< 
memsize
; off£à+
PGSIZE
){

125 
	`∑ge_ö£π
(
boŸ_pgdú
, 
	`∑2∑ge
(
∑
 + 
off£t
), (*)
va
 + off£t, 
≥rm
);

127 
	}
}

129 
	$m⁄_£tm≠pögs
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
){

130 i‡(
¨gc
 != 5) {

131 
	`˝rötf
 ("Usage: setmappings [VIRTUAL_ADDR] [PAGE_NUM] [PHYSICAL_ADDR] [PERMISSION]\n");

132 
	`˝rötf
 ("Both virtualáddressándÖhysicaláddress must beáligned in 4KB\n");

133 
	`˝rötf
 ("Permission is one of 4 options ('ur', 'uw', 'kr', 'kw')\n");

134 
	`˝rötf
 ("u stands for user mode, k for kernel mode\n");

135 
	`˝rötf
 ("\nMake sureÅhatÅheÖhysical memory space hasálready been mounted before\n");

138 
uöt32_t
 
va
 = 
	`°πﬁ
(
¨gv
[1], 0, 0);

139 
uöt32_t
 
∑
 = 
	`°πﬁ
(
¨gv
[3], 0, 0);

140 
uöt32_t
 
≥rm
 = 0;

141 
uöt32_t
 
memsize
 = 
	`°πﬁ
(
¨gv
[2], 0, 0Ë* 
PGSIZE
;

143 if(
va
 !
	`ROUNDUP
(va, 
PGSIZE
)||

144 
∑
 !
	`ROUNDUP
’a, 
PGSIZE
)||

145 
va
 > ~0 - 
memsize


147 
	`˝rötf
("argcÉrror\n");

150 
uöt32_t
 
off£t
;

151 
Page
 *
µ
;

152 
off£t
 = 0;off£à< 
memsize
; off£à+
PGSIZE
){

153 
µ
 = 
	`∑2∑ge
(
∑
 + 
off£t
);

154 if(
µ
->
µ_ªf
 == 0){

155 
	`˝rötf
("unmou¡edÖhysiˇ»∑ge: %x - %x\n",
∑
 + 
off£t
,Ö®+ off£à+ 
PGSIZE
);

159 if(
¨gv
[4][0] == 'u'){

160 
≥rm
 |
PTE_U
;

162 if(
¨gv
[4][1] == 'w'){

163 
≥rm
 |
PTE_W
;

165 
	`£tm≠pögs
(
va
, 
memsize
, 
∑
, 
≥rm
);

166 
	`˝rötf
("set memory mapping ok\n");

167 
	`showm≠pögs
(
va
, v®+ 
memsize
);

169 
	}
}

175 
	$m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

177 
i
;

179 
i
 = 0; i < 
NCOMMANDS
; i++)

180 
	`˝rötf
("%†- %s\n", 
comm™ds
[
i
].
«me
, comm™ds[i].
desc
);

182 
	}
}

185 
	$m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

187 
_°¨t
[], 
ëext
[], 
ed©a
[], 
íd
[];

189 
	`˝rötf
("Special kernel symbols:\n");

190 
	`˝rötf
(" _°¨à%08x (vútË %08x (phys)\n", 
_°¨t
, _°¨à- 
KERNBASE
);

191 
	`˝rötf
("Éãxà %08x (vútË %08x (phys)\n", 
ëext
,Éãxà- 
KERNBASE
);

192 
	`˝rötf
("Éd©® %08x (vútË %08x (phys)\n", 
ed©a
,Éd©®- 
KERNBASE
);

193 
	`˝rötf
("Énd %08x (vútË %08x (phys)\n", 
íd
,Énd - 
KERNBASE
);

194 
	`˝rötf
("KernelÉxecutable memory footprint: %dKB\n",

195 (
íd
-
_°¨t
+1023)/1024);

197 
	}
}

200 
	$m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

203 
uöt32_t
 
ebp
 = 
	`ªad_ebp
(), *
p
, 
eù
, 
i
;

204 
Eùdebugöfo
 
bug
;

205 
ebp
 > 0) {

206 
p
 = (
uöt32_t
 *)
ebp
;

207 
eù
 = 
p
[1];

208 
	`˝rötf
("eb∞%x ,eù %xárgs", 
ebp
, 
eù
);

209 
i
 = 2; i < 6; i++) {

210 
	`˝rötf
(" %08x, ", 
p
[
i
]);

212 
	`debugöfo_eù
(
eù
, &
bug
);

213 
	`˝rötf
("\n\t%†: %d : ", 
bug
.
eù_fûe
, bug.
eù_löe
);

214 
i
 = 0; i < 
bug
.
eù_‚_«mñí
; i++)

215 
	`˝utch¨
(
bug
.
eù_‚_«me
[
i
]);

217 
	`˝rötf
("+%d\n", 
eù
 - 
bug
.
eù_‚_addr
);

218 
ebp
 = *
p
;

221 
	}
}

227 
	#WHITESPACE
 "\t\r\¿"

	)

228 
	#MAXARGS
 16

	)

231 
	$runcmd
(*
buf
, 
Tøp‰ame
 *
tf
)

233 
¨gc
;

234 *
¨gv
[
MAXARGS
];

235 
i
;

238 
¨gc
 = 0;

239 
¨gv
[
¨gc
] = 0;

242 *
buf
 && 
	`°rchr
(
WHITESPACE
, *buf))

243 *
buf
++ = 0;

244 i‡(*
buf
 == 0)

248 i‡(
¨gc
 =
MAXARGS
-1) {

249 
	`˝rötf
("Toÿm™yárgumít†(max %d)\n", 
MAXARGS
);

252 
¨gv
[
¨gc
++] = 
buf
;

253 *
buf
 && !
	`°rchr
(
WHITESPACE
, *buf))

254 
buf
++;

256 
¨gv
[
¨gc
] = 0;

259 i‡(
¨gc
 == 0)

261 
i
 = 0; i < 
NCOMMANDS
; i++) {

262 i‡(
	`°rcmp
(
¨gv
[0], 
comm™ds
[
i
].
«me
) == 0)

263  
comm™ds
[
i
].
	`func
(
¨gc
, 
¨gv
, 
tf
);

265 
	`˝rötf
("Unknow¿comm™d '%s'\n", 
¨gv
[0]);

267 
	}
}

270 
	$m⁄ô‹
(
Tøp‰ame
 *
tf
)

272 *
buf
;

275 
	`˝rötf
("%CredWelcome %Cwhtto %Cgrnthe %CorgJOS %Cgrykernel %Cpurmonitor!\n");

281 
	`˝rötf
("%CwhtType 'help' foráÜist of commands.\n");

283 i‡(
tf
 !
NULL
)

284 
	`¥öt_å≠‰ame
(
tf
);

287 
buf
 = 
	`ªadlöe
("K> ");

288 i‡(
buf
 !
NULL
)

289 i‡(
	`runcmd
(
buf
, 
tf
) < 0)

292 
	}
}

298 
	$ªad_eù
()

300 
uöt32_t
 
ˇŒîpc
;

301 
__asm
 
	`__vﬁ©ûe
("mov»4(%%ebp), %0" : "Ù" (
ˇŒîpc
));

302  
ˇŒîpc
;

303 
	}
}

	@kern/monitor.h

1 #i‚de‡
JOS_KERN_MONITOR_H


2 
	#JOS_KERN_MONITOR_H


	)

3 #i‚de‡
JOS_KERNEL


7 
	gTøp‰ame
;

12 
m⁄ô‹
(
Tøp‰ame
 *
tf
);

15 
m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

16 
m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

17 
m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

18 
m⁄_£tcﬁ‹
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

19 
m⁄_add
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

20 
m⁄_mul
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

21 
m⁄_showm≠pögs
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

22 
m⁄_£tm≠pögs
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

	@kern/picirq.c

3 
	~<öc/as£π.h
>

5 
	~<kîn/picúq.h
>

10 
uöt16_t
 
	gúq_mask_8259A
 = 0xFFFF & ~(1<<
IRQ_SLAVE
);

11 
boﬁ
 
	gdidöô
;

15 
	$pic_öô
()

17 
didöô
 = 1;

20 
	`outb
(
IO_PIC1
+1, 0xFF);

21 
	`outb
(
IO_PIC2
+1, 0xFF);

29 
	`outb
(
IO_PIC1
, 0x11);

32 
	`outb
(
IO_PIC1
+1, 
IRQ_OFFSET
);

36 
	`outb
(
IO_PIC1
+1, 1<<
IRQ_SLAVE
);

46 
	`outb
(
IO_PIC1
+1, 0x3);

49 
	`outb
(
IO_PIC2
, 0x11);

50 
	`outb
(
IO_PIC2
+1, 
IRQ_OFFSET
 + 8);

51 
	`outb
(
IO_PIC2
+1, 
IRQ_SLAVE
);

54 
	`outb
(
IO_PIC2
+1, 0x01);

60 
	`outb
(
IO_PIC1
, 0x68);

61 
	`outb
(
IO_PIC1
, 0x0a);

63 
	`outb
(
IO_PIC2
, 0x68);

64 
	`outb
(
IO_PIC2
, 0x0a);

66 i‡(
úq_mask_8259A
 != 0xFFFF)

67 
	`úq_£tmask_8259A
(
úq_mask_8259A
);

68 
	}
}

71 
	$úq_£tmask_8259A
(
uöt16_t
 
mask
)

73 
i
;

74 
úq_mask_8259A
 = 
mask
;

75 i‡(!
didöô
)

77 
	`outb
(
IO_PIC1
+1, ()
mask
);

78 
	`outb
(
IO_PIC2
+1, ()(
mask
 >> 8));

79 
	`˝rötf
("enabled interrupts:");

80 
i
 = 0; i < 16; i++)

81 i‡(~
mask
 & (1<<
i
))

82 
	`˝rötf
(" %d", 
i
);

83 
	`˝rötf
("\n");

84 
	}
}

	@kern/picirq.h

3 #i‚de‡
JOS_KERN_PICIRQ_H


4 
	#JOS_KERN_PICIRQ_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	#MAX_IRQS
 16

10 

	)

12 
	#IO_PIC1
 0x20

13 
	#IO_PIC2
 0xA0

14 

	)

15 
	#IRQ_SLAVE
 2

16 
	#IRQ_OFFSET
 32

17 

	)

19 #i‚de‡
__ASSEMBLER__


21 
	~<öc/ty≥s.h
>

22 
	~<öc/x86.h
>

24 
uöt16_t
 
úq_mask_8259A
;

25 
pic_öô
();

26 
úq_£tmask_8259A
(
uöt16_t
 
mask
);

	@kern/pmap.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/k˛ock.h
>

11 
	~<kîn/ív.h
>

14 
phyßddr_t
 
	gmax∑
;

15 
size_t
 
	g≈age
;

16 
size_t
 
	gba£mem
;

17 
size_t
 
	gextmem
;

20 
pde_t
* 
	gboŸ_pgdú
;

21 
phyßddr_t
 
	gboŸ_¸3
;

22 * 
	gboŸ_‰ìmem
;

24 
Page
* 
	g∑ges
;

25 
Page_li°
 
	g∑ge_‰ì_li°
;

33 
Segdesc
 
	ggdt
[] =

36 
SEG_NULL
,

39 [
GD_KT
 >> 3] = 
SEG
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff, 0),

42 [
GD_KD
 >> 3] = 
SEG
(
STA_W
, 0x0, 0xffffffff, 0),

45 [
GD_UT
 >> 3] = 
SEG
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff, 3),

48 [
GD_UD
 >> 3] = 
SEG
(
STA_W
, 0x0, 0xffffffff, 3),

51 [
GD_TSS
 >> 3] = 
SEG_NULL


54 
P£udodesc
 
	ggdt_pd
 = {

55 (
gdt
) - 1, () gdt

59 
	$nvøm_ªad
(
r
)

61  
	`mc146818_ªad
(
r
) | (mc146818_read(r + 1) << 8);

62 
	}
}

65 
	$i386_dëe˘_mem‹y
()

68 
ba£mem
 = 
	`ROUNDDOWN
(
	`nvøm_ªad
(
NVRAM_BASELO
)*1024, 
PGSIZE
);

69 
extmem
 = 
	`ROUNDDOWN
(
	`nvøm_ªad
(
NVRAM_EXTLO
)*1024, 
PGSIZE
);

73 i‡(
extmem
)

74 
max∑
 = 
EXTPHYSMEM
 + 
extmem
;

76 
max∑
 = 
ba£mem
;

78 
≈age
 = 
max∑
 / 
PGSIZE
;

80 
	`˝rötf
("Physiˇ»mem‹y: %dKávaûabÀ, ", ()(
max∑
/1024));

81 
	`˝rötf
("ba£ = %dK,Éxãnded = %dK\n", ()(
ba£mem
/1024), ()(
extmem
/1024));

82 
	}
}

88 
check_boŸ_pgdú
();

89 
check_∑ge_Æloc
();

90 
∑ge_check
();

91 
boŸ_m≠_£gmít
(
pde_t
 *
pgdú
, 
uöçå_t
 
œ
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
);

107 
	$boŸ_Æloc
(
uöt32_t
 
n
, uöt32_à
Æign
)

109 
íd
[];

110 *
v
 = 
NULL
;

117 i‡(
boŸ_‰ìmem
 == 0)

118 
boŸ_‰ìmem
 = 
íd
;

125 
boŸ_‰ìmem
 = 
	`ROUNDUP
(boŸ_‰ìmem,
Æign
);

126 
v
 = 
boŸ_‰ìmem
;

127 
boŸ_‰ìmem
 +
	`ROUNDUP
(
n
,
Æign
);

128  
v
;

129 
	}
}

144 
	$i386_vm_öô
()

146 
pde_t
* 
pgdú
;

147 
uöt32_t
 
¸0
;

148 
size_t
 
n
;

155 
pgdú
 = 
	`boŸ_Æloc
(
PGSIZE
, PGSIZE);

156 
	`mem£t
(
pgdú
, 0, 
PGSIZE
);

157 
boŸ_pgdú
 = 
pgdú
;

158 
boŸ_¸3
 = 
	`PADDR
(
pgdú
);

167 
pgdú
[
	`PDX
(
VPT
)] = 
	`PADDR
’gdú)|
PTE_W
|
PTE_P
;

171 
pgdú
[
	`PDX
(
UVPT
)] = 
	`PADDR
’gdú)|
PTE_U
|
PTE_P
;

180 
∑ges
 = 
	`boŸ_Æloc
(
≈age
 * (
Page
),
PGSIZE
);

186 
ívs
 = 
	`boŸ_Æloc
(
NENV
 * (
Env
), 
PGSIZE
);

192 
	`˝rötf
("++++++++++memoryÖage check++++++++++++\n");

193 
	`∑ge_öô
();

195 
	`check_∑ge_Æloc
();

197 
	`∑ge_check
();

198 
	`˝rötf
("++++++++memoryÖage checkÉnd++++++++++\n");

211 
n
 = 
	`ROUNDUP
(
≈age
 * (
Page
), 
PGSIZE
);

212 
	`boŸ_m≠_£gmít
(
pgdú
, 
UPAGES
, 
n
, 
	`PADDR
(
∑ges
), 
PTE_U
|
PTE_P
);

220 
	`boŸ_m≠_£gmít
(
pgdú
, 
UENVS
, 
	`ROUNDUP
(
NENV
 * (
Env
), 
PGSIZE
), 
	`PADDR
((
uöçå_t
)
ívs
), 
PTE_P
|
PTE_U
);

230 
	`boŸ_m≠_£gmít
(
pgdú
, 
KSTACKTOP
 - 
KSTKSIZE
, KSTKSIZE, 
	`PADDR
(
boŸ°ack
), 
PTE_W
|
PTE_P
);

240 
	`boŸ_m≠_£gmít
(
pgdú
, 
KERNBASE
, 0xFFFFFFFF - KERNBASE+1, 0, 
PTE_W
|
PTE_P
);

243 
	`check_boŸ_pgdú
();

261 
pgdú
[0] =Ögdú[
	`PDX
(
KERNBASE
)];

264 
	`l¸3
(
boŸ_¸3
);

267 
¸0
 = 
	`r¸0
();

268 
¸0
 |
CR0_PE
|
CR0_PG
|
CR0_AM
|
CR0_WP
|
CR0_NE
|
CR0_TS
|
CR0_EM
|
CR0_MP
;

269 
¸0
 &~(
CR0_TS
|
CR0_EM
);

270 
	`l¸0
(
¸0
);

276 
asm
 volatile("lgdt gdt_pd");

277 
asm
 vﬁ©ûe("movw %%ax,%%gs" :: "a" (
GD_UD
|3));

278 
asm
 vﬁ©ûe("movw %%ax,%%fs" :: "a" (
GD_UD
|3));

279 
asm
 vﬁ©ûe("movw %%ax,%%es" :: "a" (
GD_KD
));

280 
asm
 vﬁ©ûe("movw %%ax,%%ds" :: "a" (
GD_KD
));

281 
asm
 vﬁ©ûe("movw %%ax,%%ss" :: "a" (
GD_KD
));

282 
asm
 vﬁ©ûe("ljm∞%0,$1f\¿1:\n" :: "i" (
GD_KT
));

283 
asm
 volatile("lldt %%ax" :: "a" (0));

289 
pgdú
[0] = 0;

292 
	`l¸3
(
boŸ_¸3
);

293 
	}
}

300 
	$check_∑ge_Æloc
()

302 
Page
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

303 
Page_li°
 
Ê
;

308 
	`LIST_FOREACH
(
µ0
, &
∑ge_‰ì_li°
, 
µ_lök
)

309 
	`mem£t
(
	`∑ge2kva
(
µ0
), 0x97, 128);

312 
µ0
 = 
µ1
 = 
µ2
 = 0;

313 
	`as£π
(
	`∑ge_Æloc
(&
µ0
) == 0);

314 
	`as£π
(
	`∑ge_Æloc
(&
µ1
) == 0);

315 
	`as£π
(
	`∑ge_Æloc
(&
µ2
) == 0);

317 
	`as£π
(
µ0
);

318 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

319 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

320 
	`as£π
(
	`∑ge2∑
(
µ0
Ë< 
≈age
*
PGSIZE
);

321 
	`as£π
(
	`∑ge2∑
(
µ1
Ë< 
≈age
*
PGSIZE
);

322 
	`as£π
(
	`∑ge2∑
(
µ2
Ë< 
≈age
*
PGSIZE
);

325 
Ê
 = 
∑ge_‰ì_li°
;

326 
	`LIST_INIT
(&
∑ge_‰ì_li°
);

329 
	`as£π
(
	`∑ge_Æloc
(&
µ
Ë=-
E_NO_MEM
);

332 
	`∑ge_‰ì
(
µ0
);

333 
	`∑ge_‰ì
(
µ1
);

334 
	`∑ge_‰ì
(
µ2
);

335 
µ0
 = 
µ1
 = 
µ2
 = 0;

336 
	`as£π
(
	`∑ge_Æloc
(&
µ0
) == 0);

337 
	`as£π
(
	`∑ge_Æloc
(&
µ1
) == 0);

338 
	`as£π
(
	`∑ge_Æloc
(&
µ2
) == 0);

339 
	`as£π
(
µ0
);

340 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

341 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

342 
	`as£π
(
	`∑ge_Æloc
(&
µ
Ë=-
E_NO_MEM
);

345 
∑ge_‰ì_li°
 = 
Ê
;

348 
	`∑ge_‰ì
(
µ0
);

349 
	`∑ge_‰ì
(
µ1
);

350 
	`∑ge_‰ì
(
µ2
);

352 
	`˝rötf
("check_page_alloc() succeeded!\n");

353 
	}
}

363 
phyßddr_t
 
check_va2∑
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
);

366 
	$check_boŸ_pgdú
()

368 
uöt32_t
 
i
, 
n
;

369 
pde_t
 *
pgdú
;

371 
pgdú
 = 
boŸ_pgdú
;

374 
n
 = 
	`ROUNDUP
(
≈age
*(
Page
), 
PGSIZE
);

375 
i
 = 0; i < 
n
; i +
PGSIZE
)

376 
	`as£π
(
	`check_va2∑
(
pgdú
, 
UPAGES
 + 
i
Ë=
	`PADDR
(
∑ges
) + i);

379 
n
 = 
	`ROUNDUP
(
NENV
*(
Env
), 
PGSIZE
);

380 
i
 = 0; i < 
n
; i +
PGSIZE
)

381 
	`as£π
(
	`check_va2∑
(
pgdú
, 
UENVS
 + 
i
Ë=
	`PADDR
(
ívs
) + i);

384 
i
 = 0; i < 
≈age
; i +
PGSIZE
)

385 
	`as£π
(
	`check_va2∑
(
pgdú
, 
KERNBASE
 + 
i
) == i);

388 
i
 = 0; i < 
KSTKSIZE
; i +
PGSIZE
)

389 
	`as£π
(
	`check_va2∑
(
pgdú
, 
KSTACKTOP
 - 
KSTKSIZE
 + 
i
Ë=
	`PADDR
(
boŸ°ack
) + i);

392 
i
 = 0; i < 
NPDENTRIES
; i++) {

393 
i
) {

394 
	`PDX
(
VPT
):

395 
	`PDX
(
UVPT
):

396 
	`PDX
(
KSTACKTOP
-1):

397 
	`PDX
(
UPAGES
):

398 
	`PDX
(
UENVS
):

399 
	`as£π
(
pgdú
[
i
]);

402 i‡(
i
 >
	`PDX
(
KERNBASE
))

403 
	`as£π
(
pgdú
[
i
]);

405 
	`as£π
(
pgdú
[
i
] == 0);

409 
	`˝rötf
("check_boot_pgdir() succeeded!\n");

410 
	}
}

417 
phyßddr_t


418 
	$check_va2∑
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
)

420 
±e_t
 *
p
;

422 
pgdú
 = &pgdú[
	`PDX
(
va
)];

423 i‡(!(*
pgdú
 & 
PTE_P
))

425 
p
 = (
±e_t
*Ë
	`KADDR
(
	`PTE_ADDR
(*
pgdú
));

426 i‡(!(
p
[
	`PTX
(
va
)] & 
PTE_P
))

428  
	`PTE_ADDR
(
p
[
	`PTX
(
va
)]);

429 
	}
}

444 
	$∑ge_öô
()

459 
i
;

460 
	`LIST_INIT
(&
∑ge_‰ì_li°
);

461 
i
 = 0; i < 
≈age
; i++) {

462 
∑ges
[
i
].
µ_ªf
 = 0;

463 
	`LIST_INSERT_HEAD
(&
∑ge_‰ì_li°
, &
∑ges
[
i
], 
µ_lök
);

465 
∑ges
[0].
µ_ªf
 = 1;

466 
	`LIST_REMOVE
(&
∑ges
[0], 
µ_lök
);

467 
i
 = 
IOPHYSMEM
; i < 
EXTPHYSMEM
; i +
PGSIZE
) {

468 
∑ges
[
i
/
PGSIZE
].
µ_ªf
 = 1;

469 
	`LIST_REMOVE
(&
∑ges
[
i
/
PGSIZE
], 
µ_lök
);

471 
i
 = 
EXTPHYSMEM
; i < 
	`PADDR
(()
boŸ_‰ìmem
); i +
PGSIZE
) {

472 
∑ges
[
i
/
PGSIZE
].
µ_ªf
 = 1;

473 
	`LIST_REMOVE
(&
∑ges
[
i
/
PGSIZE
], 
µ_lök
);

475 
	}
}

483 
	$∑ge_öôµ
(
Page
 *
µ
)

485 
	`mem£t
(
µ
, 0, (*pp));

486 
	}
}

503 
	$∑ge_Æloc
(
Page
 **
µ_°‹e
)

506 if(
	`LIST_FIRST
(&
∑ge_‰ì_li°
Ë=
NULL
){

507  -
E_NO_MEM
;

510 *
µ_°‹e
 = 
	`LIST_FIRST
(&
∑ge_‰ì_li°
);

512 
	`LIST_REMOVE
(*
µ_°‹e
, 
µ_lök
);

515 
	}
}

522 
	$∑ge_‰ì
(
Page
 *
µ
)

525 if(
µ
->
µ_ªf
) ;

527 
	`∑ge_öôµ
(
µ
);

528 
	`LIST_INSERT_HEAD
(&
∑ge_‰ì_li°
, 
µ
, 
µ_lök
);

531 
	}
}

538 
	$∑ge_de¸ef
(
Page
* 
µ
)

540 i‡(--
µ
->
µ_ªf
 == 0)

541 
	`∑ge_‰ì
(
µ
);

542 
	}
}

557 
±e_t
 *

558 
	$pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
)

561 
pde_t
 *
±
 = 
pgdú
 + 
	`PDX
(
va
);

562 if(*
±
 & 
PTE_P
){

563  (
±e_t
 *)
	`KADDR
(
	`PTE_ADDR
(*
±
)Ë+ 
	`PTX
(
va
);

565 
Page
 *
pg
;

566 if(
¸óã
 =1 && 
	`∑ge_Æloc
(&
pg
) == 0){

567 
pg
->
µ_ªf
 = 1;

568 
	`mem£t
(
	`∑ge2kva
(
pg
), 0, 
PGSIZE
);

570 *
±
 = 
	`PADDR
(
	`∑ge2kva
(
pg
))|
PTE_U
|
PTE_W
|
PTE_P
;

571  (
±e_t
 *)
	`KADDR
(
	`PTE_ADDR
(*
±
)Ë+ 
	`PTX
(
va
);

573  
NULL
;

574 
	}
}

596 
	$∑ge_ö£π
(
pde_t
 *
pgdú
, 
Page
 *
µ
, *
va
, 
≥rm
)

599 
±e_t
 *
±e
;

600 
±e
 = 
	`pgdú_wÆk
(
pgdú
, 
va
, 1);

601 if(
±e
 =
NULL
){

602  -
E_NO_MEM
;

605 
µ
->
µ_ªf
 ++;

606 if((*
±e
 & 
PTE_P
)){

609 
	`∑ge_ªmove
(
pgdú
, 
va
);

611 *
±e
 = 
	`∑ge2∑
(
µ
Ë| 
PTE_P
 | 
≥rm
;

615 
	}
}

628 
	$boŸ_m≠_£gmít
(
pde_t
 *
pgdú
, 
uöçå_t
 
œ
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
)

631 
uöt32_t
 
i
;

632 
±e_t
 *
±e
;

633 
size
 = 
	`ROUNDUP
(size, 
PGSIZE
);

634 
i
=0;i<
size
; i +
PGSIZE
){

635 
±e
 = 
	`pgdú_wÆk
(
pgdú
,(*)(
œ
+
i
), 1);

636 if(
±e
 =
NULL
){

637 
	`as£π
(
±e
!=
NULL
);

639 *
±e
 = (
∑
+
i
)| 
≥rm
 | 
PTE_P
;

641 
	}
}

653 
Page
 *

654 
	$∑ge_lookup
(
pde_t
 *
pgdú
, *
va
, 
±e_t
 **
±e_°‹e
)

657 
±e_t
 *
±e
;

658 
±e
 = 
	`pgdú_wÆk
(
pgdú
, 
va
, 0);

659 if(
±e
 =
NULL
||(*±ê& 
PTE_P
) == 0){

660  
NULL
;

662 if(
±e_°‹e
 !
NULL
){

663 *
±e_°‹e
 = 
±e
;

665  
	`∑2∑ge
(*
±e
);

666 
	}
}

684 
	$∑ge_ªmove
(
pde_t
 *
pgdú
, *
va
)

687 
Page
 *
pg
;

688 
±e_t
 *
±e
;

689 
pg
 = 
	`∑ge_lookup
(
pgdú
, 
va
, &
±e
);

690 if(
pg
 ==
NULL
){

694 
	`∑ge_de¸ef
(
pg
);

696 if(
±e
 !
NULL
){

697 *
±e
 = 0;

699 
	`éb_övÆid©e
(
pgdú
, 
va
);

700 
	}
}

707 
	$éb_övÆid©e
(
pde_t
 *
pgdú
, *
va
)

710 i‡(!
cuªnv
 || cuªnv->
ív_pgdú
 =
pgdú
)

711 
	`övÕg
(
va
);

712 
	}
}

714 
uöçå_t
 
	gu£r_mem_check_addr
;

735 
	$u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

738 
uöçå_t
 
lva
 = (uöçå_tË
va
;

739 
uöçå_t
 
hva
 = (uöçå_tË
va
 + 
Àn
 - 1;

741 
≥rm
 =Öîm|
PTE_U
|
PTE_P
;

743 
±e_t
 *
±e
;

744 
uöçå_t
 
idx_va
;

745 
idx_va
=
lva
; idx_va<=
hva
; idx_va+=
PGSIZE
){

746 if(
idx_va
>=
ULIM
){

747 
u£r_mem_check_addr
 = 
idx_va
;

748  -
E_FAULT
;

751 
±e
 = 
	`pgdú_wÆk
(
ív
->
ív_pgdú
, (*)
idx_va
, 0);

753 if(
±e
==
NULL
||(*±ê& 
≥rm
)!=perm){

754 
u£r_mem_check_addr
 = 
idx_va
;

755  -
E_FAULT
;

757 
idx_va
 = 
	`ROUNDDOWN
(idx_va, 
PGSIZE
);

761 
	}
}

770 
	$u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

772 i‡(
	`u£r_mem_check
(
ív
, 
va
, 
Àn
, 
≥rm
 | 
PTE_U
) < 0) {

773 
	`˝rötf
("[%08x] user_mem_checkássertion failure for "

774 "v®%08x\n", 
cuªnv
->
ív_id
, 
u£r_mem_check_addr
);

775 
	`ív_de°roy
(
ív
);

777 
	}
}

781 
	$∑ge_check
()

783 
Page
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

784 
Page_li°
 
Ê
;

785 
±e_t
 *
±ï
, *
±ï1
;

786 *
va
;

787 
i
;

790 
µ0
 = 
µ1
 = 
µ2
 = 0;

791 
	`as£π
(
	`∑ge_Æloc
(&
µ0
) == 0);

792 
	`as£π
(
	`∑ge_Æloc
(&
µ1
) == 0);

793 
	`as£π
(
	`∑ge_Æloc
(&
µ2
) == 0);

795 
	`as£π
(
µ0
);

796 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

797 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

800 
Ê
 = 
∑ge_‰ì_li°
;

801 
	`LIST_INIT
(&
∑ge_‰ì_li°
);

804 
	`as£π
(
	`∑ge_Æloc
(&
µ
Ë=-
E_NO_MEM
);

807 
	`as£π
(
	`∑ge_lookup
(
boŸ_pgdú
, (*Ë0x0, &
±ï
Ë=
NULL
);

810 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ1
, 0x0, 0) < 0);

813 
	`∑ge_‰ì
(
µ0
);

814 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ1
, 0x0, 0) == 0);

815 
	`as£π
(
	`PTE_ADDR
(
boŸ_pgdú
[0]Ë=
	`∑ge2∑
(
µ0
));

816 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 0x0Ë=
	`∑ge2∑
(
µ1
));

817 
	`as£π
(
µ1
->
µ_ªf
 == 1);

818 
	`as£π
(
µ0
->
µ_ªf
 == 1);

821 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ2
, (*Ë
PGSIZE
, 0) == 0);

822 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ2
));

823 
	`as£π
(
µ2
->
µ_ªf
 == 1);

826 
	`as£π
(
	`∑ge_Æloc
(&
µ
Ë=-
E_NO_MEM
);

829 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ2
, (*Ë
PGSIZE
, 0) == 0);

830 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ2
));

831 
	`as£π
(
µ2
->
µ_ªf
 == 1);

835 
	`as£π
(
	`∑ge_Æloc
(&
µ
Ë=-
E_NO_MEM
);

838 
±ï
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pgdú
[
	`PDX
(
PGSIZE
)]));

839 
	`as£π
(
	`pgdú_wÆk
(
boŸ_pgdú
, (*)
PGSIZE
, 0Ë=
±ï
+
	`PTX
(PGSIZE));

842 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_U
) == 0);

843 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ2
));

844 
	`as£π
(
µ2
->
µ_ªf
 == 1);

845 
	`as£π
(*
	`pgdú_wÆk
(
boŸ_pgdú
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
);

848 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ0
, (*Ë
PTSIZE
, 0) < 0);

851 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ1
, (*Ë
PGSIZE
, 0) == 0);

854 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 0Ë=
	`∑ge2∑
(
µ1
));

855 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

857 
	`as£π
(
µ1
->
µ_ªf
 == 2);

858 
	`as£π
(
µ2
->
µ_ªf
 == 0);

861 
	`as£π
(
	`∑ge_Æloc
(&
µ
Ë=0 &&Ö∞=
µ2
);

864 
	`∑ge_ªmove
(
boŸ_pgdú
, 0x0);

865 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 0x0) == ~0);

866 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

867 
	`as£π
(
µ1
->
µ_ªf
 == 1);

868 
	`as£π
(
µ2
->
µ_ªf
 == 0);

871 
	`∑ge_ªmove
(
boŸ_pgdú
, (*Ë
PGSIZE
);

872 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 0x0) == ~0);

873 
	`as£π
(
	`check_va2∑
(
boŸ_pgdú
, 
PGSIZE
) == ~0);

874 
	`as£π
(
µ1
->
µ_ªf
 == 0);

875 
	`as£π
(
µ2
->
µ_ªf
 == 0);

878 
	`as£π
(
	`∑ge_Æloc
(&
µ
Ë=0 &&Ö∞=
µ1
);

881 
	`as£π
(
	`∑ge_Æloc
(&
µ
Ë=-
E_NO_MEM
);

886 
	`mem£t
(
	`∑ge2kva
(
µ1
), 1, 
PGSIZE
);

887 
	`mem£t
(
	`∑ge2kva
(
µ2
), 2, 
PGSIZE
);

888 
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ1
, 0x0, 0);

889 
	`as£π
(
µ1
->
µ_ªf
 == 1);

890 
	`as£π
(*(*)0 == 0x01010101);

891 
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ2
, 0x0, 0);

892 
	`as£π
(*(*)0 == 0x02020202);

893 
	`as£π
(
µ2
->
µ_ªf
 == 1);

894 
	`as£π
(
µ1
->
µ_ªf
 == 0);

895 
	`∑ge_ªmove
(
boŸ_pgdú
, 0x0);

896 
	`as£π
(
µ2
->
µ_ªf
 == 0);

900 
	`as£π
(
	`PTE_ADDR
(
boŸ_pgdú
[0]Ë=
	`∑ge2∑
(
µ0
));

901 
boŸ_pgdú
[0] = 0;

902 
	`as£π
(
µ0
->
µ_ªf
 == 1);

903 
µ0
->
µ_ªf
 = 0;

906 
	`∑ge_‰ì
(
µ0
);

907 
va
 = (*)(
PGSIZE
 * 
NPDENTRIES
 + PGSIZE);

908 
±ï
 = 
	`pgdú_wÆk
(
boŸ_pgdú
, 
va
, 1);

909 
±ï1
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pgdú
[
	`PDX
(
va
)]));

910 
	`as£π
(
±ï
 =
±ï1
 + 
	`PTX
(
va
));

911 
boŸ_pgdú
[
	`PDX
(
va
)] = 0;

912 
µ0
->
µ_ªf
 = 0;

915 
	`mem£t
(
	`∑ge2kva
(
µ0
), 0xFF, 
PGSIZE
);

916 
	`∑ge_‰ì
(
µ0
);

917 
	`pgdú_wÆk
(
boŸ_pgdú
, 0x0, 1);

918 
±ï
 = 
	`∑ge2kva
(
µ0
);

919 
i
=0; i<
NPTENTRIES
; i++)

920 
	`as£π
((
±ï
[
i
] & 
PTE_P
) == 0);

921 
boŸ_pgdú
[0] = 0;

922 
µ0
->
µ_ªf
 = 0;

925 
∑ge_‰ì_li°
 = 
Ê
;

928 
	`∑ge_‰ì
(
µ0
);

929 
	`∑ge_‰ì
(
µ1
);

930 
	`∑ge_‰ì
(
µ2
);

932 
	`˝rötf
("page_check() succeeded!\n");

933 
	}
}

	@kern/pmap.h

3 #i‚de‡
JOS_KERN_PMAP_H


4 
	#JOS_KERN_PMAP_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/memœyout.h
>

10 
	~<öc/as£π.h
>

11 
	gEnv
;

19 
	#PADDR
(
kva
) \

21 
phyßddr_t
 
__m_kva
 = (phyßddr_tË(
kva
); \

22 i‡(
__m_kva
 < 
KERNBASE
) \

23 
	`∑nic
("PADDR cÆÀd wôh invÆid kv®%08lx", 
__m_kva
);\

24 
__m_kva
 - 
KERNBASE
; \

25 })

	)

29 
	#KADDR
(
∑
) \

31 
phyßddr_t
 
__m_∑
 = (
∑
); \

32 
uöt32_t
 
__m_µn
 = 
	`PPN
(
__m_∑
); \

33 i‡(
__m_µn
 >
≈age
) \

34 
	`∑nic
("KADDR cÆÀd wôh invÆidÖ®%08lx", 
__m_∑
);\

35 (*Ë(
__m_∑
 + 
KERNBASE
); \

36 })

	)

40 
boŸ°ackt›
[], 
boŸ°ack
[];

42 
Page
 *
∑ges
;

43 
size_t
 
≈age
;

45 
phyßddr_t
 
boŸ_¸3
;

46 
pde_t
 *
boŸ_pgdú
;

48 
Segdesc
 
gdt
[];

49 
P£udodesc
 
gdt_pd
;

51 
i386_vm_öô
();

52 
i386_dëe˘_mem‹y
();

54 
∑ge_öô
();

55 
∑ge_Æloc
(
Page
 **
µ_°‹e
);

56 
∑ge_‰ì
(
Page
 *
µ
);

57 
∑ge_ö£π
(
pde_t
 *
pgdú
, 
Page
 *
µ
, *
va
, 
≥rm
);

58 
∑ge_ªmove
(
pde_t
 *
pgdú
, *
va
);

59 
Page
 *
∑ge_lookup
(
pde_t
 *
pgdú
, *
va
, 
±e_t
 **
±e_°‹e
);

60 
∑ge_de¸ef
(
Page
 *
µ
);

62 
éb_övÆid©e
(
pde_t
 *
pgdú
, *
va
);

64 
u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
);

65 
u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
);

67 
ölöe
 
µn_t


68 
	$∑ge2µn
(
Page
 *
µ
)

70  
µ
 - 
∑ges
;

71 
	}
}

73 
ölöe
 
phyßddr_t


74 
	$∑ge2∑
(
Page
 *
µ
)

76  
	`∑ge2µn
(
µ
Ë<< 
PGSHIFT
;

77 
	}
}

79 
ölöe
 
Page
*

80 
	$∑2∑ge
(
phyßddr_t
 
∑
)

82 i‡(
	`PPN
(
∑
Ë>
≈age
)

83 
	`∑nic
("pa2page called with invalidÖa");

84  &
∑ges
[
	`PPN
(
∑
)];

85 
	}
}

87 
ölöe
 *

88 
	$∑ge2kva
(
Page
 *
µ
)

90  
	`KADDR
(
	`∑ge2∑
(
µ
));

91 
	}
}

93 
±e_t
 *
pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
);

	@kern/printf.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/°dio.h
>

6 
	~<öc/°d¨g.h
>

10 
	$putch
(
ch
, *
˙t
)

12 
	`˝utch¨
(
ch
);

13 *
˙t
++;

14 
	}
}

17 
	$v˝rötf
(c⁄° *
fmt
, 
va_li°
 
≠
)

19 
˙t
 = 0;

21 
	`v¥ötfmt
((*)
putch
, &
˙t
, 
fmt
, 
≠
);

22  
˙t
;

23 
	}
}

26 
	$˝rötf
(c⁄° *
fmt
, ...)

28 
va_li°
 
≠
;

29 
˙t
;

31 
	`va_°¨t
(
≠
, 
fmt
);

32 
˙t
 = 
	`v˝rötf
(
fmt
, 
≠
);

33 
	`va_íd
(
≠
);

35  
˙t
;

36 
	}
}

	@kern/sched.c

1 
	~<öc/as£π.h
>

3 
	~<kîn/ív.h
>

4 
	~<kîn/pm≠.h
>

5 
	~<kîn/m⁄ô‹.h
>

10 
	$sched_yõld
()

22 
Env
 *
abÀ
;

23 
Env
 *
run
 = 
cuªnv
;

24 if(
cuªnv
 =
NULL
){

25 
run
 = 
ívs
;

27 
round
 = 0;

28 
Àvñ
 = 21;

39 
abÀ
 = 
run
+1; 
round
<
NENV
;áble++,round++){

40 if(
abÀ
 >
ívs
+
NENV
){

41 
abÀ
 = 
ívs
+1;

43 if(
abÀ
->
ív_°©us
 =
ENV_RUNNABLE
){

44 if(
Àvñ
 > 
abÀ
->
ív_¥i‹ôy
){

45 
run
 = 
abÀ
;

46 
Àvñ
 = 
abÀ
->
ív_¥i‹ôy
;

50 if(
Àvñ
<21){

51 
	`ív_run
(
run
);

54 i‡(
ívs
[0].
ív_°©us
 =
ENV_RUNNABLE
)

55 
	`ív_run
(&
ívs
[0]);

57 
	`˝rötf
("DestroyedállÉnvironments -Çothing moreÅo do!\n");

59 
	`m⁄ô‹
(
NULL
);

61 
	}
}

	@kern/sched.h

3 #i‚de‡
JOS_KERN_SCHED_H


4 
	#JOS_KERN_SCHED_H


	)

5 #i‚de‡
JOS_KERNEL


10 
	$sched_yõld
(Ë
	`__©åibuã__
((
n‹ëu∫
));

	@kern/syscall.c

3 
	~<öc/x86.h
>

4 
	~<öc/îr‹.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/as£π.h
>

8 
	~<kîn/ív.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/å≠.h
>

11 
	~<kîn/sysˇŒ.h
>

12 
	~<kîn/c⁄sﬁe.h
>

13 
	~<kîn/sched.h
>

19 
	$sys_˝uts
(c⁄° *
s
, 
size_t
 
Àn
)

25 
	`u£r_mem_as£π
(
cuªnv
, 
s
, 
Àn
, 
PTE_U
);

27 
	`˝rötf
("%.*s", 
Àn
, 
s
);

28 
	}
}

33 
	$sys_cgëc
()

35 
c
;

39 (
c
 = 
	`c⁄s_gëc
()) == 0)

42  
c
;

43 
	}
}

46 
ívid_t


47 
	$sys_gëívid
()

49  
cuªnv
->
ív_id
;

50 
	}
}

58 
	$sys_ív_de°roy
(
ívid_t
 
ívid
)

60 
r
;

61 
Env
 *
e
;

63 i‡((
r
 = 
	`ívid2ív
(
ívid
, &
e
, 1)) < 0)

64  
r
;

65 
	`ív_de°roy
(
e
);

67 
	}
}

71 
	$sys_yõld
()

73 
	`sched_yõld
();

74 
	}
}

79 
ívid_t


80 
	$sys_exof‹k
()

89 
Env
 *
√wív
;

90 
r
;

91 if((
r
 = 
	`ív_Æloc
(&
√wív
, 
	`sys_gëívid
())) < 0) Ñ;

94 
√wív
->
ív_°©us
 = 
ENV_NOT_RUNNABLE
;

96 
√wív
->
ív_tf
 = 
cuªnv
->env_tf;

100 
√wív
->
ív_tf
.
tf_ªgs
.
ªg_óx
 = 0;

101  
√wív
->
ív_id
;

103 
	}
}

107 
	$sys_ív_£t_¥i‹ôy
(
ívid_t
 
ívid
, 
¥i‹ôy
)

113 
Env
 *
ív_¥i
;

114 
r
;

116 if((
r
 = 
	`ívid2ív
(
ívid
, &
ív_¥i
, 1)) < 0) Ñ;

118 
ív_¥i
->
ív_¥i‹ôy
 = 
¥i‹ôy
;

121 
	}
}

131 
	$sys_ív_£t_°©us
(
ívid_t
 
ívid
, 
°©us
)

140 i‡(
°©us
 !
ENV_RUNNABLE
 && sètu†!
ENV_NOT_RUNNABLE
){

141  -
E_INVAL
;

143 
Env
 *
ív_°a
;

144 
r
;

146 if((
r
 = 
	`ívid2ív
(
ívid
, &
ív_°a
, 1)) < 0) Ñ;

148 
ív_°a
->
ív_°©us
 = 
°©us
;

152 
	}
}

162 
	$sys_ív_£t_å≠‰ame
(
ívid_t
 
ívid
, 
Tøp‰ame
 *
tf
)

167 
Env
 *
ív_tf
;

168 
r
;

169 if((
r
 = 
	`ívid2ív
(
ívid
, &
ív_tf
, 1)Ë< 0Ë -
E_BAD_ENV
;

171 
ív_tf
->ív_t‡*
tf
;

174 
	}
}

185 
	$sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ívid
, *
func
)

188 
Env
 *
ív
;

189 if(
	`ívid2ív
(
ívid
, &
ív
, 1Ë< 0Ë -
E_BAD_ENV
;

191 
ív
->
ív_pgÁu…_upˇŒ
 = 
func
;

195 
	}
}

214 
	$sys_∑ge_Æloc
(
ívid_t
 
ívid
, *
va
, 
≥rm
)

224 if(
va
 >(*)
UTOP
Ë -
E_INVAL
;

225 if(
	`ROUNDUP
(
va
, 
PGSIZE
Ë!vaË -
E_INVAL
;

226 if((
≥rm
 & 
PTE_U
)==0||’îm & 
PTE_P
)==0Ë -
E_INVAL
;

227 if((
≥rm
 & ~
PTE_USER
Ë> 0Ë -
E_INVAL
;

229 
Env
 *
e
;

230 if(
	`ívid2ív
(
ívid
, &
e
, 1Ë< 0Ë -
E_BAD_ENV
;

232 
Page
 *
pg
;

233 if(
	`∑ge_Æloc
(&
pg
Ë< 0Ë -
E_NO_MEM
;

234 if(
	`∑ge_ö£π
(
e
->
ív_pgdú
, 
pg
, 
va
, 
≥rm
) < 0){

235 
	`∑ge_‰ì
(
pg
);

236  -
E_NO_MEM
;

238 
	`mem£t
(
	`∑ge2kva
(
pg
), 0, 
PGSIZE
);

241 
	}
}

261 
	$sys_∑ge_m≠
(
ívid_t
 
§˚nvid
, *
§cva
,

262 
ívid_t
 
d°ívid
, *
d°va
, 
≥rm
)

272 if(
§cva
 >(*)
UTOP
Ë -
E_INVAL
;

273 if(
	`ROUNDUP
(
§cva
, 
PGSIZE
Ë!§cvaË -
E_INVAL
;

274 if(
d°va
 >(*)
UTOP
Ë -
E_INVAL
;

275 if(
	`ROUNDUP
(
d°va
, 
PGSIZE
Ë!d°vaË -
E_INVAL
;

276 if((
≥rm
 & 
PTE_U
)==0&&’îm & 
PTE_P
)==0Ë -
E_INVAL
;

277 if((
≥rm
 & ~
PTE_USER
Ë> 0Ë -
E_INVAL
;

279 
Env
 *
§˚nv
;

280 if(
	`ívid2ív
(
§˚nvid
, &
§˚nv
, 1Ë< 0Ë -
E_BAD_ENV
;

281 
Env
 *
d°ív
;

282 if(
	`ívid2ív
(
d°ívid
, &
d°ív
, 1Ë< 0Ë -
E_BAD_ENV
;

284 
±e_t
 *
±e
;

285 
Page
 *
pg
;

286 
pg
 = 
	`∑ge_lookup
(
§˚nv
->
ív_pgdú
, 
§cva
, &
±e
);

287 if(
pg
 =
NULL
||((
≥rm
 & 
PTE_W
)&&((*
±e
 & PTE_W)==0))Ë -
E_INVAL
;

289 if(
	`∑ge_ö£π
(
d°ív
->
ív_pgdú
, 
pg
, 
d°va
, 
≥rm
) < 0)

290  -
E_NO_MEM
;

294 
	}
}

304 
	$sys_∑ge_unm≠
(
ívid_t
 
ívid
, *
va
)

308 if(
va
 >(*)
UTOP
Ë -
E_INVAL
;

309 if(
	`ROUNDUP
(
va
, 
PGSIZE
Ë!vaË -
E_INVAL
;

311 
Env
 *
ív
;

312 if(
	`ívid2ív
(
ívid
, &
ív
, 1Ë< 0Ë -
E_BAD_ENV
;

314 
	`∑ge_ªmove
(
ív
->
ív_pgdú
, 
va
);

318 
	}
}

355 
	$sys_ùc_åy_£nd
(
ívid_t
 
ívid
, 
uöt32_t
 
vÆue
, *
§cva
, 
≥rm
)

358 
Env
 *
d°ív
;

359 
r
;

360 if((
r
 = 
	`ívid2ív
(
ívid
, &
d°ív
, 0)Ë< 0Ë -
E_BAD_ENV
;

361 if(!
d°ív
->
ív_ùc_ªcvög
 || d°ív->
ív_ùc_‰om
 !0Ë -
E_IPC_NOT_RECV
;

362 if((
§cva
 < (*)
UTOP
Ë&& 
	`ROUNDDOWN
(§cva, 
PGSIZE
) != srcva){

364  -
E_INVAL
;

368 if(
§cva
 < (*)
UTOP
){

369 if((
≥rm
 & 
PTE_U
Ë=0 && (≥rm & 
PTE_P
Ë=0Ë -
E_INVAL
;

370 if((
≥rm
 & ~
PTE_USER
Ë> 0Ë -
E_INVAL
;

373 
±e_t
 *
±e
;

374 
Page
 *
pg
;

376 if(
§cva
 < (*)
UTOP
){

377 if((
pg
 = 
	`∑ge_lookup
(
cuªnv
->
ív_pgdú
, 
§cva
, &
±e
)Ë=
NULL
Ë -
E_INVAL
;

378 if((*
±e
 & 
PTE_W
Ë=0 && (
≥rm
 & PTE_WË> 0Ë -
E_INVAL
;

381 if(
§cva
 >(*)
UTOP
Ë
d°ív
->
ív_ùc_≥rm
 = 0;

382 if(
§cva
 < (*)
UTOP
 && 
d°ív
->
ív_ùc_d°va
 <(*)UTOP){

383 if(
	`∑ge_ö£π
(
d°ív
->
ív_pgdú
, 
pg
, d°ív->
ív_ùc_d°va
, 
≥rm
Ë< 0Ë -
E_NO_MEM
;

384 
d°ív
->
ív_ùc_≥rm
 = 
≥rm
;

386 
d°ív
->
ív_ùc_ªcvög
 = 0;

387 
d°ív
->
ív_ùc_‰om
 = 
cuªnv
->
ív_id
;

388 
d°ív
->
ív_ùc_vÆue
 = 
vÆue
;

389 
d°ív
->
ív_°©us
 = 
ENV_RUNNABLE
;

393 
	}
}

407 
	$sys_ùc_ªcv
(*
d°va
)

410 if((
d°va
 < (*)
UTOP
Ë&& 
	`ROUNDDOWN
(d°va, 
PGSIZE
) != dstva){

411 
	`∑nic
("thisÖage isÇotÖage-aligned\n");

412  -
E_INVAL
;

415 
cuªnv
->
ív_ùc_d°va
 = 
d°va
;

416 
cuªnv
->
ív_ùc_ªcvög
 = 1;

417 
cuªnv
->
ív_ùc_‰om
 = 0;

418 
cuªnv
->
ív_°©us
 = 
ENV_NOT_RUNNABLE
;

419 
cuªnv
->
ív_tf
.
tf_ªgs
.
ªg_óx
 = 0;

421 
	`sched_yõld
();

424 
	}
}

428 
öt32_t


429 
	$sysˇŒ
(
uöt32_t
 
sysˇŒno
, uöt32_à
a1
, uöt32_à
a2
, uöt32_à
a3
, uöt32_à
a4
, uöt32_à
a5
)

434 
öt32_t
 
r
 = 0;

435 
sysˇŒno
){

437 
SYS_˝uts
:

438 
	`sys_˝uts
((c⁄° *)
a1
, (
size_t
)
a2
); ;

440 
SYS_cgëc
:

441 
r
 = 
	`sys_cgëc
(); ;

443 
SYS_gëívid
:

444 
r
 = 
	`sys_gëívid
(); ;

446 
SYS_ív_de°roy
:

447 
r
 = 
	`sys_ív_de°roy
((
ívid_t
)
a1
); ;

449 
SYS_yõld
: 
	`sys_yõld
();  0;

451 
SYS_exof‹k
:

452 
r
 = 
	`sys_exof‹k
(); ;

454 
SYS_ív_£t_°©us
:

455 
r
 = 
	`sys_ív_£t_°©us
((
ívid_t
)
a1
, ()
a2
);

458 
SYS_ív_£t_å≠‰ame
:

459 
r
 = 
	`sys_ív_£t_å≠‰ame
((
ívid_t
)
a1
, (
Tøp‰ame
 *)
a2
);

462 
SYS_ív_£t_pgÁu…_upˇŒ
:

463 
r
 = 
	`sys_ív_£t_pgÁu…_upˇŒ
((
ívid_t
)
a1
, (*)
a2
);

466 
SYS_∑ge_Æloc
:

467 
r
 = 
	`sys_∑ge_Æloc
((
ívid_t
)
a1
, (*)
a2
, ()
a3
);

470 
SYS_∑ge_m≠
:

471 
r
 = 
	`sys_∑ge_m≠
((
ívid_t
)
a1
, (*)
a2
, (ívid_t)
a3
, (*)
a4
, ()
a5
);

474 
SYS_∑ge_unm≠
:

475 
r
 = 
	`sys_∑ge_unm≠
((
ívid_t
)
a1
, (*)
a2
);

478 
SYS_ùc_åy_£nd
:

479 
r
 = 
	`sys_ùc_åy_£nd
((
ívid_t
)
a1
, (
uöt32_t
)
a2
, (*)
a3
, ()
a4
);

482 
SYS_ùc_ªcv
:

483 
r
 = 
	`sys_ùc_ªcv
((*)
a1
);

486 
SYS_ív_£t_¥i‹ôy
:

487 
r
 = 
	`sys_ív_£t_¥i‹ôy
((
ívid_t
)
a1
, ()
a2
);

489 : 
r
 = -
E_INVAL
;

491  
r
;

493 
	}
}

	@kern/syscall.h

1 #i‚de‡
JOS_KERN_SYSCALL_H


2 
	#JOS_KERN_SYSCALL_H


	)

3 #i‚de‡
JOS_KERNEL


7 
	~<öc/sysˇŒ.h
>

9 
öt32_t
 
sysˇŒ
(
uöt32_t
 
num
, uöt32_à
a1
, uöt32_à
a2
, uöt32_à
a3
, uöt32_à
a4
, uöt32_à
a5
);

	@kern/trap.c

1 
	~<öc/mmu.h
>

2 
	~<öc/x86.h
>

3 
	~<öc/as£π.h
>

5 
	~<kîn/pm≠.h
>

6 
	~<kîn/å≠.h
>

7 
	~<kîn/c⁄sﬁe.h
>

8 
	~<kîn/m⁄ô‹.h
>

9 
	~<kîn/ív.h
>

10 
	~<kîn/sysˇŒ.h
>

11 
	~<kîn/sched.h
>

12 
	~<kîn/k˛ock.h
>

13 
	~<kîn/picúq.h
>

15 
Task°©e
 
	gts
;

20 
G©edesc
 
	gidt
[256] = { { 0 } };

21 
P£udodesc
 
	gidt_pd
 = {

22 (
idt
Ë- 1, (
uöt32_t
) idt

26 c⁄° *
	$å≠«me
(
å≠no
)

28 c⁄° * c⁄° 
ex˙ames
[] = {

51 i‡(
å≠no
 < (
ex˙ames
)/(excnames[0]))

52  
ex˙ames
[
å≠no
];

53 i‡(
å≠no
 =
T_SYSCALL
)

55 i‡(
å≠no
 >
IRQ_OFFSET
 &&Årapno < IRQ_OFFSET + 16)

58 
	}
}

62 
	$idt_öô
()

64 
Segdesc
 
gdt
[];

67 
	`routöe_divide
 ();

68 
	`routöe_debug
 ();

69 
	`routöe_nmi
 ();

70 
	`routöe_brk±
 ();

71 
	`routöe_oÊow
 ();

72 
	`routöe_bound
 ();

73 
	`routöe_ûl›
 ();

74 
	`routöe_devi˚
 ();

75 
	`routöe_dblÊt
 ();

76 
	`routöe_tss
 ();

77 
	`routöe_£g≈
 ();

78 
	`routöe_°ack
 ();

79 
	`routöe_gpÊt
 ();

80 
	`routöe_pgÊt
 ();

81 
	`routöe_Âîr
 ();

82 
	`routöe_Æign
 ();

83 
	`routöe_mchk
 ();

84 
	`routöe_simdîr
 ();

85 
	`sy°em_ˇŒ
();

86 
	`timî
();

88 
	`SETGATE
 (
idt
[
T_DIVIDE
], 0, 
GD_KT
, 
routöe_divide
, 0);

89 
	`SETGATE
 (
idt
[
T_DEBUG
], 0, 
GD_KT
, 
routöe_debug
, 0);

90 
	`SETGATE
 (
idt
[
T_NMI
], 0, 
GD_KT
, 
routöe_nmi
, 0);

92 
	`SETGATE
 (
idt
[
T_BRKPT
], 0, 
GD_KT
, 
routöe_brk±
, 3);

93 
	`SETGATE
 (
idt
[
T_OFLOW
], 0, 
GD_KT
, 
routöe_oÊow
, 0);

94 
	`SETGATE
 (
idt
[
T_BOUND
], 0, 
GD_KT
, 
routöe_bound
, 0);

95 
	`SETGATE
 (
idt
[
T_ILLOP
], 0, 
GD_KT
, 
routöe_ûl›
, 0);

96 
	`SETGATE
 (
idt
[
T_DEVICE
], 0, 
GD_KT
, 
routöe_devi˚
, 0);

97 
	`SETGATE
 (
idt
[
T_DBLFLT
], 0, 
GD_KT
, 
routöe_dblÊt
, 0);

98 
	`SETGATE
 (
idt
[
T_TSS
], 0, 
GD_KT
, 
routöe_tss
, 0);

99 
	`SETGATE
 (
idt
[
T_SEGNP
], 0, 
GD_KT
, 
routöe_£g≈
, 0);

100 
	`SETGATE
 (
idt
[
T_STACK
], 0, 
GD_KT
, 
routöe_°ack
, 0);

101 
	`SETGATE
 (
idt
[
T_GPFLT
], 0, 
GD_KT
, 
routöe_gpÊt
, 0);

102 
	`SETGATE
 (
idt
[
T_PGFLT
], 0, 
GD_KT
, 
routöe_pgÊt
, 0);

103 
	`SETGATE
 (
idt
[
T_FPERR
], 0, 
GD_KT
, 
routöe_Âîr
, 0);

104 
	`SETGATE
 (
idt
[
T_ALIGN
], 0, 
GD_KT
, 
routöe_Æign
, 0);

105 
	`SETGATE
 (
idt
[
T_MCHK
], 0, 
GD_KT
, 
routöe_mchk
, 0);

106 
	`SETGATE
 (
idt
[
T_SIMDERR
], 0, 
GD_KT
, 
routöe_simdîr
, 0);

107 
	`SETGATE
 (
idt
[
T_SYSCALL
], 0, 
GD_KT
, 
sy°em_ˇŒ
, 3);

108 
	`SETGATE
 (
idt
[
IRQ_OFFSET
 + 
IRQ_TIMER
], 0, 
GD_KT
, 
timî
, 0);

112 
ts
.
ts_e•0
 = 
KSTACKTOP
;

113 
ts
.
ts_ss0
 = 
GD_KD
;

116 
gdt
[
GD_TSS
 >> 3] = 
	`SEG16
(
STS_T32A
, (
uöt32_t
Ë(&
ts
),

117 (
Task°©e
), 0);

118 
gdt
[
GD_TSS
 >> 3].
sd_s
 = 0;

121 
	`…r
(
GD_TSS
);

124 
asm
 volatile("lidt idt_pd");

125 
	}
}

128 
	$¥öt_å≠‰ame
(
Tøp‰ame
 *
tf
)

130 
	`˝rötf
("TRAP fømê© %p\n", 
tf
);

131 
	`¥öt_ªgs
(&
tf
->
tf_ªgs
);

132 
	`˝rötf
("É† 0x----%04x\n", 
tf
->
tf_es
);

133 
	`˝rötf
(" d† 0x----%04x\n", 
tf
->
tf_ds
);

134 
	`˝rötf
("Åø∞0x%08x %s\n", 
tf
->
tf_å≠no
, 
	`å≠«me
(tf->tf_trapno));

135 
	`˝rötf
("Éº 0x%08x\n", 
tf
->
tf_îr
);

136 
	`˝rötf
("Éù 0x%08x\n", 
tf
->
tf_eù
);

137 
	`˝rötf
(" c† 0x----%04x\n", 
tf
->
tf_cs
);

138 
	`˝rötf
(" fœg 0x%08x\n", 
tf
->
tf_eÊags
);

139 
	`˝rötf
("É• 0x%08x\n", 
tf
->
tf_e•
);

140 
	`˝rötf
(" s† 0x----%04x\n", 
tf
->
tf_ss
);

141 
	}
}

144 
	$¥öt_ªgs
(
PushRegs
 *
ªgs
)

146 
	`˝rötf
("Édò 0x%08x\n", 
ªgs
->
ªg_edi
);

147 
	`˝rötf
("Ésò 0x%08x\n", 
ªgs
->
ªg_esi
);

148 
	`˝rötf
("Éb∞ 0x%08x\n", 
ªgs
->
ªg_ebp
);

149 
	`˝rötf
(" oe• 0x%08x\n", 
ªgs
->
ªg_€•
);

150 
	`˝rötf
("Ébx 0x%08x\n", 
ªgs
->
ªg_ebx
);

151 
	`˝rötf
("Édx 0x%08x\n", 
ªgs
->
ªg_edx
);

152 
	`˝rötf
("Écx 0x%08x\n", 
ªgs
->
ªg_ecx
);

153 
	`˝rötf
("Éax 0x%08x\n", 
ªgs
->
ªg_óx
);

154 
	}
}

157 
	$å≠_di•©ch
(
Tøp‰ame
 *
tf
)

162 if(
tf
->
tf_å≠no
 =
T_PGFLT
){

164 
	`∑ge_Áu…_h™dÀr
(
tf
);

168 if(
tf
->
tf_å≠no
 =
T_BRKPT
){

169 
	`m⁄ô‹
(
tf
);

173 if(
tf
->
tf_å≠no
 =
IRQ_OFFSET
 + 
IRQ_TIMER
){

174 
	`sched_yõld
();

178 if(
tf
->
tf_å≠no
 =
T_SYSCALL
){

179 
r
 = 
	`sysˇŒ
(

180 
tf
->
tf_ªgs
.
ªg_óx
,

181 
tf
->
tf_ªgs
.
ªg_edx
,

182 
tf
->
tf_ªgs
.
ªg_ecx
,

183 
tf
->
tf_ªgs
.
ªg_ebx
,

184 
tf
->
tf_ªgs
.
ªg_edi
,

185 
tf
->
tf_ªgs
.
ªg_esi
);

191 
tf
->
tf_ªgs
.
ªg_óx
 = 
r
;

201 
	`¥öt_å≠‰ame
(
tf
);

202 i‡(
tf
->
tf_cs
 =
GD_KT
)

203 
	`∑nic
("unhandledÅrap in kernel");

205 
	`ív_de°roy
(
cuªnv
);

208 
	}
}

211 
	$å≠
(
Tøp‰ame
 *
tf
)

213 i‡((
tf
->
tf_cs
 & 3) == 3) {

218 
	`as£π
(
cuªnv
);

219 
cuªnv
->
ív_tf
 = *
tf
;

221 
tf
 = &
cuªnv
->
ív_tf
;

225 
	`å≠_di•©ch
(
tf
);

230 i‡(
cuªnv
 && cuªnv->
ív_°©us
 =
ENV_RUNNABLE
)

231 
	`ív_run
(
cuªnv
);

233 
	`sched_yõld
();

234 
	}
}

238 
	$∑ge_Áu…_h™dÀr
(
Tøp‰ame
 *
tf
)

240 
uöt32_t
 
Áu…_va
;

243 
Áu…_va
 = 
	`r¸2
();

248 if((
tf
->
tf_cs
 & 3) == 0){

249 
	`∑nic
("kernel modeÖage_faults\n");

282 if(
cuªnv
->
ív_pgÁu…_upˇŒ
 !
NULL
){

283 
UTøp‰ame
 *
utf
;

285 if(
UXSTACKTOP
 - 
PGSIZE
 <
tf
->
tf_e•
 &&Åf->tf_esp < UXSTACKTOP){

286 
utf
 = (
UTøp‰ame
 *)(
tf
->
tf_e•
 - (UTrapframe) - 4);

289 
utf
 = (
UTøp‰ame
 *)(
UXSTACKTOP
 - (UTrapframe));

292 
	`u£r_mem_as£π
(
cuªnv
, (*)
utf
, (
UTøp‰ame
), 
PTE_U
|
PTE_W
|
PTE_P
);

294 
utf
->
utf_eÊags
 = 
tf
->
tf_eÊags
;

295 
utf
->
utf_eù
 = 
tf
->
tf_eù
;

296 
utf
->
utf_îr
 = 
tf
->
tf_îr
;

297 
utf
->
utf_e•
 = 
tf
->
tf_e•
;

298 
utf
->
utf_Áu…_va
 = 
Áu…_va
;

299 
utf
->
utf_ªgs
 = 
tf
->
tf_ªgs
;

303 
cuªnv
->
ív_tf
.
tf_eù
 = (
uöt32_t
Ëcuªnv->
ív_pgÁu…_upˇŒ
;

304 
cuªnv
->
ív_tf
.
tf_e•
 = (
uöt32_t
Ë
utf
;

306 
	`ív_run
(
cuªnv
);

311 
	`˝rötf
("[%08x] user fault va %08x ip %08x\n",

312 
cuªnv
->
ív_id
, 
Áu…_va
, 
tf
->
tf_eù
);

313 
	`¥öt_å≠‰ame
(
tf
);

314 
	`ív_de°roy
(
cuªnv
);

315 
	}
}

	@kern/trap.h

3 #i‚de‡
JOS_KERN_TRAP_H


4 
	#JOS_KERN_TRAP_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/å≠.h
>

10 
	~<öc/mmu.h
>

13 
G©edesc
 
idt
[];

15 
idt_öô
();

16 
¥öt_ªgs
(
PushRegs
 *
ªgs
);

17 
¥öt_å≠‰ame
(
Tøp‰ame
 *
tf
);

18 
∑ge_Áu…_h™dÀr
(
Tøp‰ame
 *);

19 
backåa˚
(
Tøp‰ame
 *);

	@kern/trapentry.S

3 
	~<öc/mmu.h
>

4 
	~<öc/memœyout.h
>

5 
	~<öc/å≠.h
>

7 
	~<kîn/picúq.h
>

10 ###################################################################
#ex˚±i⁄s/
öãºu±s


16 
	#TRAPHANDLER
(
«me
, 
num
) \

17 .
globl
 
«me
; \

18 .
ty≥
 
«me
, @
fun˘i⁄
; \

19 .
Æign
 2; \

20 
«me
: \

21 
pushl
 
	`$
(
num
); \

22 
jmp
 
_Æ…øps


	)

28 
	#TRAPHANDLER_NOEC
(
«me
, 
num
) \

29 .
globl
 
«me
; \

30 .
ty≥
 
«me
, @
fun˘i⁄
; \

31 .
Æign
 2; \

32 
«me
: \

33 
pushl
 
$0
; \

34 
pushl
 
	`$
(
num
); \

35 
jmp
 
_Æ…øps


	)

37 .
ãxt


42 
	$TRAPHANDLER_NOEC
(
routöe_divide
, 
T_DIVIDE
)

43 
	$TRAPHANDLER_NOEC
(
routöe_debug
, 
T_DEBUG
)

44 
	$TRAPHANDLER_NOEC
(
routöe_nmi
, 
T_NMI
)

45 
	$TRAPHANDLER_NOEC
(
routöe_brk±
, 
T_BRKPT
)

46 
	$TRAPHANDLER_NOEC
(
routöe_oÊow
, 
T_OFLOW
)

47 
	$TRAPHANDLER_NOEC
(
routöe_bound
, 
T_BOUND
)

48 
	$TRAPHANDLER_NOEC
(
routöe_ûl›
, 
T_ILLOP
)

49 
	$TRAPHANDLER_NOEC
(
routöe_devi˚
, 
T_DEVICE
)

50 
	$TRAPHANDLER
(
routöe_dblÊt
, 
T_DBLFLT
)

51 
	$TRAPHANDLER
(
routöe_tss
, 
T_TSS
)

52 
	$TRAPHANDLER
(
routöe_£g≈
, 
T_SEGNP
)

53 
	$TRAPHANDLER
(
routöe_°ack
, 
T_STACK
)

54 
	$TRAPHANDLER
(
routöe_gpÊt
, 
T_GPFLT
)

55 
	$TRAPHANDLER
(
routöe_pgÊt
, 
T_PGFLT
)

56 
	$TRAPHANDLER_NOEC
(
routöe_Âîr
, 
T_FPERR
)

57 
	$TRAPHANDLER
(
routöe_Æign
, 
T_ALIGN
)

58 
	$TRAPHANDLER_NOEC
(
routöe_mchk
, 
T_MCHK
)

59 
	$TRAPHANDLER_NOEC
(
routöe_simdîr
, 
T_SIMDERR
)

60 
	$TRAPHANDLER_NOEC
(
sy°em_ˇŒ
, 
T_SYSCALL
)

61 
	`TRAPHANDLER_NOEC
(
timî
, 
IRQ_OFFSET
 + 
IRQ_TIMER
)

67 
_Æ…øps
:

83 
pushw
 
$0x0


84 
pushw
 %
ds


85 
pushw
 
$0x0


86 
pushw
 %
es


87 
pushÆ


88 
movl
 
$GD_KD
, %
óx


89 
movw
 %
ax
, %
ds


90 
movw
 %
ax
, %
es


91 
pushl
 %
e•


92 
ˇŒ
 
å≠


	@lib/console.c

2 
	~<öc/°rög.h
>

3 
	~<öc/lib.h
>

6 
	$˝utch¨
(
ch
)

8 
c
 = 
ch
;

12 
	`sys_˝uts
(&
c
, 1);

13 
	}
}

16 
	$gëch¨
()

18  
	`sys_cgëc
();

19 
	}
}

	@lib/entry.S

1 
	~<öc/mmu.h
>

2 
	~<öc/memœyout.h
>

4 .
	gd©a


7 .
p2Æign
 
	gPGSHIFT


8 .
globl
 
fsùcbuf


9 
	gfsùcbuf
:

10 .
•a˚
 
PGSIZE


11 .
globl
 
fdèb


12 
fdèb
:

13 .
•a˚
 
PGSIZE


18 .
globl
 
ívs


19 .
£t
 
ívs
, 
	gUENVS


20 .
globl
 
	g∑ges


21 .
£t
 
	g∑ges
, 
	gUPAGES


22 .
globl
 
	gv±


23 .
£t
 
	gv±
, 
	gUVPT


24 .
globl
 
	gvpd


25 .
£t
 
	gvpd
, (
	gUVPT
+(UVPT>>12)*4)

30 .
	gãxt


31 .
globl
 
_°¨t


32 
	g_°¨t
:

34 
cm∂
 
$USTACKTOP
, %
e•


35 
j√
 
¨gs_exi°


40 
pushl
 
$0


41 
pushl
 
$0


43 
	g¨gs_exi°
:

44 
ˇŒ
 
libmaö


45 1: 
jmp
 1b

	@lib/exit.c

2 
	~<öc/lib.h
>

5 
	$exô
()

7 
	`˛o£_Æl
();

8 
	`sys_ív_de°roy
(0);

9 
	}
}

	@lib/fd.c

1 
	~<öc/lib.h
>

3 
	#debug
 0

	)

6 
	#MAXFD
 32

	)

8 
	#FILEBASE
 0xD0000000

	)

10 
	#FDTABLE
 (
FILEBASE
 - 
PTSIZE
)

	)

13 
	#INDEX2FD
(
i
Ë((
Fd
*Ë(
FDTABLE
 + (i)*
PGSIZE
))

	)

15 
	#INDEX2DATA
(
i
Ë((*Ë(
FILEBASE
 + (i)*
PTSIZE
))

	)

24 
	$fd2d©a
(
Fd
 *
fd
)

26  
	`INDEX2DATA
(
	`fd2num
(
fd
));

27 
	}
}

30 
	$fd2num
(
Fd
 *
fd
)

32  ((
uöçå_t
Ë
fd
 - 
FDTABLE
Ë/ 
PGSIZE
;

33 
	}
}

51 
	$fd_Æloc
(
Fd
 **
fd_°‹e
)

55 
	`∑nic
("fd_allocÇot implemented");

56  -
E_MAX_OPEN
;

57 
	}
}

66 
	$fd_lookup
(
fdnum
, 
Fd
 **
fd_°‹e
)

70 
	`∑nic
("fd_lookupÇot implemented");

71  -
E_INVAL
;

72 
	}
}

82 
	$fd_˛o£
(
Fd
 *
fd
, 
boﬁ
 
mu°_exi°
)

84 
Fd
 *
fd2
;

85 
Dev
 *
dev
;

86 
r
;

87 i‡((
r
 = 
	`fd_lookup
(
	`fd2num
(
fd
), &
fd2
)) < 0

88 || 
fd
 !
fd2
)

89  (
mu°_exi°
 ? 
r
 : 0);

90 i‡((
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) >= 0)

91 
r
 = (*
dev
->
dev_˛o£
)(
fd
);

94 (Ë
	`sys_∑ge_unm≠
(0, 
fd
);

95  
r
;

96 
	}
}

104 
Dev
 *
	gdevèb
[] =

106 &
devfûe
,

111 
	$dev_lookup
(
dev_id
, 
Dev
 **
dev
)

113 
i
;

114 
i
 = 0; 
devèb
[i]; i++)

115 i‡(
devèb
[
i
]->
dev_id
 == dev_id) {

116 *
dev
 = 
devèb
[
i
];

119 
	`˝rötf
("[%08x] unknow¿devi˚Åy≥ %d\n", 
ív
->
ív_id
, 
dev_id
);

120 *
dev
 = 0;

121  -
E_INVAL
;

122 
	}
}

125 
	$˛o£
(
fdnum
)

127 
Fd
 *
fd
;

128 
r
;

130 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0)

131  
r
;

133  
	`fd_˛o£
(
fd
, 1);

134 
	}
}

137 
	$˛o£_Æl
()

139 
i
;

140 
i
 = 0; i < 
MAXFD
; i++)

141 
	`˛o£
(
i
);

142 
	}
}

150 
	$dup
(
ﬁdfdnum
, 
√wfdnum
)

152 
i
, 
r
;

153 *
ova
, *
nva
;

154 
±e_t
 
±e
;

155 
Fd
 *
ﬁdfd
, *
√wfd
;

157 i‡((
r
 = 
	`fd_lookup
(
ﬁdfdnum
, &
ﬁdfd
)) < 0)

158  
r
;

159 
	`˛o£
(
√wfdnum
);

161 
√wfd
 = 
	`INDEX2FD
(
√wfdnum
);

162 
ova
 = 
	`fd2d©a
(
ﬁdfd
);

163 
nva
 = 
	`fd2d©a
(
√wfd
);

165 i‡((
r
 = 
	`sys_∑ge_m≠
(0, 
ﬁdfd
, 0, 
√wfd
, 
v±
[
	`VPN
(ﬁdfd)] & 
PTE_USER
)) < 0)

166 
îr
;

167 i‡(
vpd
[
	`PDX
(
ova
)]) {

168 
i
 = 0; i < 
PTSIZE
; i +
PGSIZE
) {

169 
±e
 = 
v±
[
	`VPN
(
ova
 + 
i
)];

170 i‡(
±e
&
PTE_P
) {

172 i‡((
r
 = 
	`sys_∑ge_m≠
(0, 
ova
 + 
i
, 0, 
nva
 + i, 
±e
 & 
PTE_USER
)) < 0)

173 
îr
;

178  
√wfdnum
;

180 
îr
:

181 
	`sys_∑ge_unm≠
(0, 
√wfd
);

182 
i
 = 0; i < 
PTSIZE
; i +
PGSIZE
)

183 
	`sys_∑ge_unm≠
(0, 
nva
 + 
i
);

184  
r
;

185 
	}
}

187 
ssize_t


188 
	$ªad
(
fdnum
, *
buf
, 
size_t
 
n
)

190 
r
;

191 
Dev
 *
dev
;

192 
Fd
 *
fd
;

194 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0

195 || (
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) < 0)

196  
r
;

197 i‡((
fd
->
fd_omode
 & 
O_ACCMODE
Ë=
O_WRONLY
) {

198 
	`˝rötf
("[%08x]Ñód %d -- bad mode\n", 
ív
->
ív_id
, 
fdnum
);

199  -
E_INVAL
;

201 
r
 = (*
dev
->
dev_ªad
)(
fd
, 
buf
, 
n
, fd->
fd_off£t
);

202 i‡(
r
 >= 0)

203 
fd
->
fd_off£t
 +
r
;

204  
r
;

205 
	}
}

207 
ssize_t


208 
	$ªadn
(
fdnum
, *
buf
, 
size_t
 
n
)

210 
m
, 
tŸ
;

212 
tŸ
 = 0;ÅŸ < 
n
;ÅŸ +
m
) {

213 
m
 = 
	`ªad
(
fdnum
, (*)
buf
 + 
tŸ
, 
n
 -Åot);

214 i‡(
m
 < 0)

215  
m
;

216 i‡(
m
 == 0)

219  
tŸ
;

220 
	}
}

222 
ssize_t


223 
	$wrôe
(
fdnum
, c⁄° *
buf
, 
size_t
 
n
)

225 
r
;

226 
Dev
 *
dev
;

227 
Fd
 *
fd
;

229 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0

230 || (
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) < 0)

231  
r
;

232 i‡((
fd
->
fd_omode
 & 
O_ACCMODE
Ë=
O_RDONLY
) {

233 
	`˝rötf
("[%08x] wrôê%d -- bad mode\n", 
ív
->
ív_id
, 
fdnum
);

234  -
E_INVAL
;

236 i‡(
debug
)

237 
	`˝rötf
("write %d %p %d via dev %s\n",

238 
fdnum
, 
buf
, 
n
, 
dev
->
dev_«me
);

239 
r
 = (*
dev
->
dev_wrôe
)(
fd
, 
buf
, 
n
, fd->
fd_off£t
);

240 i‡(
r
 > 0)

241 
fd
->
fd_off£t
 +
r
;

242  
r
;

243 
	}
}

246 
	$£ek
(
fdnum
, 
off_t
 
off£t
)

248 
r
;

249 
Fd
 *
fd
;

251 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0)

252  
r
;

253 
fd
->
fd_off£t
 = 
off£t
;

255 
	}
}

258 
	$·runˇã
(
fdnum
, 
off_t
 
√wsize
)

260 
r
;

261 
Dev
 *
dev
;

262 
Fd
 *
fd
;

263 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0

264 || (
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) < 0)

265  
r
;

266 i‡((
fd
->
fd_omode
 & 
O_ACCMODE
Ë=
O_RDONLY
) {

267 
	`˝rötf
("[%08x] ftruncate %d -- bad mode\n",

268 
ív
->
ív_id
, 
fdnum
);

269  -
E_INVAL
;

271  (*
dev
->
dev_åunc
)(
fd
, 
√wsize
);

272 
	}
}

275 
	$f°©
(
fdnum
, 
Sèt
 *
°©
)

277 
r
;

278 
Dev
 *
dev
;

279 
Fd
 *
fd
;

281 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0

282 || (
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) < 0)

283  
r
;

284 
°©
->
°_«me
[0] = 0;

285 
°©
->
°_size
 = 0;

286 
°©
->
°_isdú
 = 0;

287 
°©
->
°_dev
 = 
dev
;

288  (*
dev
->
dev_°©
)(
fd
, 
°©
);

289 
	}
}

292 
	$°©
(c⁄° *
∑th
, 
Sèt
 *
°©
)

294 
fd
, 
r
;

296 i‡((
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
)) < 0)

297  
fd
;

298 
r
 = 
	`f°©
(
fd
, 
°©
);

299 
	`˛o£
(
fd
);

300  
r
;

301 
	}
}

	@lib/file.c

1 
	~<öc/fs.h
>

2 
	~<öc/°rög.h
>

3 
	~<öc/lib.h
>

5 
	#debug
 0

	)

7 
fûe_˛o£
(
Fd
 *
fd
);

8 
ssize_t
 
fûe_ªad
(
Fd
 *
fd
, *
buf
, 
size_t
 
n
, 
off_t
 
off£t
);

9 
ssize_t
 
fûe_wrôe
(
Fd
 *
fd
, c⁄° *
buf
, 
size_t
 
n
, 
off_t
 
off£t
);

10 
fûe_°©
(
Fd
 *
fd
, 
Sèt
 *
°©
);

11 
fûe_åunc
(
Fd
 *
fd
, 
off_t
 
√wsize
);

13 
Dev
 
	gdevfûe
 =

15 .
dev_id
 = 'f',

16 .
	gdev_«me
 = "file",

17 .
	gdev_ªad
 = 
fûe_ªad
,

18 .
	gdev_wrôe
 = 
fûe_wrôe
,

19 .
	gdev_˛o£
 = 
fûe_˛o£
,

20 .
	gdev_°©
 = 
fûe_°©
,

21 .
	gdev_åunc
 = 
fûe_åunc


25 
fm≠
(
Fd
 *
fd
, 
off_t
 
ﬁdsize
, off_à
√wsize
);

26 
funm≠
(
Fd
 *
fd
, 
off_t
 
ﬁdsize
, off_à
√wsize
, 
boﬁ
 
dúty
);

31 
	$›í
(c⁄° *
∑th
, 
mode
)

44 
	`∑nic
("open() unimplemented!");

45 
	}
}

50 
	$fûe_˛o£
(
Fd
 *
fd
)

57 
	`∑nic
("close() unimplemented!");

58 
	}
}

63 
ssize_t


64 
	$fûe_ªad
(
Fd
 *
fd
, *
buf
, 
size_t
 
n
, 
off_t
 
off£t
)

66 
size_t
 
size
;

69 
size
 = 
fd
->
fd_fûe
.
fûe
.
f_size
;

70 i‡(
off£t
 > 
size
)

72 i‡(
off£t
 + 
n
 > 
size
)

73 
n
 = 
size
 - 
off£t
;

76 
	`memmove
(
buf
, 
	`fd2d©a
(
fd
Ë+ 
off£t
, 
n
);

77  
n
;

78 
	}
}

83 
	$ªad_m≠
(
fdnum
, 
off_t
 
off£t
, **
blk
)

85 
r
;

86 *
va
;

87 
Fd
 *
fd
;

89 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0)

90  
r
;

91 i‡(
fd
->
fd_dev_id
 !
devfûe
.
dev_id
)

92  -
E_INVAL
;

93 
va
 = 
	`fd2d©a
(
fd
Ë+ 
off£t
;

94 i‡(
off£t
 >
MAXFILESIZE
)

95  -
E_NO_DISK
;

96 i‡(!(
vpd
[
	`PDX
(
va
)] & 
PTE_P
Ë|| !(
v±
[
	`VPN
(va)] & PTE_P))

97  -
E_NO_DISK
;

98 *
blk
 = (*Ë
va
;

100 
	}
}

103 
ssize_t


104 
	$fûe_wrôe
(
Fd
 *
fd
, c⁄° *
buf
, 
size_t
 
n
, 
off_t
 
off£t
)

106 
r
;

107 
size_t
 
tŸ
;

110 
tŸ
 = 
off£t
 + 
n
;

111 i‡(
tŸ
 > 
MAXFILESIZE
)

112  -
E_NO_DISK
;

115 i‡(
tŸ
 > 
fd
->
fd_fûe
.
fûe
.
f_size
) {

116 i‡((
r
 = 
	`fûe_åunc
(
fd
, 
tŸ
)) < 0)

117  
r
;

121 
	`memmove
(
	`fd2d©a
(
fd
Ë+ 
off£t
, 
buf
, 
n
);

122  
n
;

123 
	}
}

126 
	$fûe_°©
(
Fd
 *
fd
, 
Sèt
 *
°
)

128 
	`°r˝y
(
°
->
°_«me
, 
fd
->
fd_fûe
.
fûe
.
f_«me
);

129 
°
->
°_size
 = 
fd
->
fd_fûe
.
fûe
.
f_size
;

130 
°
->
°_isdú
 = (
fd
->
fd_fûe
.
fûe
.
f_ty≥
 =
FTYPE_DIR
);

132 
	}
}

136 
	$fûe_åunc
(
Fd
 *
fd
, 
off_t
 
√wsize
)

138 
r
;

139 
off_t
 
ﬁdsize
;

140 
uöt32_t
 
fûeid
;

142 i‡(
√wsize
 > 
MAXFILESIZE
)

143  -
E_NO_DISK
;

145 
fûeid
 = 
fd
->
fd_fûe
.
id
;

146 
ﬁdsize
 = 
fd
->
fd_fûe
.
fûe
.
f_size
;

147 i‡((
r
 = 
	`fsùc_£t_size
(
fûeid
, 
√wsize
)) < 0)

148  
r
;

149 
	`as£π
(
fd
->
fd_fûe
.
fûe
.
f_size
 =
√wsize
);

151 i‡((
r
 = 
	`fm≠
(
fd
, 
ﬁdsize
, 
√wsize
)) < 0)

152  
r
;

153 
	`funm≠
(
fd
, 
ﬁdsize
, 
√wsize
, 0);

156 
	}
}

164 
	$fm≠
(
Fd
* 
fd
, 
off_t
 
ﬁdsize
, off_à
√wsize
)

166 
size_t
 
i
;

167 *
va
;

168 
r
;

170 
va
 = 
	`fd2d©a
(
fd
);

171 
i
 = 
	`ROUNDUP
(
ﬁdsize
, 
PGSIZE
); i < 
√wsize
; i += PGSIZE) {

172 i‡((
r
 = 
	`fsùc_m≠
(
fd
->
fd_fûe
.
id
, 
i
, 
va
 + i)) < 0) {

174 
	`funm≠
(
fd
, 
i
, 
ﬁdsize
, 0);

175  
r
;

179 
	}
}

185 
	$funm≠
(
Fd
* 
fd
, 
off_t
 
ﬁdsize
, off_à
√wsize
, 
boﬁ
 
dúty
)

187 
size_t
 
i
;

188 *
va
;

189 
r
, 
ªt
;

191 
va
 = 
	`fd2d©a
(
fd
);

194 i‡(!(
vpd
[
	`VPD
(
va
)] & 
PTE_P
))

197 
ªt
 = 0;

198 
i
 = 
	`ROUNDUP
(
√wsize
, 
PGSIZE
); i < 
ﬁdsize
; i += PGSIZE)

199 i‡(
v±
[
	`VPN
(
va
 + 
i
)] & 
PTE_P
) {

200 i‡(
dúty


201 && (
v±
[
	`VPN
(
va
 + 
i
)] & 
PTE_D
)

202 && (
r
 = 
	`fsùc_dúty
(
fd
->
fd_fûe
.
id
, 
i
)) < 0)

203 
ªt
 = 
r
;

204 
	`sys_∑ge_unm≠
(0, 
va
 + 
i
);

206  
ªt
;

207 
	}
}

211 
	$ªmove
(c⁄° *
∑th
)

213  
	`fsùc_ªmove
(
∑th
);

214 
	}
}

218 
	$sync
()

220  
	`fsùc_sync
();

221 
	}
}

	@lib/fork.c

3 
	~<öc/°rög.h
>

4 
	~<öc/lib.h
>

8 
	#PTE_COW
 0x800

	)

15 
	$pgÁu…
(
UTøp‰ame
 *
utf
)

17 *
addr
 = (*Ë
utf
->
utf_Áu…_va
;

18 
uöt32_t
 
îr
 = 
utf
->
utf_îr
;

19 
r
;

35 if((
îr
 & 
FEC_WR
Ë=0 || (
vpd
[
	`VPD
(
addr
)] & 
PTE_P
Ë=0 || (
v±
[
	`VPN
◊ddr)] & 
PTE_COW
) == 0){

37 
	`∑nic
("pgfault:Çotá write oráttemptingÅoáccessáÇon_COWÖage\n");

45 if((
r
 = 
	`sys_∑ge_Æloc
(0, (*)
PFTEMP
, 
PTE_U
|
PTE_P
|
PTE_W
)) < 0){

46 
	`∑nic
("pgÁu…ÖagêÆloˇti⁄ faûed : %e\n", 
r
);

49 
addr
 = 
	`ROUNDDOWN
◊ddr, 
PGSIZE
);

50 
	`memmove
(
PFTEMP
, 
addr
, 
PGSIZE
);

52 if((
r
 = 
	`sys_∑ge_m≠
(0, 
PFTEMP
, 0, 
addr
, 
PTE_U
|
PTE_P
|
PTE_W
)) < 0){

53 
	`∑nic
("pgÁu…:Öagêm≠pög faûed %e\n", 
r
);

56 
	}
}

69 
	$duµage
(
ívid_t
 
ívid
, 
≤
)

71 
r
;

72 *
addr
;

73 
±e_t
 
±e
;

74 
addr
 = (*)((
uöt32_t
)
≤
 * 
PGSIZE
);

75 
±e
 = 
v±
[
	`VPN
(
addr
)];

77 if((
±e
 & 
PTE_W
Ë> 0||’ã & 
PTE_COW
) > 0){

79 if((
r
 = 
	`sys_∑ge_m≠
(0, 
addr
, 
ívid
,áddr, 
PTE_P
|
PTE_U
|
PTE_COW
)) < 0){

80 
	`∑nic
("sysÖage mapÉnvid --> 0 failed ,parent copyÅo child\n");

82 if((
r
 = 
	`sys_∑ge_m≠
(0, 
addr
, 0,áddr, 
PTE_P
|
PTE_U
|
PTE_COW
)) < 0){

83 
	`∑nic
("sysÖage map 0 --> 0 failed ,parent copy it self\n");

87 if((
r
 = 
	`sys_∑ge_m≠
(0, 
addr
, 
ívid
,áddr, 
PTE_P
|
PTE_U
)) < 0){

88 
	`∑nic
("sysÖage mapÉnvid --> 0 failed ,parent copyÅo child\n");

94 
	}
}

112 
ívid_t


113 
	$f‹k
()

118 
	`£t_pgÁu…_h™dÀr
(
pgÁu…
);

122 
ívid_t
 
√wív
;

123 
uöt32_t
 
addr
;

124 
r
;

126 
√wív
 = 
	`sys_exof‹k
();

128 if(
√wív
 < 0Ë
	`∑nic
("envid < 0 ,failed inÉxofork\n");

129 if(
√wív
 == 0){

131 
ív
 = &
ívs
[
	`ENVX
(
	`sys_gëívid
())];

139 
addr
 = 
UTEXT
;ádd∏< 
UXSTACKTOP
 - 
PGSIZE
;áddr += PGSIZE){

145 if((
vpd
[
	`VPD
(
addr
)] & 
PTE_P
Ë> 0 && (
v±
[
	`VPN
◊ddr)] & PTE_PË> 0 && (v±[VPN◊ddr)] & 
PTE_U
) > 0)

146 
	`duµage
 (
√wív
, 
	`VPN
(
addr
));

150 if((
r
 = 
	`sys_∑ge_Æloc
(
√wív
, (*)(
UXSTACKTOP
 - 
PGSIZE
), 
PTE_P
|
PTE_U
|
PTE_W
)) < 0){

151 
	`∑nic
("forkállocÖage failed\n");

154 
	`_pgÁu…_upˇŒ
();

155 
	`sys_ív_£t_pgÁu…_upˇŒ
(
√wív
, 
_pgÁu…_upˇŒ
);

158 if((
r
 = 
	`sys_ív_£t_°©us
(
√wív
, 
ENV_RUNNABLE
)) < 0){

159 
	`∑nic
("setÑunnable failed\n");

162  
√wív
;

163 
	}
}

168 
	$sduµage
(
ívid_t
 
ívid
, 
≤
, 
√ed_cow
)

170 
r
;

171 * 
addr
 = (*Ë((
uöt32_t
Ë
≤
 * 
PGSIZE
);

172 
±e_t
 
±e
 = 
v±
[
	`VPN
(
addr
)];

173 if(
√ed_cow
 || (
±e
 & 
PTE_COW
) > 0) {

174 if((
r
 = 
	`sys_∑ge_m≠
 (0, 
addr
, 
ívid
,áddr, 
PTE_U
|
PTE_P
|
PTE_COW
)) < 0)

175 
	`∑nic
 ("duµage:Öagêª-m≠pög faûedáà1 : %e", 
r
);

176 if((
r
 = 
	`sys_∑ge_m≠
 (0, 
addr
, 0,áddr, 
PTE_U
|
PTE_P
|
PTE_COW
)) < 0)

177 
	`∑nic
 ("duµage:Öagêª-m≠pög faûedáà2 : %e", 
r
);

178 }i‡((
±e
 & 
PTE_W
) > 0) {

179 i‡((
r
 = 
	`sys_∑ge_m≠
 (0, 
addr
, 
ívid
,áddr, 
PTE_U
|
PTE_W
|
PTE_P
)) < 0)

180 
	`∑nic
 ("duµage:Öagêª-m≠pög faûedáà3 : %e", 
r
);

182 i‡((
r
 = 
	`sys_∑ge_m≠
 (0, 
addr
, 
ívid
,áddr, 
PTE_U
|
PTE_P
)) < 0)

183 
	`∑nic
 ("duµage:Öagêª-m≠pög faûedáà4 : %e", 
r
);

186 
	}
}

190 
	$sf‹k
()

194 
	`£t_pgÁu…_h™dÀr
(
pgÁu…
);

198 
ívid_t
 
√wív
;

199 
uöt32_t
 
addr
;

200 
r
;

202 
√wív
 = 
	`sys_exof‹k
();

204 if(
√wív
 < 0Ë
	`∑nic
("envid < 0 ,failed inÉxofork\n");

205 if(
√wív
 == 0){

207 
ív
 = &
ívs
[
	`ENVX
(
	`sys_gëívid
())];

215 
m¨k_COW
 = 1;

216 
addr
 = 
UTEXT
;ádd∏< 
UXSTACKTOP
 - 
PGSIZE
;áddr += PGSIZE){

222 if((
vpd
[
	`VPD
(
addr
)] & 
PTE_P
Ë> 0 && (
v±
[
	`VPN
◊ddr)] & PTE_PË> 0 && (v±[VPN◊ddr)] & 
PTE_U
) > 0)

223 
	`sduµage
 (
√wív
, 
	`VPN
(
addr
), 
m¨k_COW
);

224 
m¨k_COW
 = 0;

228 if((
r
 = 
	`sys_∑ge_Æloc
(
√wív
, (*)(
UXSTACKTOP
 - 
PGSIZE
), 
PTE_P
|
PTE_U
|
PTE_W
)) < 0){

229 
	`∑nic
("forkállocÖage failed\n");

232 
	`_pgÁu…_upˇŒ
();

233 
	`sys_ív_£t_pgÁu…_upˇŒ
(
√wív
, 
_pgÁu…_upˇŒ
);

236 if((
r
 = 
	`sys_ív_£t_°©us
(
√wív
, 
ENV_RUNNABLE
)) < 0){

237 
	`∑nic
("setÑunnable failed\n");

240  
√wív
;

241 
	}
}

	@lib/fprintf.c

1 
	~<öc/lib.h
>

8 
	s¥ötbuf
 {

9 
	mfd
;

10 
	midx
;

11 
ssize_t
 
	mªsu…
;

12 
	mîr‹
;

13 
	mbuf
[256];

18 
	$wrôebuf
(
¥ötbuf
 *
b
)

20 i‡(
b
->
îr‹
 > 0) {

21 
ssize_t
 
ªsu…
 = 
	`wrôe
(
b
->
fd
, b->
buf
, b->
idx
);

22 i‡(
ªsu…
 > 0)

23 
b
->
ªsu…
 +=Ñesult;

24 i‡(
ªsu…
 !
b
->
idx
)

25 
b
->
îr‹
 = (
ªsu…
 < 0 ?Ñesult : 0);

27 
	}
}

30 
	$putch
(
ch
, *
thunk
)

32 
¥ötbuf
 *
b
 = (¥ötbu‡*Ë
thunk
;

33 
b
->
buf
[b->
idx
++] = 
ch
;

34 i‡(
b
->
idx
 == 256) {

35 
	`wrôebuf
(
b
);

36 
b
->
idx
 = 0;

38 
	}
}

41 
	$vÂrötf
(
fd
, c⁄° *
fmt
, 
va_li°
 
≠
)

43 
¥ötbuf
 
b
;

45 
b
.
fd
 = fd;

46 
b
.
idx
 = 0;

47 
b
.
ªsu…
 = 0;

48 
b
.
îr‹
 = 1;

49 
	`v¥ötfmt
(
putch
, &
b
, 
fmt
, 
≠
);

50 i‡(
b
.
idx
 > 0)

51 
	`wrôebuf
(&
b
);

53  (
b
.
ªsu…
 ? b.ªsu… : b.
îr‹
);

54 
	}
}

57 
	$Ârötf
(
fd
, c⁄° *
fmt
, ...)

59 
va_li°
 
≠
;

60 
˙t
;

62 
	`va_°¨t
(
≠
, 
fmt
);

63 
˙t
 = 
	`vÂrötf
(
fd
, 
fmt
, 
≠
);

64 
	`va_íd
(
≠
);

66  
˙t
;

67 
	}
}

70 
	$¥ötf
(c⁄° *
fmt
, ...)

72 
va_li°
 
≠
;

73 
˙t
;

75 
	`va_°¨t
(
≠
, 
fmt
);

76 
˙t
 = 
	`vÂrötf
(1, 
fmt
, 
≠
);

77 
	`va_íd
(
≠
);

79  
˙t
;

80 
	}
}

	@lib/fsipc.c

1 
	~<öc/fs.h
>

2 
	~<öc/lib.h
>

4 
	#debug
 0

	)

6 
uöt8_t
 
fsùcbuf
[
PGSIZE
];

16 
	$fsùc
(
ty≥
, *
f§eq
, *
d°va
, *
≥rm
)

18 
ívid_t
 
whom
;

20 i‡(
debug
)

21 
	`˝rötf
("[%08x] fsù¯%d %08x\n", 
ív
->
ív_id
, 
ty≥
, 
fsùcbuf
);

23 
	`ùc_£nd
(
ívs
[1].
ív_id
, 
ty≥
, 
f§eq
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

24  
	`ùc_ªcv
(&
whom
, 
d°va
, 
≥rm
);

25 
	}
}

33 
	$fsùc_›í
(c⁄° *
∑th
, 
omode
, 
Fd
 *
fd
)

35 
≥rm
;

36 
F§eq_›í
 *
ªq
;

38 
ªq
 = (
F§eq_›í
*)
fsùcbuf
;

39 i‡(
	`°æí
(
∑th
Ë>
MAXPATHLEN
)

40  -
E_BAD_PATH
;

41 
	`°r˝y
(
ªq
->
ªq_∑th
, 
∑th
);

42 
ªq
->
ªq_omode
 = 
omode
;

44  
	`fsùc
(
FSREQ_OPEN
, 
ªq
, 
fd
, &
≥rm
);

45 
	}
}

52 
	$fsùc_m≠
(
fûeid
, 
off_t
 
off£t
, *
d°va
)

54 
r
, 
≥rm
;

55 
F§eq_m≠
 *
ªq
;

57 
ªq
 = (
F§eq_m≠
*Ë
fsùcbuf
;

58 
ªq
->
ªq_fûeid
 = 
fûeid
;

59 
ªq
->
ªq_off£t
 = 
off£t
;

60 i‡((
r
 = 
	`fsùc
(
FSREQ_MAP
, 
ªq
, 
d°va
, &
≥rm
)) < 0)

61  
r
;

62 i‡((
≥rm
 & ~(
PTE_W
 | 
PTE_SHARE
)Ë!(
PTE_U
 | 
PTE_P
))

63 
	`∑nic
("fsùc_m≠: u√x≥˘edÖîmissi⁄†%08x f‹ d°v®%08x", 
≥rm
, 
d°va
);

65 
	}
}

69 
	$fsùc_£t_size
(
fûeid
, 
off_t
 
size
)

71 
F§eq_£t_size
 *
ªq
;

73 
ªq
 = (
F§eq_£t_size
*Ë
fsùcbuf
;

74 
ªq
->
ªq_fûeid
 = 
fûeid
;

75 
ªq
->
ªq_size
 = 
size
;

76  
	`fsùc
(
FSREQ_SET_SIZE
, 
ªq
, 0, 0);

77 
	}
}

82 
	$fsùc_˛o£
(
fûeid
)

84 
F§eq_˛o£
 *
ªq
;

86 
ªq
 = (
F§eq_˛o£
*Ë
fsùcbuf
;

87 
ªq
->
ªq_fûeid
 = 
fûeid
;

88  
	`fsùc
(
FSREQ_CLOSE
, 
ªq
, 0, 0);

89 
	}
}

93 
	$fsùc_dúty
(
fûeid
, 
off_t
 
off£t
)

95 
F§eq_dúty
 *
ªq
;

97 
ªq
 = (
F§eq_dúty
*Ë
fsùcbuf
;

98 
ªq
->
ªq_fûeid
 = 
fûeid
;

99 
ªq
->
ªq_off£t
 = 
off£t
;

100  
	`fsùc
(
FSREQ_DIRTY
, 
ªq
, 0, 0);

101 
	}
}

105 
	$fsùc_ªmove
(c⁄° *
∑th
)

107 
F§eq_ªmove
 *
ªq
;

109 
ªq
 = (
F§eq_ªmove
*Ë
fsùcbuf
;

110 i‡(
	`°æí
(
∑th
Ë>
MAXPATHLEN
)

111  -
E_BAD_PATH
;

112 
	`°r˝y
(
ªq
->
ªq_∑th
, 
∑th
);

113  
	`fsùc
(
FSREQ_REMOVE
, 
ªq
, 0, 0);

114 
	}
}

119 
	$fsùc_sync
()

121  
	`fsùc
(
FSREQ_SYNC
, 
fsùcbuf
, 0, 0);

122 
	}
}

	@lib/ipc.c

3 
	~<öc/lib.h
>

17 
öt32_t


18 
	$ùc_ªcv
(
ívid_t
 *
‰om_ív_°‹e
, *
pg
, *
≥rm_°‹e
)

22 
r
;

23 if(
pg
 =
NULL
){

24 
r
 = 
	`sys_ùc_ªcv
((*)
UTOP
);

27 
r
 = 
	`sys_ùc_ªcv
(
pg
);

29 if(
r
 < 0) {

30 
	`∑nic
("send ipc_recv failed\n");

31  
r
;

34 
Env
 *
ív_n
 = (Env *)
ívs
 + 
	`ENVX
(
	`sys_gëívid
());

35 if(
‰om_ív_°‹e
 !
NULL
) {

38 *
‰om_ív_°‹e
 = 
ív_n
->
ív_ùc_‰om
;

40 if(
≥rm_°‹e
 !
NULL
){

43 *
≥rm_°‹e
 = 
ív_n
->
ív_ùc_≥rm
;

45  
ív_n
->
ív_ùc_vÆue
;

47 
	}
}

58 
	$ùc_£nd
(
ívid_t
 
to_ív
, 
uöt32_t
 
vÆ
, *
pg
, 
≥rm
)

62 
r
;

70 if(
pg
 =
NULL
){

71 
r
 = 
	`sys_ùc_åy_£nd
(
to_ív
, 
vÆ
, (*)
UTOP
, 
≥rm
);

74 
r
 = 
	`sys_ùc_åy_£nd
(
to_ív
, 
vÆ
, 
pg
, 
≥rm
);

76 if(
r
 < 0 &&Ñ !-
E_IPC_NOT_RECV
)

77 
	`∑nic
(" %d Msg Re¯Eº‹!\n", 
r
);

78 
	`sys_yõld
();

79 }
r
 < 0);

80 
	}
}

	@lib/libmain.c

4 
	~<öc/lib.h
>

6 
umaö
(
¨gc
, **
¨gv
);

8 vﬁ©ûê
Env
 *
	gív
;

9 *
	gbö¨y«me
 = "(PROGRAM NAME UNKNOWN)";

12 
	$libmaö
(
¨gc
, **
¨gv
)

17 
ív
 = 
ívs
 + 
	`ENVX
(
	`sys_gëívid
());

20 i‡(
¨gc
 > 0)

21 
bö¨y«me
 = 
¨gv
[0];

24 
	`umaö
(
¨gc
, 
¨gv
);

27 
	`exô
();

28 
	}
}

	@lib/pageref.c

1 
	~<öc/lib.h
>

4 
	$∑gîef
(*
v
)

6 
±e_t
 
±e
;

8 i‡(!(
vpd
[
	`PDX
(
v
)] & 
PTE_P
))

10 
±e
 = 
v±
[
	`VPN
(
v
)];

11 i‡(!(
±e
 & 
PTE_P
))

13  
∑ges
[
	`PPN
(
±e
)].
µ_ªf
;

14 
	}
}

	@lib/panic.c

2 
	~<öc/lib.h
>

4 *
	g¨gv0
;

12 
	$_∑nic
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

14 
va_li°
 
≠
;

16 
	`va_°¨t
(
≠
, 
fmt
);

19 i‡(
¨gv0
)

20 
	`˝rötf
("%s: ", 
¨gv0
);

21 
	`˝rötf
("u£∏∑ni¯ö %†© %s:%d: ", 
bö¨y«me
, 
fûe
, 
löe
);

22 
	`v˝rötf
(
fmt
, 
≠
);

23 
	`˝rötf
("\n");

27 
asm
 volatile("int3");

28 
	}
}

	@lib/pfentry.S

1 
	~<öc/mmu.h
>

2 
	~<öc/memœyout.h
>

33 .
	gãxt


34 .
globl
 
_pgÁu…_upˇŒ


35 
	g_pgÁu…_upˇŒ
:

37 
pushl
 %
e•


38 
movl
 
_pgÁu…_h™dÀr
, %
óx


39 
	gˇŒ
 *%
óx


40 
addl
 
	g$4
, %
e•


70 
	gmovl
 0x30(%
	ge•
), %
óx


71 
subl
 
	g$0x4
, %
óx


72 
	gmovl
 %
	góx
, 0x30(%
	ge•
)

76 
	gmovl
 0x28(%
	ge•
), %
ebx


77 
	gmovl
 %
	gebx
, (%
	góx
)

82 
addl
 
	g$0x8
, %
e•


83 
p›Æ


88 
addl
 
	g$0x4
, %
e•


89 
p›Ê


94 
	gp›
 %
e•


98 
	gªt


	@lib/pgfault.c

5 
	~<öc/lib.h
>

9 
_pgÁu…_upˇŒ
();

12 (*
_pgÁu…_h™dÀr
)(
UTøp‰ame
 *
utf
);

23 
	`£t_pgÁu…_h™dÀr
((*
h™dÀr
)(
UTøp‰ame
 *
utf
))

25 
r
;

27 i‡(
_pgÁu…_h™dÀr
 == 0) {

30 
ívid_t
 
ív_id
 = 
	`sys_gëívid
();

31 if((
r
 = 
	`sys_∑ge_Æloc
(
ív_id
, (*)(
UXSTACKTOP
 - 
PGSIZE
), 
PTE_U
|
PTE_P
|
PTE_W
)) < 0){

32 
	`∑nic
("set_pgfault_handlerÇot implemented\n");

36 if(
	`sys_ív_£t_pgÁu…_upˇŒ
(
ív_id
, 
_pgÁu…_upˇŒ
) < 0){

37 
	`∑nic
("sys_env_set_pgfault_upcallÇot implemented\n");

43 
_pgÁu…_h™dÀr
 = 
h™dÀr
;

44 
	}
}

	@lib/printf.c

8 
	~<öc/ty≥s.h
>

9 
	~<öc/°dio.h
>

10 
	~<öc/°d¨g.h
>

11 
	~<öc/lib.h
>

19 
	s¥ötbuf
 {

20 
	midx
;

21 
	m˙t
;

22 
	mbuf
[256];

27 
	$putch
(
ch
, 
¥ötbuf
 *
b
)

29 
b
->
buf
[b->
idx
++] = 
ch
;

30 i‡(
b
->
idx
 == 256-1) {

31 
	`sys_˝uts
(
b
->
buf
, b->
idx
);

32 
b
->
idx
 = 0;

34 
b
->
˙t
++;

35 
	}
}

38 
	$v˝rötf
(c⁄° *
fmt
, 
va_li°
 
≠
)

40 
¥ötbuf
 
b
;

42 
b
.
idx
 = 0;

43 
b
.
˙t
 = 0;

44 
	`v¥ötfmt
((*)
putch
, &
b
, 
fmt
, 
≠
);

45 
	`sys_˝uts
(
b
.
buf
, b.
idx
);

47  
b
.
˙t
;

48 
	}
}

51 
	$˝rötf
(c⁄° *
fmt
, ...)

53 
va_li°
 
≠
;

54 
˙t
;

56 
	`va_°¨t
(
≠
, 
fmt
);

57 
˙t
 = 
	`v˝rötf
(
fmt
, 
≠
);

58 
	`va_íd
(
≠
);

60  
˙t
;

61 
	}
}

	@lib/printfmt.c

5 
	~<öc/ty≥s.h
>

6 
	~<öc/°dio.h
>

7 
	~<öc/°rög.h
>

8 
	~<öc/°d¨g.h
>

9 
	~<öc/îr‹.h
>

11 
	#COLOR_WHT
 7

	)

12 
	#COLOR_BLK
 1

	)

13 
	#COLOR_GRN
 2

	)

14 
	#COLOR_RED
 4

	)

15 
	#COLOR_GRY
 8

	)

16 
	#COLOR_YLW
 15

	)

17 
	#COLOR_ORG
 12

	)

18 
	#COLOR_PUR
 6

	)

19 
	#COLOR_CYN
 11

	)

21 
	gch_cﬁ‹
 = 
COLOR_WHT
;

32 c⁄° * c⁄° 
	gîr‹_°rög
[
MAXERROR
 + 1] =

34 
NULL
,

56 
¥öäum
((*
putch
)(, *), *
putd©
,

57 
num
, 
ba£
, 
width
, 
∑dc
)

60 i‡(
num
 >
ba£
) {

61 
	`¥öäum
(
putch
, 
putd©
, 
num
 / 
ba£
, ba£, 
width
 - 1, 
∑dc
);

64 --
width
 > 0)

65 
	`putch
(
∑dc
, 
putd©
);

69 
	`putch
("0123456789abcdef"[
num
 % 
ba£
], 
putd©
);

70 
	}
}

75 
	$gëuöt
(
va_li°
 *
≠
, 
lÊag
)

77 i‡(
lÊag
 >= 2)

78  
	`va_¨g
(*
≠
, );

79 i‡(
lÊag
)

80  
	`va_¨g
(*
≠
, );

82  
	`va_¨g
(*
≠
, );

83 
	}
}

88 
	$gëöt
(
va_li°
 *
≠
, 
lÊag
)

90 i‡(
lÊag
 >= 2)

91  
	`va_¨g
(*
≠
, );

92 i‡(
lÊag
)

93  
	`va_¨g
(*
≠
, );

95  
	`va_¨g
(*
≠
, );

96 
	}
}

100 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...);

103 
	`v¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, 
va_li°
 
≠
)

105 c⁄° *
p
;

106 
ch
, 
îr
;

107 
num
;

108 
ba£
, 
lÊag
, 
width
, 
¥ecisi⁄
, 
ÆtÊag
;

109 
∑dc
;

112 (
ch
 = *(*Ë
fmt
++) != '%') {

113 i‡(
ch
 == '\0')

115 
	`putch
(
ch
, 
putd©
);

119 
∑dc
 = ' ';

120 
width
 = -1;

121 
¥ecisi⁄
 = -1;

122 
lÊag
 = 0;

123 
ÆtÊag
 = 0;

124 
ªswôch
:

125 
ch
 = *(*Ë
fmt
++) {

129 
∑dc
 = '-';

130 
ªswôch
;

134 
∑dc
 = '0';

135 
ªswôch
;

147 
¥ecisi⁄
 = 0; ; ++
fmt
) {

148 
¥ecisi⁄
 =Öªcisi⁄ * 10 + 
ch
 - '0';

149 
ch
 = *
fmt
;

150 i‡(
ch
 < '0' || ch > '9')

153 
¥o˚ss_¥ecisi⁄
;

156 
¥ecisi⁄
 = 
	`va_¨g
(
≠
, );

157 
¥o˚ss_¥ecisi⁄
;

160 i‡(
width
 < 0)

161 
width
 = 0;

162 
ªswôch
;

165 
ÆtÊag
 = 1;

166 
ªswôch
;

168 
¥o˚ss_¥ecisi⁄
:

169 i‡(
width
 < 0)

170 
width
 = 
¥ecisi⁄
,Örecision = -1;

171 
ªswôch
;

175 
lÊag
++;

176 
ªswôch
;

180 
	`putch
(
	`va_¨g
(
≠
, ), 
putd©
);

186 
£l_c
[4];

187 
	`memmove
(
£l_c
, 
fmt
, () * 3);

188 
£l_c
[3] = '\0';

189 
fmt
 += 3;

190 if(
£l_c
[0] >= '0' && sel_c[0] <= '9')

191 
ch_cﬁ‹
 = ((
£l_c
[0] - '0') * 10 + sel_c[1] - '0') * 10 + sel_c[2] - '0';

193 if(
	`°rcmp
 (
£l_c
, "wht") == 0)

194 
ch_cﬁ‹
 = 
COLOR_WHT
;

195 if(
	`°rcmp
 (
£l_c
, "blk") == 0)

196 
ch_cﬁ‹
 = 
COLOR_BLK
;

197 if(
	`°rcmp
 (
£l_c
, "grn") == 0)

198 
ch_cﬁ‹
 = 
COLOR_GRN
;

199 if(
	`°rcmp
 (
£l_c
, "red") == 0)

200 
ch_cﬁ‹
 = 
COLOR_RED
;

201 if(
	`°rcmp
 (
£l_c
, "gry") == 0)

202 
ch_cﬁ‹
 = 
COLOR_GRY
;

203 if(
	`°rcmp
 (
£l_c
, "ylw") == 0)

204 
ch_cﬁ‹
 = 
COLOR_YLW
;

205 if(
	`°rcmp
 (
£l_c
, "org") == 0)

206 
ch_cﬁ‹
 = 
COLOR_ORG
;

207 if(
	`°rcmp
 (
£l_c
, "pur") == 0)

208 
ch_cﬁ‹
 = 
COLOR_PUR
;

209 if(
	`°rcmp
 (
£l_c
, "cyn") == 0)

210 
ch_cﬁ‹
 = 
COLOR_CYN
;

212 
ch_cﬁ‹
 = 
COLOR_WHT
;

223 
îr
 = 
	`va_¨g
(
≠
, );

224 i‡(
îr
 < 0)

225 
îr
 = -err;

226 i‡(
îr
 > 
MAXERROR
 || (
p
 = 
îr‹_°rög
[îr]Ë=
NULL
)

227 
	`¥ötfmt
(
putch
, 
putd©
, "îr‹ %d", 
îr
);

229 
	`¥ötfmt
(
putch
, 
putd©
, "%s", 
p
);

234 i‡((
p
 = 
	`va_¨g
(
≠
, *)Ë=
NULL
)

235 
p
 = "(null)";

236 i‡(
width
 > 0 && 
∑dc
 != '-')

237 
width
 -
	`°∫Àn
(
p
, 
¥ecisi⁄
); width > 0; width--)

238 
	`putch
(
∑dc
, 
putd©
);

239 ; (
ch
 = *
p
++Ë!'\0' && (
¥ecisi⁄
 < 0 || --¥ecisi⁄ >0); 
width
--)

240 i‡(
ÆtÊag
 && (
ch
 < ' ' || ch > '~'))

241 
	`putch
('?', 
putd©
);

243 
	`putch
(
ch
, 
putd©
);

244 ; 
width
 > 0; width--)

245 
	`putch
(' ', 
putd©
);

250 
num
 = 
	`gëöt
(&
≠
, 
lÊag
);

251 i‡((Ë
num
 < 0) {

252 
	`putch
('-', 
putd©
);

253 
num
 = -()Çum;

255 
ba£
 = 10;

256 
numbî
;

260 
num
 = 
	`gëuöt
(&
≠
, 
lÊag
);

261 
ba£
 = 10;

262 
numbî
;

270 
num
 = 
	`gëuöt
(&
≠
, 
lÊag
);

271 
ba£
 = 8;

272 
numbî
;

277 
	`putch
('0', 
putd©
);

278 
	`putch
('x', 
putd©
);

279 
num
 = ()

280 (
uöçå_t
Ë
	`va_¨g
(
≠
, *);

281 
ba£
 = 16;

282 
numbî
;

286 
num
 = 
	`gëuöt
(&
≠
, 
lÊag
);

287 
ba£
 = 16;

288 
numbî
:

289 
	`¥öäum
(
putch
, 
putd©
, 
num
, 
ba£
, 
width
, 
∑dc
);

294 
	`putch
(
ch
, 
putd©
);

299 
	`putch
('%', 
putd©
);

300 
fmt
--; fmt[-1] != '%'; fmt--)

305 
	}
}

308 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...)

310 
va_li°
 
≠
;

312 
	`va_°¨t
(
≠
, 
fmt
);

313 
	`v¥ötfmt
(
putch
, 
putd©
, 
fmt
, 
≠
);

314 
	`va_íd
(
≠
);

315 
	}
}

317 
	s•rötbuf
 {

318 *
	mbuf
;

319 *
	mebuf
;

320 
	m˙t
;

324 
	$•röçutch
(
ch
, 
•rötbuf
 *
b
)

326 
b
->
˙t
++;

327 i‡(
b
->
buf
 < b->
ebuf
)

328 *
b
->
buf
++ = 
ch
;

329 
	}
}

332 
	$v¢¥ötf
(*
buf
, 
n
, c⁄° *
fmt
, 
va_li°
 
≠
)

334 
•rötbuf
 
b
 = {
buf
, buf+
n
-1, 0};

336 i‡(
buf
 =
NULL
 || 
n
 < 1)

337  -
E_INVAL
;

340 
	`v¥ötfmt
((*)
•röçutch
, &
b
, 
fmt
, 
≠
);

343 *
b
.
buf
 = '\0';

345  
b
.
˙t
;

346 
	}
}

349 
	$¢¥ötf
(*
buf
, 
n
, c⁄° *
fmt
, ...)

351 
va_li°
 
≠
;

352 
rc
;

354 
	`va_°¨t
(
≠
, 
fmt
);

355 
rc
 = 
	`v¢¥ötf
(
buf
, 
n
, 
fmt
, 
≠
);

356 
	`va_íd
(
≠
);

358  
rc
;

359 
	}
}

	@lib/readline.c

1 
	~<öc/°dio.h
>

2 
	~<öc/îr‹.h
>

4 
	#BUFLEN
 1024

	)

5 
	gbuf
[
BUFLEN
];

8 
	$ªadlöe
(c⁄° *
¥om±
)

10 
i
, 
c
, 
echoög
;

12 #i‡
JOS_KERNEL


13 i‡(
¥om±
 !
NULL
)

14 
	`˝rötf
("%s", 
¥om±
);

16 i‡(
¥om±
 !
NULL
)

17 
	`Ârötf
(1, "%s", 
¥om±
);

20 
i
 = 0;

21 
echoög
 = 
	`isc⁄s
(0);

23 
c
 = 
	`gëch¨
();

24 i‡(
c
 < 0) {

25 i‡(
c
 !-
E_EOF
)

26 
	`˝rötf
("ªadÉº‹: %e\n", 
c
);

27  
NULL
;

28 } i‡(
c
 >' ' && 
i
 < 
BUFLEN
-1) {

29 i‡(
echoög
)

30 
	`˝utch¨
(
c
);

31 
buf
[
i
++] = 
c
;

32 } i‡(
c
 ='\b' && 
i
 > 0) {

33 i‡(
echoög
)

34 
	`˝utch¨
(
c
);

35 
i
--;

36 } i‡(
c
 == '\n' || c == '\r') {

37 i‡(
echoög
)

38 
	`˝utch¨
(
c
);

39 
buf
[
i
] = 0;

40  
buf
;

43 
	}
}

	@lib/spawn.c

1 
	~<öc/lib.h
>

2 
	~<öc/ñf.h
>

4 
	#UTEMP2USTACK
(
addr
Ë((*Ë◊ddrË+ (
USTACKTOP
 - 
PGSIZE
Ë- 
UTEMP
)

	)

5 
	#UTEMP2
 (
UTEMP
 + 
PGSIZE
)

	)

6 
	#UTEMP3
 (
UTEMP2
 + 
PGSIZE
)

	)

9 
öô_°ack
(
ívid_t
 
chûd
, c⁄° **
¨gv
, 
uöçå_t
 *
öô_e•
);

17 
	$•awn
(c⁄° *
¥og
, c⁄° **
¨gv
)

19 
ñf_buf
[512];

20 
Tøp‰ame
 
chûd_tf
;

21 
ívid_t
 
chûd
;

86 (Ë
chûd
;

87 
	`∑nic
("spawn unimplemented!");

88 
	}
}

92 
	$•aw∆
(c⁄° *
¥og
, c⁄° *
¨g0
, ...)

94  
	`•awn
(
¥og
, &
¨g0
);

95 
	}
}

106 
	$öô_°ack
(
ívid_t
 
chûd
, c⁄° **
¨gv
, 
uöçå_t
 *
öô_e•
)

108 
size_t
 
°rög_size
;

109 
¨gc
, 
i
, 
r
;

110 *
°rög_°‹e
;

111 
uöçå_t
 *
¨gv_°‹e
;

115 
°rög_size
 = 0;

116 
¨gc
 = 0; 
¨gv
[argc] != 0;árgc++)

117 
°rög_size
 +
	`°æí
(
¨gv
[
¨gc
]) + 1;

124 
°rög_°‹e
 = (*Ë
UTEMP
 + 
PGSIZE
 - 
°rög_size
;

127 
¨gv_°‹e
 = (
uöçå_t
*Ë(
	`ROUNDDOWN
(
°rög_°‹e
, 4Ë- 4 * (
¨gc
 + 1));

131 i‡((*Ë(
¨gv_°‹e
 - 2Ë< (*Ë
UTEMP
)

132  -
E_NO_MEM
;

135 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, (*Ë
UTEMP
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

136  
r
;

164 *
öô_e•
 = 
USTACKTOP
;

168 i‡((
r
 = 
	`sys_∑ge_m≠
(0, 
UTEMP
, 
chûd
, (*Ë(
USTACKTOP
 - 
PGSIZE
), 
PTE_P
 | 
PTE_U
 | 
PTE_W
)) < 0)

169 
îr‹
;

170 i‡((
r
 = 
	`sys_∑ge_unm≠
(0, 
UTEMP
)) < 0)

171 
îr‹
;

175 
îr‹
:

176 
	`sys_∑ge_unm≠
(0, 
UTEMP
);

177  
r
;

178 
	}
}

	@lib/string.c

3 
	~<öc/°rög.h
>

6 
	$°æí
(c⁄° *
s
)

8 
n
;

10 
n
 = 0; *
s
 != '\0'; s++)

11 
n
++;

12  
n
;

13 
	}
}

16 
	$°∫Àn
(c⁄° *
s
, 
size_t
 
size
)

18 
n
;

20 
n
 = 0; 
size
 > 0 && *
s
 != '\0'; s++, size--)

21 
n
++;

22  
n
;

23 
	}
}

26 
	$°r˝y
(*
d°
, c⁄° *
§c
)

28 *
ªt
;

30 
ªt
 = 
d°
;

31 (*
d°
++ = *
§c
++) != '\0')

33  
ªt
;

34 
	}
}

37 
	$°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
) {

38 
size_t
 
i
;

39 *
ªt
;

41 
ªt
 = 
d°
;

42 
i
 = 0; i < 
size
; i++) {

43 *
d°
++ = *
§c
;

45 i‡(*
§c
 != '\0')

46 
§c
++;

48  
ªt
;

49 
	}
}

51 
size_t


52 
	$°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
)

54 *
d°_ö
;

56 
d°_ö
 = 
d°
;

57 i‡(
size
 > 0) {

58 --
size
 > 0 && *
§c
 != '\0')

59 *
d°
++ = *
§c
++;

60 *
d°
 = '\0';

62  
d°
 - 
d°_ö
;

63 
	}
}

66 
	$°rcmp
(c⁄° *
p
, c⁄° *
q
)

68 *
p
 && *∞=*
q
)

69 
p
++, 
q
++;

70  (Ë((Ë*
p
 - (Ë*
q
);

71 
	}
}

74 
	$°∫cmp
(c⁄° *
p
, c⁄° *
q
, 
size_t
 
n
)

76 
n
 > 0 && *
p
 && *∞=*
q
)

77 
n
--, 
p
++, 
q
++;

78 i‡(
n
 == 0)

81  (Ë((Ë*
p
 - (Ë*
q
);

82 
	}
}

87 
	$°rchr
(c⁄° *
s
, 
c
)

89 ; *
s
; s++)

90 i‡(*
s
 =
c
)

91  (*Ë
s
;

93 
	}
}

98 
	$°rföd
(c⁄° *
s
, 
c
)

100 ; *
s
; s++)

101 i‡(*
s
 =
c
)

103  (*Ë
s
;

104 
	}
}

108 
	$mem£t
(*
v
, 
c
, 
size_t
 
n
)

110 *
p
;

111 
m
;

113 
p
 = 
v
;

114 
m
 = 
n
;

115 --
m
 >= 0)

116 *
p
++ = 
c
;

118  
v
;

119 
	}
}

124 
	$memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

126 c⁄° *
s
;

127 *
d
;

129 
s
 = 
§c
;

130 
d
 = 
d°
;

131 i‡(
s
 < 
d
 && s + 
n
 > d) {

132 
s
 +
n
;

133 
d
 +
n
;

134 
n
-- > 0)

135 *--
d
 = *--
s
;

137 
n
-- > 0)

138 *
d
++ = *
s
++;

140  
d°
;

141 
	}
}

146 
	$mem˝y
(*
d°
, *
§c
, 
size_t
 
n
)

148  
	`memmove
(
d°
, 
§c
, 
n
);

149 
	}
}

152 
	$memcmp
(c⁄° *
v1
, c⁄° *
v2
, 
size_t
 
n
)

154 c⁄° 
uöt8_t
 *
s1
 = (c⁄° uöt8_à*Ë
v1
;

155 c⁄° 
uöt8_t
 *
s2
 = (c⁄° uöt8_à*Ë
v2
;

157 
n
-- > 0) {

158 i‡(*
s1
 !*
s2
)

159  (Ë*
s1
 - (Ë*
s2
;

160 
s1
++, 
s2
++;

164 
	}
}

167 
	$memföd
(c⁄° *
s
, 
c
, 
size_t
 
n
)

169 c⁄° *
íds
 = (c⁄° *Ë
s
 + 
n
;

170 ; 
s
 < 
íds
; s++)

171 i‡(*(c⁄° *Ë
s
 =(Ë
c
)

173  (*Ë
s
;

174 
	}
}

177 
	$°πﬁ
(c⁄° *
s
, **
íd±r
, 
ba£
)

179 
√g
 = 0;

180 
vÆ
 = 0;

183 *
s
 == ' ' || *s == '\t')

184 
s
++;

187 i‡(*
s
 == '+')

188 
s
++;

189 i‡(*
s
 == '-')

190 
s
++, 
√g
 = 1;

193 i‡((
ba£
 =0 || ba£ =16Ë&& (
s
[0] == '0' && s[1] == 'x'))

194 
s
 +2, 
ba£
 = 16;

195 i‡(
ba£
 =0 && 
s
[0] == '0')

196 
s
++, 
ba£
 = 8;

197 i‡(
ba£
 == 0)

198 
ba£
 = 10;

202 
dig
;

204 i‡(*
s
 >= '0' && *s <= '9')

205 
dig
 = *
s
 - '0';

206 i‡(*
s
 >= 'a' && *s <= 'z')

207 
dig
 = *
s
 - 'a' + 10;

208 i‡(*
s
 >= 'A' && *s <= 'Z')

209 
dig
 = *
s
 - 'A' + 10;

212 i‡(
dig
 >
ba£
)

214 
s
++, 
vÆ
 = (vÆ * 
ba£
Ë+ 
dig
;

218 i‡(
íd±r
)

219 *
íd±r
 = (*Ë
s
;

220  (
√g
 ? -
vÆ
 : val);

221 
	}
}

	@lib/syscall.c

3 
	~<öc/sysˇŒ.h
>

4 
	~<öc/lib.h
>

6 
ölöe
 
öt32_t


7 
	$sysˇŒ
(
num
, 
check
, 
uöt32_t
 
a1
, uöt32_à
a2
, uöt32_à
a3
, uöt32_à
a4
, uöt32_à
a5
)

9 
öt32_t
 
ªt
;

23 
asm
 volatile("int %1\n"

24 : "˜" (
ªt
)

25 : "i" (
T_SYSCALL
),

26 "a" (
num
),

27 "d" (
a1
),

28 "c" (
a2
),

29 "b" (
a3
),

30 "D" (
a4
),

31 "S" (
a5
)

34 if(
check
 && 
ªt
 > 0)

35 
	`∑nic
("sysˇŒ %dÑëu∫ed %d (> 0)", 
num
, 
ªt
);

37  
ªt
;

38 
	}
}

41 
	$sys_˝uts
(c⁄° *
s
, 
size_t
 
Àn
)

43 
	`sysˇŒ
(
SYS_˝uts
, 0, (
uöt32_t
)
s
, 
Àn
, 0, 0, 0);

44 
	}
}

47 
	$sys_cgëc
()

49  
	`sysˇŒ
(
SYS_cgëc
, 0, 0, 0, 0, 0, 0);

50 
	}
}

53 
	$sys_ív_de°roy
(
ívid_t
 
ívid
)

55  
	`sysˇŒ
(
SYS_ív_de°roy
, 1, 
ívid
, 0, 0, 0, 0);

56 
	}
}

58 
ívid_t


59 
	$sys_gëívid
()

61  
	`sysˇŒ
(
SYS_gëívid
, 0, 0, 0, 0, 0, 0);

62 
	}
}

65 
	$sys_yõld
()

67 
	`sysˇŒ
(
SYS_yõld
, 0, 0, 0, 0, 0, 0);

68 
	}
}

71 
	$sys_∑ge_Æloc
(
ívid_t
 
ívid
, *
va
, 
≥rm
)

73  
	`sysˇŒ
(
SYS_∑ge_Æloc
, 1, 
ívid
, (
uöt32_t
Ë
va
, 
≥rm
, 0, 0);

74 
	}
}

77 
	$sys_∑ge_m≠
(
ívid_t
 
§˚nv
, *
§cva
,Énvid_à
d°ív
, *
d°va
, 
≥rm
)

79  
	`sysˇŒ
(
SYS_∑ge_m≠
, 1, 
§˚nv
, (
uöt32_t
Ë
§cva
, 
d°ív
, (uöt32_tË
d°va
, 
≥rm
);

80 
	}
}

83 
	$sys_∑ge_unm≠
(
ívid_t
 
ívid
, *
va
)

85  
	`sysˇŒ
(
SYS_∑ge_unm≠
, 1, 
ívid
, (
uöt32_t
Ë
va
, 0, 0, 0);

86 
	}
}

91 
	$sys_ív_£t_¥i‹ôy
(
ívid_t
 
ívid
, 
¥i‹ôy
)

93  
	`sysˇŒ
(
SYS_ív_£t_¥i‹ôy
, 1, 
ívid
, 
¥i‹ôy
, 0, 0, 0);

94 
	}
}

97 
	$sys_ív_£t_°©us
(
ívid_t
 
ívid
, 
°©us
)

99  
	`sysˇŒ
(
SYS_ív_£t_°©us
, 1, 
ívid
, 
°©us
, 0, 0, 0);

100 
	}
}

103 
	$sys_ív_£t_å≠‰ame
(
ívid_t
 
ívid
, 
Tøp‰ame
 *
tf
)

105  
	`sysˇŒ
(
SYS_ív_£t_å≠‰ame
, 1, 
ívid
, (
uöt32_t
Ë
tf
, 0, 0, 0);

106 
	}
}

109 
	$sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ívid
, *
upˇŒ
)

111  
	`sysˇŒ
(
SYS_ív_£t_pgÁu…_upˇŒ
, 1, 
ívid
, (
uöt32_t
Ë
upˇŒ
, 0, 0, 0);

112 
	}
}

115 
	$sys_ùc_åy_£nd
(
ívid_t
 
ívid
, 
uöt32_t
 
vÆue
, *
§cva
, 
≥rm
)

117  
	`sysˇŒ
(
SYS_ùc_åy_£nd
, 0, 
ívid
, 
vÆue
, (
uöt32_t
Ë
§cva
, 
≥rm
, 0);

118 
	}
}

121 
	$sys_ùc_ªcv
(*
d°va
)

123  
	`sysˇŒ
(
SYS_ùc_ªcv
, 1, (
uöt32_t
)
d°va
, 0, 0, 0, 0);

124 
	}
}

	@user/cat.c

1 
	~<öc/lib.h
>

3 
	gbuf
[8192];

6 
	$ˇt
(
f
, *
s
)

8 
n
;

9 
r
;

11 (
n
 = 
	`ªad
(
f
, 
buf
, ()(buf))) > 0)

12 i‡((
r
 = 
	`wrôe
(1, 
buf
, 
n
)) !=Ç)

13 
	`∑nic
("wrôêîr‹ c›yög %s: %e", 
s
, 
r
);

14 i‡(
n
 < 0)

15 
	`∑nic
("îr‹Ñódög %s: %e", 
s
, 
n
);

16 
	}
}

19 
	$umaö
(
¨gc
, **
¨gv
)

21 
f
, 
i
;

23 
¨gv0
 = "cat";

24 i‡(
¨gc
 == 1)

25 
	`ˇt
(0, "<stdin>");

27 
i
 = 1; i < 
¨gc
; i++) {

28 
f
 = 
	`›í
(
¨gv
[
i
], 
O_RDONLY
);

29 i‡(
f
 < 0)

30 
	`∑nic
("ˇn'à›í %s: %e", 
¨gv
[
i
], 
f
);

32 
	`ˇt
(
f
, 
¨gv
[
i
]);

33 
	`˛o£
(
f
);

36 
	}
}

	@user/echo.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 
i
, 
nÊag
;

8 
nÊag
 = 0;

9 i‡(
¨gc
 > 1 && 
	`°rcmp
(
¨gv
[1], "-n") == 0) {

10 
nÊag
 = 1;

11 
¨gc
--;

12 
¨gv
++;

14 
i
 = 1; i < 
¨gc
; i++) {

15 i‡(
i
 > 1)

16 
	`wrôe
(1, " ", 1);

17 
	`wrôe
(1, 
¨gv
[
i
], 
	`°æí
(argv[i]));

19 i‡(!
nÊag
)

20 
	`wrôe
(1, "\n", 1);

21 
	}
}

	@user/faultwrite.c

3 
	~<öc/lib.h
>

6 
	$umaö
()

9 
	}
}

	@user/forktree.c

3 
	~<öc/lib.h
>

5 
	#DEPTH
 3

	)

7 
f‹kåì
(c⁄° *
cur
);

10 
	$f‹kchûd
(c⁄° *
cur
, 
bønch
)

12 
nxt
[
DEPTH
+1];

14 i‡(
	`°æí
(
cur
Ë>
DEPTH
)

17 
	`¢¥ötf
(
nxt
, 
DEPTH
+1, "%s%c", 
cur
, 
bønch
);

18 i‡(
	`f‹k
() == 0) {

19 
	`f‹kåì
(
nxt
);

20 
	`exô
();

22 
	}
}

25 
	$f‹kåì
(c⁄° *
cur
)

27 
	`˝rötf
("%04x: Iám '%s'\n", 
	`sys_gëívid
(), 
cur
);

29 
	`f‹kchûd
(
cur
, '0');

30 
	`f‹kchûd
(
cur
, '1');

31 
	}
}

34 
	$umaö
()

36 
	`f‹kåì
("");

37 
	}
}

	@user/hello.c

2 
	~<öc/lib.h
>

5 
	$umaö
()

7 
	`˝rötf
("hello, world\n");

8 
	`˝rötf
("òamÉnvú⁄míà%08x\n", 
ív
->
ív_id
);

9 
	}
}

	@user/icode.c

1 
	~<öc/lib.h
>

4 
	$umaö
()

6 
fd
, 
n
, 
r
;

7 
buf
[512+1];

9 
	`˝rötf
("icode startup\n");

11 
	`˝rötf
("icode: open /motd\n");

12 i‡((
fd
 = 
	`›í
("/mŸd", 
O_RDONLY
)) < 0)

13 
	`∑nic
("icode: o≥¿/mŸd: %e", 
fd
);

15 
	`˝rötf
("icode:Ñead /motd\n");

16 (
n
 = 
	`ªad
(
fd
, 
buf
,  buf-1)) > 0)

17 
	`sys_˝uts
(
buf
, 
n
);

19 
	`˝rötf
("icode: close /motd\n");

20 
	`˛o£
(
fd
);

22 
	`˝rötf
("icode: spawn /init\n");

23 i‡((
r
 = 
	`•aw∆
("/init", "init", "initarg1", "initarg2", (*)0)) < 0)

24 
	`∑nic
("icode: s∑w¿/öô: %e", 
r
);

26 
	`˝rötf
("icode:Éxiting\n");

27 
	}
}

	@user/idle.c

3 
	~<öc/x86.h
>

4 
	~<öc/lib.h
>

7 
	$umaö
()

9 
bö¨y«me
 = "idle";

17 
	`sys_yõld
();

27 
	`bªakpoöt
();

29 
	}
}

	@user/init.c

1 
	~<öc/lib.h
>

4 
	mmsg1
[5000];

5 
	mmsg2
[1000];

6 } 
	gd©a
 = {

11 
	gbss
[6000];

14 
	$sum
(c⁄° *
s
, 
n
)

16 
i
, 
tŸ
 = 0;

17 
i
 = 0; i < 
n
; i++)

18 
tŸ
 ^
i
 * 
s
[i];

19  
tŸ
;

20 
	}
}

23 
	$umaö
(
¨gc
, **
¨gv
)

25 
i
, 
r
, 
x
, 
w™t
;

27 
	`˝rötf
("init:Ñunning\n");

29 
w™t
 = 0xf989e;

30 i‡((
x
 = 
	`sum
((*)&
d©a
,  d©a)Ë!
w™t
)

31 
	`˝rötf
("init: data isÇot initialized: got sum %08x wanted %08x\n",

32 
x
, 
w™t
);

34 
	`˝rötf
("init: data seems okay\n");

35 i‡((
x
 = 
	`sum
(
bss
,  bss)) != 0)

36 
	`˝rötf
("bs†i†nŸ inôülized: w™ãd sum 0 gŸ %08x\n", 
x
);

38 
	`˝rötf
("init: bss seems okay\n");

40 
	`˝rötf
("init:árgs:");

41 
i
 = 0; i < 
¨gc
; i++)

42 
	`˝rötf
(" '%s'", 
¨gv
[
i
]);

43 
	`˝rötf
("\n");

45 
	`˝rötf
("init:Éxiting\n");

46 
	}
}

	@user/initsh.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 
i
, 
r
, 
x
, 
w™t
;

8 
	`˝rötf
("initsh:Ñunning sh\n");

11 
	`˛o£
(0);

12 i‡((
r
 = 
	`›íc⁄s
()) < 0)

13 
	`∑nic
("›íc⁄s: %e", 
r
);

14 i‡(
r
 != 0)

15 
	`∑nic
("fú° o≥nc⁄†u£d fd %d", 
r
);

16 i‡((
r
 = 
	`dup
(0, 1)) < 0)

17 
	`∑nic
("dup: %e", 
r
);

19 
	`˝rötf
("init: starting sh\n");

20 
r
 = 
	`•aw∆
("/sh", "sh", (*)0);

21 i‡(
r
 < 0) {

22 
	`˝rötf
("öô: s∑w¿sh: %e\n", 
r
);

25 
	`waô
(
r
);

27 
	}
}

	@user/ls.c

1 
	~<öc/lib.h
>

3 
	gÊag
[256];

5 
lsdú
(const *, const *);

6 
ls1
(c⁄° *, 
boﬁ
, 
off_t
, const *);

9 
	$ls
(c⁄° *
∑th
, c⁄° *
¥efix
)

11 
r
;

12 
Sèt
 
°
;

14 i‡((
r
 = 
	`°©
(
∑th
, &
°
)) < 0)

15 
	`∑nic
("°© %s: %e", 
∑th
, 
r
);

16 i‡(
°
.
°_isdú
 && !
Êag
['d'])

17 
	`lsdú
(
∑th
, 
¥efix
);

19 
	`ls1
(0, 
°
.
°_isdú
, st.
°_size
, 
∑th
);

20 
	}
}

23 
	$lsdú
(c⁄° *
∑th
, c⁄° *
¥efix
)

25 
fd
, 
n
;

26 
Fûe
 
f
;

28 i‡((
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
)) < 0)

29 
	`∑nic
("›í %s: %e", 
∑th
, 
fd
);

30 (
n
 = 
	`ªadn
(
fd
, &
f
,  f)) ==  f)

31 i‡(
f
.
f_«me
[0])

32 
	`ls1
(
¥efix
, 
f
.
f_ty≥
==
FTYPE_DIR
, f.
f_size
, f.
f_«me
);

33 i‡(
n
 > 0)

34 
	`∑nic
("sh‹àªad i¿dúe˘‹y %s", 
∑th
);

35 i‡(
n
 < 0)

36 
	`∑nic
("îr‹Ñódög dúe˘‹y %s: %e", 
∑th
, 
n
);

37 
	}
}

40 
	$ls1
(c⁄° *
¥efix
, 
boﬁ
 
isdú
, 
off_t
 
size
, c⁄° *
«me
)

42 *
£p
;

44 if(
Êag
['l'])

45 
	`Ârötf
(1, "%11d %¯", 
size
, 
isdú
 ? 'd' : '-');

46 if(
¥efix
) {

47 i‡(
¥efix
[0] &&Öªfix[
	`°æí
(prefix)-1] != '/')

48 
£p
 = "/";

50 
£p
 = "";

51 
	`Ârötf
(1, "%s%s", 
¥efix
, 
£p
);

53 
	`Ârötf
(1, "%s", 
«me
);

54 if(
Êag
['F'] && 
isdú
)

55 
	`Ârötf
(1, "/");

56 
	`Ârötf
(1, "\n");

57 
	}
}

60 
	$ußge
()

62 
	`Ârötf
(1, "usage:Üs [-dFl] [file...]\n");

63 
	`exô
();

64 
	}
}

67 
	$umaö
(
¨gc
, **
¨gv
)

69 
i
;

71 
ARGBEGIN
{

73 
	`ußge
();

77 
Êag
[(
uöt8_t
)
	`ARGC
()]++;

79 }
ARGEND


81 i‡(
¨gc
 == 0)

82 
	`ls
("/", "");

84 
i
=0; i<
¨gc
; i++)

85 
	`ls
(
¨gv
[
i
],árgv[i]);

87 
	}
}

	@user/lsfd.c

1 
	~<öc/lib.h
>

4 
	$ußge
()

6 
	`˝rötf
("usage:Üsfd [-1]\n");

7 
	`exô
();

8 
	}
}

11 
	$umaö
(
¨gc
, **
¨gv
)

13 
i
, 
u£Âröt
 = 0;

14 
Sèt
 
°
;

16 
ARGBEGIN
{

18 
	`ußge
();

20 
u£Âröt
 = 1;

22 }
ARGEND


24 
i
 = 0; i < 32; i++)

25 i‡(
	`f°©
(
i
, &
°
) >= 0) {

26 i‡(
u£Âröt
)

27 
	`Ârötf
(1, "fd %d:Çame %s isdir %d size %d dev %s\n",

28 
i
, 
°
.
°_«me
, st.
°_isdú
,

29 
°
.
°_size
, st.
°_dev
->
dev_«me
);

31 
	`˝rötf
("fd %d:Çame %s isdir %d size %d dev %s\n",

32 
i
, 
°
.
°_«me
, st.
°_isdú
,

33 
°
.
°_size
, st.
°_dev
->
dev_«me
);

35 
	}
}

	@user/num.c

1 
	~<öc/lib.h
>

3 
	gbﬁ
 = 1;

4 
	glöe
 = 0;

7 
	$num
(
f
, *
s
)

9 
n
;

10 
r
;

11 
c
;

13 (
n
 = 
	`ªad
(
f
, &
c
, 1)) > 0) {

14 i‡(
bﬁ
) {

15 
	`Ârötf
(1, "%5d ", ++
löe
);

16 
bﬁ
 = 0;

18 i‡((
r
 = 
	`wrôe
(1, &
c
, 1)) != 1)

19 
	`∑nic
("wrôêîr‹ c›yög %s: %e", 
s
, 
r
);

20 i‡(
c
 == '\n')

21 
bﬁ
 = 1;

23 i‡(
n
 < 0)

24 
	`∑nic
("îr‹Ñódög %s: %e", 
s
, 
n
);

25 
	}
}

28 
	$umaö
(
¨gc
, **
¨gv
)

30 
f
, 
i
;

32 
¨gv0
 = "num";

33 i‡(
¨gc
 == 1)

34 
	`num
(0, "<stdin>");

36 
i
 = 1; i < 
¨gc
; i++) {

37 
f
 = 
	`›í
(
¨gv
[
i
], 
O_RDONLY
);

38 i‡(
f
 < 0)

39 
	`∑nic
("ˇn'à›í %s: %e", 
¨gv
[
i
], 
f
);

41 
	`num
(
f
, 
¨gv
[
i
]);

42 
	`˛o£
(
f
);

45 
	`exô
();

46 
	}
}

	@user/pingpong.c

4 
	~<öc/lib.h
>

7 
	$umaö
()

9 
ívid_t
 
who
;

11 i‡((
who
 = 
	`f‹k
()) != 0) {

13 
	`˝rötf
("£nd 0 from %xÅÿ%x\n", 
	`sys_gëívid
(), 
who
);

14 
	`ùc_£nd
(
who
, 0, 0, 0);

18 
uöt32_t
 
i
 = 
	`ùc_ªcv
(&
who
, 0, 0);

19 
	`˝rötf
("%x gŸ %d from %x\n", 
	`sys_gëívid
(), 
i
, 
who
);

20 i‡(
i
 == 10)

22 
i
++;

23 
	`ùc_£nd
(
who
, 
i
, 0, 0);

24 i‡(
i
 == 10)

27 
	}
}

	@user/primes.c

11 
	~<öc/lib.h
>

14 
	$¥imïroc
()

16 
i
, 
id
, 
p
;

17 
ívid_t
 
ívid
;

20 
t›
:

21 
p
 = 
	`ùc_ªcv
(&
ívid
, 0, 0);

22 
	`˝rötf
("%d ", 
p
);

25 i‡((
id
 = 
	`f‹k
()) < 0)

26 
	`∑nic
("f‹k: %e", 
id
);

27 i‡(
id
 == 0)

28 
t›
;

32 
i
 = 
	`ùc_ªcv
(&
ívid
, 0, 0);

33 i‡(
i
 % 
p
)

34 
	`ùc_£nd
(
id
, 
i
, 0, 0);

36 
	}
}

39 
	$umaö
()

41 
i
, 
id
;

44 i‡((
id
 = 
	`f‹k
()) < 0)

45 
	`∑nic
("f‹k: %e", 
id
);

46 i‡(
id
 == 0)

47 
	`¥imïroc
();

50 
i
 = 2; ; i++)

51 
	`ùc_£nd
(
id
, 
i
, 0, 0);

52 
	}
}

	@user/primespipe.c

11 
	~<öc/lib.h
>

14 
	$¥imïroc
(
fd
)

16 
i
, 
id
, 
p
, 
pfd
[2], 
wfd
, 
r
;

19 
t›
:

20 i‡((
r
 = 
	`ªadn
(
fd
, &
p
, 4)) != 4)

21 
	`∑nic
("¥imïro¯couldÇŸÑód inôü»¥ime: %d, %e", 
r
,Ñ >= 0 ? 0 :Ñ);

23 
	`˝rötf
("%d\n", 
p
);

26 i‡((
i
=
	`pùe
(
pfd
)) < 0)

27 
	`∑nic
("pùe: %e", 
i
);

28 i‡((
id
 = 
	`f‹k
()) < 0)

29 
	`∑nic
("f‹k: %e", 
id
);

30 i‡(
id
 == 0) {

31 
	`˛o£
(
fd
);

32 
	`˛o£
(
pfd
[1]);

33 
fd
 = 
pfd
[0];

34 
t›
;

37 
	`˛o£
(
pfd
[0]);

38 
wfd
 = 
pfd
[1];

42 i‡((
r
=
	`ªadn
(
fd
, &
i
, 4)) != 4)

43 
	`∑nic
("¥imïro¯%dÑód¿%d %d %e", 
p
, 
fd
, 
r
,Ñ >= 0 ? 0 :Ñ);

44 i‡(
i
%
p
)

45 i‡((
r
=
	`wrôe
(
wfd
, &
i
, 4)) != 4)

46 
	`∑nic
("¥imïro¯%d wrôe: %d %e", 
p
, 
r
,Ñ >= 0 ? 0 :Ñ);

48 
	}
}

51 
	$umaö
()

53 
i
, 
id
, 
p
[2], 
r
;

55 
¨gv0
 = "primespipe";

57 i‡((
i
=
	`pùe
(
p
)) < 0)

58 
	`∑nic
("pùe: %e", 
i
);

61 i‡((
id
=
	`f‹k
()) < 0)

62 
	`∑nic
("f‹k: %e", 
id
);

64 i‡(
id
 == 0) {

65 
	`˛o£
(
p
[1]);

66 
	`¥imïroc
(
p
[0]);

69 
	`˛o£
(
p
[0]);

72 
i
=2;; i++)

73 i‡((
r
=
	`wrôe
(
p
[1], &
i
, 4)) != 4)

74 
	`∑nic
("gíî©‹ wrôe: %d, %e", 
r
,Ñ >= 0 ? 0 :Ñ);

75 
	}
}

	@user/spawnhello.c

1 
	~<öc/lib.h
>

4 
	$umaö
()

6 
r
;

7 
	`˝rötf
("òamÖ¨íàívú⁄míà%08x\n", 
ív
->
ív_id
);

8 i‡((
r
 = 
	`•aw∆
("hello", "hello", 0)) < 0)

9 
	`∑nic
("•awn(hñloËÁûed: %e", 
r
);

10 
	}
}

	@user/spawninit.c

1 
	~<öc/lib.h
>

4 
	$umaö
()

6 
r
;

7 
	`˝rötf
("òamÖ¨íàívú⁄míà%08x\n", 
ív
->
ív_id
);

8 i‡((
r
 = 
	`•aw∆
("init", "init", "one", "two", 0)) < 0)

9 
	`∑nic
("•aw∆(öôËÁûed: %e", 
r
);

10 
	}
}

	@user/testfsipc.c

1 
	~<öc/lib.h
>

4 
	$°ªcmp
(c⁄° *
a
, c⁄° *
b
)

6 *
b
)

7 i‡(*
a
++ !*
b
++)

10 
	}
}

12 c⁄° *
	gmsg
 = "This isÅhe NEW message ofÅhe day!\n\n";

14 
	#FVA
 (
Fd
*)0xCCCCC000

	)

17 
	$umaö
()

19 
r
;

20 
fûeid
;

21 
Fd
 *
fd
;

23 i‡((
r
 = 
	`fsùc_›í
("/nŸ-found", 
O_RDONLY
, 
FVA
)Ë< 0 &&Ñ !-
E_NOT_FOUND
)

24 
	`∑nic
("£rve_›í /nŸ-found: %e", 
r
);

25 i‡(
r
 == 0)

26 
	`∑nic
("serve_open /not-found succeeded!");

28 i‡((
r
 = 
	`fsùc_›í
("/√wmŸd", 
O_RDONLY
, 
FVA
)) < 0)

29 
	`∑nic
("£rve_›í /√wmŸd: %e", 
r
);

30 
fd
 = (
Fd
*Ë
FVA
;

31 i‡(
	`°æí
(
msg
Ë!
fd
->
fd_fûe
.
fûe
.
f_size
)

32 
	`∑nic
("£rve_›íÑëu∫ed sizê%d w™ãd %d\n", 
fd
->
fd_fûe
.
fûe
.
f_size
, 
	`°æí
(
msg
));

33 
	`˝rötf
("serve_open is good\n");

35 i‡((
r
 = 
	`fsùc_m≠
(
fd
->
fd_fûe
.
id
, 0, 
UTEMP
)) < 0)

36 
	`∑nic
("£rve_m≠: %e", 
r
);

37 i‡(
	`°ªcmp
(
UTEMP
, 
msg
) != 0)

38 
	`∑nic
("serve_mapÑeturned wrong data");

39 
	`˝rötf
("serve_map is good\n");

41 i‡((
r
 = 
	`fsùc_˛o£
(
fd
->
fd_fûe
.
id
)) < 0)

42 
	`∑nic
("£rve_˛o£: %e", 
r
);

43 
	`˝rötf
("serve_close is good\n");

44 
fûeid
 = 
fd
->
fd_fûe
.
id
;

45 
	`sys_∑ge_unm≠
(0, (*Ë
FVA
);

47 i‡((
r
 = 
	`fsùc_m≠
(
fûeid
, 0, 
UTEMP
)Ë!-
E_INVAL
)

48 
	`∑nic
("serve_map doesÇot handle stale fileids correctly");

49 
	`˝rötf
("stale fileid is good\n");

50 
	}
}

	@user/testpmap.c

3 
	~<öc/lib.h
>

5 
	g£quí˚_Àngth
 = 16;

6 
	g£quí˚
[] = { 0, 1, 1, 2, 3,

11 
	$m¨k_∑ge
(* 
pg
, 
i
) {

12 
	`mem£t
(
pg
, 0, 
PGSIZE
);

16 
j
;

17 
j
 = 0; j < 
£quí˚_Àngth
; j++)

18 
pg
[
j
] = 
i
 + 
£quí˚
[j];

19 
	}
}

22 
	$ã°_∑ge
(* 
pg
, 
i
) {

23 
j
;

24 
j
 = 0; j < 
£quí˚_Àngth
; j++)

25 i‡(
pg
[
j
] !
i
 + 
£quí˚
[j])

29 
	}
}

32 
	$¥öt_m¨ked_∑ge
(* 
pg
) {

33 
j
;

34 
j
 = 0; j < (
£quí˚_Àngth
-1); j++)

35 
	`˝rötf
("%d, ", 
pg
[
j
]);

37 
	`˝rötf
("%d", 
pg
[
j
]);

38 
	}
}

41 
	$¥öt_ex≥˘ed_m¨k
(
i
) {

42 
j
;

43 
j
 = 0; j < (
£quí˚_Àngth
-1); j++)

44 
	`˝rötf
("%d, ", 
£quí˚
[
j
]+
i
);

46 
	`˝rötf
("%d", 
£quí˚
[
j
]+
i
);

47 
	}
}

49 
	gn
, 
	gva
, 
	gr
, 
	göôva
, 
	gmax∑
, 
	gmaxva
, 
	gmaxnum
, 
	gÁûuªs
;

50 *
	g∑ge_id
;

53 
	$Æloc_ønge
(
öôaddr
, 
max∑
, 
°¨ä
) {

54 
n
 = 
°¨ä
;

55 
maxnum
 = 
max∑
 / 
PGSIZE
;

56 
öôva
 = 
öôaddr
;

57 
maxva
 = 
öôva
 + 
max∑
;

59 
	`˝rötf
 ("[%08x]ÅryögÅÿÆlo¯∑ge†öÑ™gê[%08x, %08x]\n", 
ív
->
ív_id
, 
öôva
, 
maxva
);

63 
va
 = 
öôva
; v®< 
maxva
; v®+
PGSIZE
, 
n
++) {

65 i‡((
r
 = 
	`sys_mem_Æloc
(0, 
va
, 
PTE_P
 | 
PTE_U
 | 
PTE_W
 | 
PTE_AVAIL
)) < 0) {

73 
	`m¨k_∑ge
((*)
va
, 
n
);

75 i‡–(((
va
 - 
öôva
Ë/ 
PGSIZE
Ë% 128Ë=0Ë
	`˝rötf
(".");

77 
	`˝rötf
("\n");

79 
	`˝rötf
("[%08x]ábÀÅÿÆloˇã [%d]Öage†o‡ªque°ed [%d]Öages\n", 
ív
->
ív_id
, 
n
, 
maxnum
);

81 
maxva
 = 
va
;

82  
n
;

83 
	}
}

86 
	$ã°_ønge
(
°¨tva
, 
ídva
, 
°¨ä
) {

87 
c
;

88 
	`˝rötf
("[%08x]Åe°ögÖage†ö [%08x, %08x]Åÿ£êi‡theyÜook okay\n", 
ív
->
ív_id
, 
°¨tva
, 
ídva
);

89 
n
 = 
°¨ä
;

90 
Áûuªs
 = 0;

91 
va
 = 
°¨tva
, 
c
 = 0; v®< 
ídva
; v®+
PGSIZE
, 
n
++, c++) {

92 
∑ge_id
 = (*)
va
;

94 i‡(
	`ã°_∑ge
((*)
va
, 
n
)) {

95 
	`˝rötf
("\n[%08x] u√x≥˘ed vÆuê© [%08x]:\¿ {", 
ív
->
ív_id
, 
va
);

96 
	`¥öt_m¨ked_∑ge
((*)
va
);

97 
	`˝rötf
("} should be\n {");

98 
	`¥öt_ex≥˘ed_m¨k
(
n
);

99 
	`˝rötf
("}");

101 
Áûuªs
++;

103 
Pã
 
±e
 = 
v±
[
	`VPN
(
va
)];

104 
≥rm
 = (
PTE_U
 | 
PTE_P
 | 
PTE_W
 | 
PTE_AVAIL
);

106 i‡((
±e
 & 
≥rm
) !=Öerm) {

107 
	`˝rötf
("\n[%08x] u√x≥˘ed PTEÖîmissi⁄†[04x] f‹áddªs†[%08x]\¿{", 
ív
->
ív_id
, 
±e
 & 
≥rm
, 
va
);

108 
Áûuªs
++;

118 i‡–(((
va
 - 
°¨tva
Ë/ 
PGSIZE
Ë% 128Ë=0Ë
	`˝rötf
(".");

121 
	`˝rötf
("\n");

123 
	`˝rötf
("[%08x]Åe°ed %dÖages: %d faûedás£πi⁄s.\n", 
ív
->
ív_id
, 
c
, 
Áûuªs
);

125  
Áûuªs
;

126 
	}
}

129 
	$unm≠_ønge
(
°¨tva
, 
ídva
) {

130 
	`˝rötf
("[%08x] unm≠pögÑ™gê[%08x, %08x].\n", 
ív
->
ív_id
, 
°¨tva
, 
ídva
);

131 
xva
, 
z
;

132 
z
=0, 
xva
 = 
°¨tva
; xv®< 
ídva
; xv®+
PGSIZE
, z++) {

133 
	`sys_mem_unm≠
(0, 
xva
);

135 
	`˝rötf
("[%08x] unm≠≥d %dÖages.\n", 
ív
->
ív_id
, 
z
);

136 
	}
}

139 
	$du∂iˇã_ønge
(
°¨tva
, 
du≥va
, 
nbyãs
) {

140 
	`˝rötf
("[%08x] duplicatingÑange [%08x, %08x]át [%08x, %08x]\n",

141 
ív
->
ív_id
, 
°¨tva
, sèπva+
nbyãs
, 
du≥va
, dupeva+nbytes);

142 
xva
, 
r
, 
k
;

143 
xva
 = 0, 
k
 = 0; xv®< 
nbyãs
; xv®+
PGSIZE
, k+=PGSIZE) {

144 i‡((
r
 = 
	`sys_mem_m≠
(0, 
°¨tva
+
xva
, 0, 
du≥va
+xva, 
PTE_P
 | 
PTE_U
 | 
PTE_W
 | 
PTE_USER
)) < 0) {

145 
	`˝rötf
 ("[%08x] du∂iˇã_øngêFAILURE: %e\n", 
ív
->
ív_id
, 
r
);

146  
r
;

150  
k
;

151 
	}
}

157 
	$umaö
(
¨gc
, **
¨gv
)

159 
max
, 
max2
, 
k
, 
j
, 
i
, 
du≥size
, 
du≥n
;

161 
i
 = 0; i < 2; i++) {

162 
	`˝rötf
("PMAPTEST[%08x] sèπög ROUND %d.\n", 
ív
->
ív_id
, 
i
);

165 
k
 = 
	`Æloc_ønge
(
UTEXT
+
PDMAP
, (256 * 1024 * 1024), 0);

166 
max
 = 
maxva
;

167 
	`ã°_ønge
(
UTEXT
+
PDMAP
, 
max
, 0);

170 
	`˝rötf
("PMAPTEST[%08x] yõldög...\n", 
ív
->
ív_id
);

171 
	`sys_yõld
();

172 
	`˝rötf
("PMAPTEST[%08x] back.\n", 
ív
->
ív_id
);

175 
	`unm≠_ønge
(
max
-16 * 
PGSIZE
, max);

176 
max
 -16 * 
PGSIZE
;

179 
	`unm≠_ønge
(
max
 - 
PDMAP
, max);

180 
j
 = 
	`Æloc_ønge
(
max
 - 
PDMAP
, PDMAP, 0);

181 
max2
 = 
maxva
;

182 
	`ã°_ønge
(
max
 - 
PDMAP
, 
max2
, 0);

185 
du≥size
 = 
	`du∂iˇã_ønge
(
max2
-
PDMAP
, 
max
+PDMAP, 
j
*
PGSIZE
);

186 
	`ã°_ønge
(
max2
-
PDMAP
, max2-PDMAP+
du≥size
, 0);

187 
	`ã°_ønge
(
max
+
PDMAP
, max + PDMAP + 
du≥size
, 0);

188 
du≥n
 = *((*)(
max
+
PDMAP
));

191 
	`unm≠_ønge
(
max2
-
PDMAP
, max2-PDMAP+
du≥size
);

192 
j
 = 
	`Æloc_ønge
(
max2
-
PDMAP
, PDMAP, 0);

193 
	`unm≠_ønge
(
max2
-2*
PDMAP
, max2 - PDMAP);

194 
j
 = 
	`Æloc_ønge
(
max2
-2*
PDMAP
, PDMAP, 0);

198 
	`ã°_ønge
(
UTEXT
+
PDMAP
, 
max2
-2*PDMAP, 0);

199 
	`ã°_ønge
(
max2
-2*
PDMAP
, 
maxva
, 0);

200 
	`ã°_ønge
(
max
+
PDMAP
, max + PDMAP + 
du≥size
, 
du≥n
);

203 
	`unm≠_ønge
(
UTEXT
+
PDMAP
, 
maxva
);

204 
	`unm≠_ønge
(
max
+
PDMAP
, max+PDMAP+
du≥size
);

209 
	}
}

	@user/writemotd.c

1 
	~<öc/lib.h
>

4 
	$umaö
()

6 
rfd
, 
wfd
;

7 
buf
[512];

8 
n
, 
r
;

10 i‡((
rfd
 = 
	`›í
("/√wmŸd", 
O_RDONLY
)) < 0)

11 
	`∑nic
("›í /√wmŸd: %e", 
rfd
);

12 i‡((
wfd
 = 
	`›í
("/mŸd", 
O_RDWR
)) < 0)

13 
	`∑nic
("›í /mŸd: %e", 
wfd
);

14 
	`˝rötf
("fûêdes¸ùt‹†%d %d\n", 
rfd
, 
wfd
);

15 i‡(
rfd
 =
wfd
)

16 
	`∑nic
("open /newmotdánd /motd give same file descriptor");

18 
	`˝rötf
("OLD MOTD\n===\n");

19 (
n
 = 
	`ªad
(
wfd
, 
buf
,  buf-1)) > 0)

20 
	`sys_˝uts
(
buf
, 
n
);

21 
	`˝rötf
("===\n");

22 
	`£ek
(
wfd
, 0);

24 i‡((
r
 = 
	`·runˇã
(
wfd
, 0)) < 0)

25 
	`∑nic
("åunˇã /mŸd: %e", 
r
);

27 
	`˝rötf
("NEW MOTD\n===\n");

28 (
n
 = 
	`ªad
(
rfd
, 
buf
,  buf-1)) > 0) {

29 
	`sys_˝uts
(
buf
, 
n
);

30 i‡((
r
 = 
	`wrôe
(
wfd
, 
buf
, 
n
)) !=Ç)

31 
	`∑nic
("wrôê/mŸd: %e", 
r
);

33 
	`˝rötf
("===\n");

35 i‡(
n
 < 0)

36 
	`∑nic
("ªad /√wmŸd: %e", 
n
);

38 
	`˛o£
(
rfd
);

39 
	`˛o£
(
wfd
);

40 
	}
}

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/dirent.h

24 #i‚def 
_DIRENT_H


25 
	#_DIRENT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifde‡
__USE_XOPEN


34 #i‚de‡
__öo_t_deföed


35 #i‚de‡
__USE_FILE_OFFSET64


36 
__öo_t
 
	töo_t
;

38 
__öo64_t
 
	töo_t
;

40 
	#__öo_t_deföed


	)

42 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


43 
__öo64_t
 
	töo64_t
;

44 
	#__öo64_t_deföed


	)

63 
	~<bôs/dúít.h
>

65 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


66 
	#d_öo
 
d_fûío


	)

83 #ifde‡
_DIRENT_HAVE_D_NAMLEN


84 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

85 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

87 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

88 #ifde‡
_DIRENT_HAVE_D_RECLEN


89 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

91 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

92 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

97 #ifde‡
__USE_BSD


101 
	mDT_UNKNOWN
 = 0,

102 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

103 
	mDT_FIFO
 = 1,

104 
	#DT_FIFO
 
DT_FIFO


	)

105 
	mDT_CHR
 = 2,

106 
	#DT_CHR
 
DT_CHR


	)

107 
	mDT_DIR
 = 4,

108 
	#DT_DIR
 
DT_DIR


	)

109 
	mDT_BLK
 = 6,

110 
	#DT_BLK
 
DT_BLK


	)

111 
	mDT_REG
 = 8,

112 
	#DT_REG
 
DT_REG


	)

113 
	mDT_LNK
 = 10,

114 
	#DT_LNK
 
DT_LNK


	)

115 
	mDT_SOCK
 = 12,

116 
	#DT_SOCK
 
DT_SOCK


	)

117 
	mDT_WHT
 = 14

118 
	#DT_WHT
 
DT_WHT


	)

122 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

123 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

129 
__dú°ªam
 
	tDIR
;

136 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

138 #ifde‡
__USE_XOPEN2K8


143 
DIR
 *
	`fd›ídú
 (
__fd
);

151 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

163 #i‚de‡
__USE_FILE_OFFSET64


164 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__REDIRECT


167 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

168 
	`__n⁄nuŒ
 ((1));

170 
	#ªaddú
 
ªaddú64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


184 #i‚de‡
__USE_FILE_OFFSET64


185 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

186 
dúít
 *
__ª°ri˘
 
__íåy
,

187 
dúít
 **
__ª°ri˘
 
__ªsu…
)

188 
	`__n⁄nuŒ
 ((1, 2, 3));

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
ªaddú_r
,

192 (
DIR
 *
__ª°ri˘
 
__dúp
,

193 
dúít
 *
__ª°ri˘
 
__íåy
,

194 
dúít
 **
__ª°ri˘
 
__ªsu…
),

195 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

197 
	#ªaddú_r
 
ªaddú64_r


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

203 
dúít64
 *
__ª°ri˘
 
__íåy
,

204 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

205 
	`__n⁄nuŒ
 ((1, 2, 3));

210 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


213 
	~<bôs/ty≥s.h
>

216 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


225 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


228 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

231 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


232 #i‚de‡
MAXNAMLEN


234 
	~<bôs/posix1_lim.h
>

237 #ifde‡
NAME_MAX


238 
	#MAXNAMLEN
 
NAME_MAX


	)

240 
	#MAXNAMLEN
 255

	)

245 
	#__√ed_size_t


	)

246 
	~<°ddef.h
>

255 #i‚de‡
__USE_FILE_OFFSET64


256 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

257 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

258 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

259 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

260 
__c⁄°
 
dúít
 **))

261 
	`__n⁄nuŒ
 ((1, 2));

263 #ifde‡
__REDIRECT


264 
	`__REDIRECT
 (
sˇndú
,

265 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

266 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

267 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

268 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

269 
__c⁄°
 
dúít
 **)),

270 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

272 
	#sˇndú
 
sˇndú64


	)

276 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


279 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

280 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

281 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

282 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

283 
__c⁄°
 
dúít64
 **))

284 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__USE_GNU


293 #i‚de‡
__USE_FILE_OFFSET64


294 
	`sˇndú©
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

295 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

296 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

297 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

298 
__c⁄°
 
dúít
 **))

299 
	`__n⁄nuŒ
 ((2, 3));

301 #ifde‡
__REDIRECT


302 
	`__REDIRECT
 (
sˇndú©
,

303 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

304 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

305 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

306 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

307 
__c⁄°
 
dúít
 **)),

308 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

310 
	#sˇndú©
 
sˇndú©64


	)

316 
	`sˇndú©64
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

317 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

318 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

319 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

320 
__c⁄°
 
dúít64
 **))

321 
	`__n⁄nuŒ
 ((2, 3));

325 #i‚de‡
__USE_FILE_OFFSET64


326 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

327 
__c⁄°
 
dúít
 **
__e2
)

328 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

330 #ifde‡
__REDIRECT


331 
	`__REDIRECT_NTH
 (
Æphas‹t
,

332 (
__c⁄°
 
dúít
 **
__e1
,

333 
__c⁄°
 
dúít
 **
__e2
),

334 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 
	#Æphas‹t
 
Æphas‹t64


	)

340 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


341 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

342 
__c⁄°
 
dúít64
 **
__e2
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


353 #i‚de‡
__USE_FILE_OFFSET64


354 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

355 
size_t
 
__nbyãs
,

356 
__off_t
 *
__ª°ri˘
 
__ba£p
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

359 #ifde‡
__REDIRECT


360 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

361 (
__fd
, *
__ª°ri˘
 
__buf
,

362 
size_t
 
__nbyãs
,

363 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

364 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

366 
	#gëdúíåõs
 
gëdúíåõs64


	)

370 #ifde‡
__USE_LARGEFILE64


371 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

372 
size_t
 
__nbyãs
,

373 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

374 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

378 #ifde‡
__USE_GNU


380 #i‚de‡
__USE_FILE_OFFSET64


381 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

382 
__c⁄°
 
dúít
 **
__e2
)

383 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__REDIRECT


386 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

387 (
__c⁄°
 
dúít
 **
__e1
,

388 
__c⁄°
 
dúít
 **
__e2
),

389 
vîsi⁄s‹t64
)

390 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

392 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

396 #ifde‡
__USE_LARGEFILE64


397 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

398 
__c⁄°
 
dúít64
 **
__e2
)

399 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

403 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
118
1727
boot/boot.S
boot/main.c
fs/fs.c
fs/fs.h
fs/fsformat.c
fs/ide.c
fs/serv.c
fs/test.c
inc/args.h
inc/assert.h
inc/elf.h
inc/env.h
inc/error.h
inc/fd.h
inc/fs.h
inc/isareg.h
inc/kbdreg.h
inc/lib.h
inc/malloc.h
inc/memlayout.h
inc/mmu.h
inc/queue.h
inc/stab.h
inc/stdarg.h
inc/stdio.h
inc/string.h
inc/syscall.h
inc/timerreg.h
inc/trap.h
inc/types.h
inc/x86.h
kern/console.c
kern/console.h
kern/entry.S
kern/env.c
kern/env.h
kern/init.c
kern/kclock.c
kern/kclock.h
kern/kdebug.c
kern/kdebug.h
kern/monitor.c
kern/monitor.h
kern/picirq.c
kern/picirq.h
kern/pmap.c
kern/pmap.h
kern/printf.c
kern/sched.c
kern/sched.h
kern/syscall.c
kern/syscall.h
kern/trap.c
kern/trap.h
kern/trapentry.S
lib/console.c
lib/entry.S
lib/exit.c
lib/fd.c
lib/file.c
lib/fork.c
lib/fprintf.c
lib/fsipc.c
lib/ipc.c
lib/libmain.c
lib/pageref.c
lib/panic.c
lib/pfentry.S
lib/pgfault.c
lib/printf.c
lib/printfmt.c
lib/readline.c
lib/spawn.c
lib/string.c
lib/syscall.c
user/cat.c
user/echo.c
user/faultwrite.c
user/forktree.c
user/hello.c
user/icode.c
user/idle.c
user/init.c
user/initsh.c
user/ls.c
user/lsfd.c
user/num.c
user/pingpong.c
user/primes.c
user/primespipe.c
user/spawnhello.c
user/spawninit.c
user/testfsipc.c
user/testpmap.c
user/writemotd.c
/usr/include/assert.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/stdint.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
